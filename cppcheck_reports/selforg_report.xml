<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.17.1"/>
    <errors>
        <error id="missingInclude" severity="information" msg="Include file: &quot;plotoptionengine.h&quot; not found." verbose="Include file: &quot;plotoptionengine.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wiredcontroller.h" line="31" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;backcaller.h&quot; not found." verbose="Include file: &quot;backcaller.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wiredcontroller.h" line="32" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;types.h&quot; not found." verbose="Include file: &quot;types.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wiredcontroller.h" line="33" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;inspectable.h&quot; not found." verbose="Include file: &quot;inspectable.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wiredcontroller.h" line="34" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;configurable.h&quot; not found." verbose="Include file: &quot;configurable.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wiredcontroller.h" line="35" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;randomgenerator.h&quot; not found." verbose="Include file: &quot;randomgenerator.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wiredcontroller.h" line="36" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;randomgenerator.h&quot; not found." verbose="Include file: &quot;randomgenerator.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/agent.h" line="32" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;types.h&quot; not found." verbose="Include file: &quot;types.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/agent.h" line="36" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;trackrobots.h&quot; not found." verbose="Include file: &quot;trackrobots.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/agent.h" line="37" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;configurable.h&quot; not found." verbose="Include file: &quot;configurable.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/abstractrobot.h" line="32" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;position.h&quot; not found." verbose="Include file: &quot;position.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/abstractrobot.h" line="33" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;sensormotorinfo.h&quot; not found." verbose="Include file: &quot;sensormotorinfo.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/abstractrobot.h" line="34" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;abstractcontroller.h&quot; not found." verbose="Include file: &quot;abstractcontroller.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/agent.cpp" line="32" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;abstractwiring.h&quot; not found." verbose="Include file: &quot;abstractwiring.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/agent.cpp" line="33" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;callbackable.h&quot; not found." verbose="Include file: &quot;callbackable.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/agent.cpp" line="35" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;WiredController&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;WiredController&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/agent.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wiredcontroller.h" line="63" column="3"/>
            <symbol>WiredController</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;WiredController&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;WiredController&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/agent.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wiredcontroller.h" line="67" column="3"/>
            <symbol>WiredController</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Agent&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Agent&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/agent.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/agent.h" line="57" column="3"/>
            <symbol>Agent</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Agent&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Agent&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/agent.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/agent.h" line="61" column="3"/>
            <symbol>Agent</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Position&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Position&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/agent.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/position.h" line="36" column="3"/>
            <symbol>Position</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~AbstractRobot&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~AbstractRobot&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/agent.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/abstractrobot.h" line="55" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/trackable.h" line="48" column="12" info="Virtual destructor in base class"/>
            <symbol>~AbstractRobot</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getTrackableName&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getTrackableName&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/agent.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/abstractrobot.h" line="78" column="23" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/trackable.h" line="52" column="23" info="Virtual function in base class"/>
            <symbol>getTrackableName</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;configurable.h&quot; not found." verbose="Include file: &quot;configurable.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractcontroller.h" line="30" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;inspectable.h&quot; not found." verbose="Include file: &quot;inspectable.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractcontroller.h" line="31" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;storeable.h&quot; not found." verbose="Include file: &quot;storeable.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractcontroller.h" line="32" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;randomgenerator.h&quot; not found." verbose="Include file: &quot;randomgenerator.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractcontroller.h" line="33" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;sensormotorinfo.h&quot; not found." verbose="Include file: &quot;sensormotorinfo.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractcontroller.h" line="34" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;controller_misc.h&quot; not found." verbose="Include file: &quot;controller_misc.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractiafcontroller.h" line="27" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;controller_misc.h&quot; not found." verbose="Include file: &quot;controller_misc.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractiafcontroller.cpp" line="23" column="0"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Configurable::parent&apos; is not initialized in the constructor." verbose="Member variable &apos;Configurable::parent&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/controller/abstractiafcontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/configurable.h" line="138" column="5"/>
            <symbol>Configurable::parent</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Configurable::parent&apos; is not initialized in the constructor." verbose="Member variable &apos;Configurable::parent&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/controller/abstractiafcontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/configurable.h" line="143" column="5"/>
            <symbol>Configurable::parent</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;join&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;join&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/controller/abstractiafcontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/stl_adds.h" line="95" column="5"/>
            <symbol>join</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;matchId&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;matchId&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/controller/abstractiafcontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/configurable.h" line="127" column="9"/>
            <symbol>matchId</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;AbstractIAFController&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;AbstractIAFController&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/controller/abstractiafcontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractiafcontroller.h" line="72" column="3"/>
            <symbol>AbstractIAFController</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~Matrix&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~Matrix&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/controller/abstractiafcontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/matrix.h" line="88" column="6" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/storeable.h" line="35" column="12" info="Virtual destructor in base class"/>
            <symbol>~Matrix</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;store&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;store&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/controller/abstractiafcontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/matrix.h" line="163" column="10" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/storeable.h" line="38" column="16" info="Virtual function in base class"/>
            <symbol>store</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;restore&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;restore&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/controller/abstractiafcontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/matrix.h" line="168" column="10" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/storeable.h" line="42" column="16" info="Virtual function in base class"/>
            <symbol>restore</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~Configurable&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~Configurable&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/controller/abstractiafcontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/configurable.h" line="156" column="14" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/backcaller.h" line="54" column="14" info="Virtual destructor in base class"/>
            <symbol>~Configurable</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~AbstractIAFController&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~AbstractIAFController&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/controller/abstractiafcontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractiafcontroller.h" line="74" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/configurable.h" line="156" column="14" info="Virtual destructor in base class"/>
            <symbol>~AbstractIAFController</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;list&apos; should be passed by const reference." verbose="Parameter &apos;list&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/controller/abstractiafcontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/stl_adds.h" line="110" column="29" info="Function parameter &apos;list&apos; should be passed by const reference."/>
            <symbol>list</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;c&apos; can be declared as pointer to const" verbose="Parameter &apos;c&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/controller/abstractiafcontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/configurable.h" line="132" column="39" info="Parameter &apos;c&apos; can be declared as pointer to const"/>
            <symbol>c</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/controller/abstractiafcontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/stl_adds.h" line="121" column="11"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;init&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;init&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/controller/abstractmulticontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractcontrolleradapter.h" line="79" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractcontroller.h" line="58" column="16" info="Virtual function in base class"/>
            <symbol>init</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSensorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSensorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/controller/abstractmulticontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractcontrolleradapter.h" line="85" column="15" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractcontroller.h" line="62" column="15" info="Virtual function in base class"/>
            <symbol>getSensorNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMotorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMotorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/controller/abstractmulticontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractcontrolleradapter.h" line="89" column="15" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractcontroller.h" line="66" column="15" info="Virtual function in base class"/>
            <symbol>getMotorNumber</symbol>
        </error>
        <error id="uselessOverride" severity="style" msg="The function &apos;store&apos; overrides a function in a base class but is identical to the overridden function" verbose="The function &apos;store&apos; overrides a function in a base class but is identical to the overridden function" file0="/Users/jerry/lpzrobot_mac/selforg/controller/abstractmulticontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractmulticontroller.h" line="127" column="22" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractcontrolleradapter.h" line="141" column="16" info="Virtual function in base class"/>
            <symbol>store</symbol>
        </error>
        <error id="uselessOverride" severity="style" msg="The function &apos;restore&apos; overrides a function in a base class but is identical to the overridden function" verbose="The function &apos;restore&apos; overrides a function in a base class but is identical to the overridden function" file0="/Users/jerry/lpzrobot_mac/selforg/controller/abstractmulticontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractmulticontroller.h" line="131" column="22" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractcontrolleradapter.h" line="146" column="16" info="Virtual function in base class"/>
            <symbol>restore</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/controller/abstractmulticontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractmulticontroller.cpp" line="48" column="104"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/classicreinforce.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/classicreinforce.cpp" line="34" column="34"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;matrix.h&quot; not found." verbose="Include file: &quot;matrix.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/invertablemodel.h" line="27" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;matrix.h&quot; not found." verbose="Include file: &quot;matrix.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractmodel.h" line="27" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;configurable.h&quot; not found." verbose="Include file: &quot;configurable.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractmodel.h" line="28" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;storeable.h&quot; not found." verbose="Include file: &quot;storeable.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractmodel.h" line="29" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;inspectable.h&quot; not found." verbose="Include file: &quot;inspectable.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractmodel.h" line="30" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;randomgenerator.h&quot; not found." verbose="Include file: &quot;randomgenerator.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/abstractmodel.h" line="31" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;controller_misc.h&quot; not found." verbose="Include file: &quot;controller_misc.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/feedforwardnn.h" line="28" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;controller_misc.h&quot; not found." verbose="Include file: &quot;controller_misc.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/controllernet.cpp" line="26" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;)&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;)&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/controllernet.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/invertablemodel.h" line="30" column="148"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/crossmotorcoupling.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/crossmotorcoupling.h" line="53" column="130"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/dep.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/ringbuffer.h" line="35" column="33"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;controller_misc.h&quot; not found." verbose="Include file: &quot;controller_misc.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/homeokinbase.h" line="24" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;controller_misc.h&quot; not found." verbose="Include file: &quot;controller_misc.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/invertmotorcontroller.h" line="25" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;matrix.h&quot; not found." verbose="Include file: &quot;matrix.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/derbigcontroller.h" line="27" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;noisegenerator.h&quot; not found." verbose="Include file: &quot;noisegenerator.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/derbigcontroller.h" line="28" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/derbigcontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/homeokinbase.h" line="102" column="26"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;matrix.h&quot; not found." verbose="Include file: &quot;matrix.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/dercontroller.h" line="32" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;noisegenerator.h&quot; not found." verbose="Include file: &quot;noisegenerator.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/dercontroller.h" line="33" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;matrix.h&quot; not found." verbose="Include file: &quot;matrix.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/derinf.h" line="27" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;noisegenerator.h&quot; not found." verbose="Include file: &quot;noisegenerator.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/derinf.h" line="29" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;matrix.h&quot; not found." verbose="Include file: &quot;matrix.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/derlininvert.h" line="27" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;noisegenerator.h&quot; not found." verbose="Include file: &quot;noisegenerator.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/derlininvert.h" line="29" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;matrix.h&quot; not found." verbose="Include file: &quot;matrix.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/derlinunivers.h" line="52" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;matrix.h&quot; not found." verbose="Include file: &quot;matrix.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/derpseudosensor.h" line="27" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;noisegenerator.h&quot; not found." verbose="Include file: &quot;noisegenerator.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/derpseudosensor.h" line="29" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;position.h&quot; not found." verbose="Include file: &quot;position.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/derpseudosensor.h" line="32" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/discretecontrolleradapter.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/discretecontrolleradapter.cpp" line="234" column="47"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;controller_misc.h&quot; not found." verbose="Include file: &quot;controller_misc.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/elman.cpp" line="26" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;)&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;)&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/esn.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/invertablemodel.h" line="30" column="148"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;matrix.h&quot; not found." verbose="Include file: &quot;matrix.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/invertmotorbigmodel.h" line="28" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;noisegenerator.h&quot; not found." verbose="Include file: &quot;noisegenerator.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/invertmotorbigmodel.h" line="29" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;controller_misc.h&quot; not found." verbose="Include file: &quot;controller_misc.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/invertnchannelcontroller.cpp" line="21" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;controller_misc.h&quot; not found." verbose="Include file: &quot;controller_misc.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/invertnchannelcontroller.h" line="24" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/invertnchannelcontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/invertnchannelcontroller.cpp" line="251" column="32"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;backcaller.h&quot; not found." verbose="Include file: &quot;backcaller.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/measureadapter.h" line="28" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;statistictools.h&quot; not found." verbose="Include file: &quot;statistictools.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/measureadapter.h" line="29" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;complexmeasure.h&quot; not found." verbose="Include file: &quot;complexmeasure.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/measureadapter.h" line="30" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/measureadapter.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/measureadapter.cpp" line="41" column="31"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;matrix.h&quot; not found." verbose="Include file: &quot;matrix.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/motorbabbler.h" line="29" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;controller_misc.h&quot; not found." verbose="Include file: &quot;controller_misc.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/motorbabbler.cpp" line="29" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;)&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;)&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/motorbabbler.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/motorbabbler.cpp" line="36" column="109"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;controller_misc.h&quot; not found." verbose="Include file: &quot;controller_misc.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/multilayerffnn.cpp" line="26" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;matrix.h&quot; not found." verbose="Include file: &quot;matrix.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/mutualinformationcontroller.h" line="28" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;controller_misc.h&quot; not found." verbose="Include file: &quot;controller_misc.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/mutualinformationcontroller.cpp" line="25" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;}&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;}&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/mutualinformationcontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/mutualinformationcontroller.cpp" line="200" column="1"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;controller_misc.h&quot; not found." verbose="Include file: &quot;controller_misc.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/neuralgas.h" line="28" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/neuralgas.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/neuralgas.cpp" line="44" column="91"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;invertmotorcontroller.h&quot; not found." verbose="Include file: &quot;invertmotorcontroller.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/old_stuff/dersimple.h" line="22" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;matrix.h&quot; not found." verbose="Include file: &quot;matrix.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/old_stuff/dersimple.h" line="27" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;noisegenerator.h&quot; not found." verbose="Include file: &quot;noisegenerator.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/old_stuff/dersimple.h" line="28" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;invertablemodel.h&quot; not found." verbose="Include file: &quot;invertablemodel.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/old_stuff/dersimple.h" line="29" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;regularisation.h&quot; not found." verbose="Include file: &quot;regularisation.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/old_stuff/dersimple.cpp" line="22" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;invertmotornstep.h&quot; not found." verbose="Include file: &quot;invertmotornstep.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/old_stuff/dersimple.cpp" line="23" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;invertmotorcontroller.h&quot; not found." verbose="Include file: &quot;invertmotorcontroller.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/old_stuff/dersimple.cpp" line="24" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;)&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;)&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/old_stuff/dersimple.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/old_stuff/dersimple.h" line="186" column="97"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;OneActiveMultiPassiveController::passiveMotors&apos; is not initialized in the constructor." verbose="Member variable &apos;OneActiveMultiPassiveController::passiveMotors&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/controller/oneactivemultipassivecontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/oneactivemultipassivecontroller.cpp" line="29" column="34"/>
            <symbol>OneActiveMultiPassiveController::passiveMotors</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;OneActiveMultiPassiveController&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;OneActiveMultiPassiveController&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/controller/oneactivemultipassivecontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/oneactivemultipassivecontroller.h" line="39" column="9"/>
            <symbol>OneActiveMultiPassiveController</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/controller/oneactivemultipassivecontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/oneactivemultipassivecontroller.cpp" line="58" column="107"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/controller/oneactivemultipassivecontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/oneactivemultipassivecontroller.cpp" line="68" column="107"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/onecontrollerperchannel.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/onecontrollerperchannel.cpp" line="35" column="104"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;randomgenerator.h&quot; not found." verbose="Include file: &quot;randomgenerator.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/onelayerffnn.h" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;controller_misc.h&quot; not found." verbose="Include file: &quot;controller_misc.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/onelayerffnn.cpp" line="3" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;)&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;)&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/pimax.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/pimax.cpp" line="32" column="89"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;matrix.h&quot; not found." verbose="Include file: &quot;matrix.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/qlearning.h" line="27" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;configurable.h&quot; not found." verbose="Include file: &quot;configurable.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/qlearning.h" line="28" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;storeable.h&quot; not found." verbose="Include file: &quot;storeable.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/qlearning.h" line="29" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;randomgenerator.h&quot; not found." verbose="Include file: &quot;randomgenerator.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/qlearning.h" line="30" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;controller_misc.h&quot; not found." verbose="Include file: &quot;controller_misc.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/qlearning.cpp" line="26" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/qlearning.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/qlearning.cpp" line="33" column="99"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/semox.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/homeokinbase.h" line="102" column="26"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;controller_misc.h&quot; not found." verbose="Include file: &quot;controller_misc.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/sinecontroller.cpp" line="29" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/sinecontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/sinecontroller.cpp" line="35" column="41"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;controller_misc.h&quot; not found." verbose="Include file: &quot;controller_misc.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/som.h" line="28" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/som.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/som.cpp" line="40" column="113"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;controller_misc.h&quot; not found." verbose="Include file: &quot;controller_misc.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/soml.cpp" line="21" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/sos.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/sos.cpp" line="25" column="97"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/sox.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/sox.cpp" line="26" column="27"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/soxexpand.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/soxexpand.cpp" line="25" column="67"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/splitcontrol.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/splitcontrol.cpp" line="37" column="104"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/switchcontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/switchcontroller.cpp" line="31" column="77"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;matrix.h&quot; not found." verbose="Include file: &quot;matrix.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/universalcontroller.h" line="32" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/controller/use_java_controller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/controller/use_java_controller.cpp" line="40" column="27"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/examples/integration/cmdline.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/examples/integration/cmdline.cpp" line="12" column="84"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/examples/integration/cmdline.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/examples/integration/cmdline.cpp" line="31" column="69"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/examples/integration/cmdline.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/examples/integration/cmdline.cpp" line="41" column="58"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/examples/integration/cmdline.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/examples/integration/cmdline.cpp" line="48" column="11"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="/Users/jerry/lpzrobot_mac/selforg/examples/rl_test.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/examples/rl_test.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;storeable.h&quot; not found." verbose="Include file: &quot;storeable.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/matrix/matrix.h" line="22" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="syntax error: +)" verbose="syntax error: +)" file0="/Users/jerry/lpzrobot_mac/selforg/matrix/benchmark_matrix.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/matrix/benchmark_matrix.cpp" line="94" column="76"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/matrix/matrix.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/matrix/matrix.cpp" line="169" column="26"/>
        </error>
        <error id="syntaxError" severity="error" msg="syntax error" verbose="syntax error" file0="/Users/jerry/lpzrobot_mac/selforg/matrix/matrixutils.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/matrix/matrixutils.cpp" line="126" column="37"/>
        </error>
        <error id="assertWithSideEffect" severity="warning" msg="Assert statement calls a function which may have desired side effects: &apos;read&apos;." verbose="Non-pure function: &apos;read&apos; is called inside assert statement. Assert statements are removed from release builds so the code inside assert statement is not executed. If the code is needed also in release builds, this is a bug." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/matrix/test_matrix.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/matrix/test_matrix.cpp" line="182" column="14"/>
            <symbol>read</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/cmdline.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/cmdline.cpp" line="11" column="84"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="0" column="0"/>
        </error>
        <error id="returnNonBoolInBooleanFunction" severity="style" msg="Non-boolean value returned from function returning bool" verbose="Non-boolean value returned from function returning bool" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="151" column="7"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TrackRobot::enabledDuringVideo&apos; is not initialized in the constructor." verbose="Member variable &apos;TrackRobot::enabledDuringVideo&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/trackrobots.h" line="68" column="3"/>
            <symbol>TrackRobot::enabledDuringVideo</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;conf&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;conf&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/trackrobots.h" line="103" column="5"/>
            <symbol>conf</symbol>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;setFilter&apos; is called from constructor &apos;PlotOption(PlotMode mode,int interval=1,std::string parameter=std::string()&apos; at line 90. Dynamic binding is not used." verbose="Virtual function &apos;setFilter&apos; is called from constructor &apos;PlotOption(PlotMode mode,int interval=1,std::string parameter=std::string()&apos; at line 90. Dynamic binding is not used." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/plotoption.h" line="102" column="16" info="setFilter is a virtual function"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/plotoption.h" line="90" column="7" info="Calling setFilter"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Inspectable&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Inspectable&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/inspectable.h" line="107" column="3"/>
            <symbol>Inspectable</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;matchName&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;matchName&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/inspectable.h" line="95" column="5"/>
            <symbol>matchName</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;SensorMotorInfo&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;SensorMotorInfo&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/sensormotorinfo.h" line="38" column="3"/>
            <symbol>SensorMotorInfo</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;PlotOption&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;PlotOption&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/plotoption.h" line="86" column="3"/>
            <symbol>PlotOption</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;matchMode&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;matchMode&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/plotoption.h" line="112" column="5"/>
            <symbol>matchMode</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;PlotOptionEngine&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;PlotOptionEngine&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/plotoptionengine.h" line="41" column="3"/>
            <symbol>PlotOptionEngine</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;PlotOptionEngine&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;PlotOptionEngine&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/plotoptionengine.h" line="42" column="3"/>
            <symbol>PlotOptionEngine</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;WiredController&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;WiredController&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/wiredcontroller.h" line="63" column="3"/>
            <symbol>WiredController</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;WiredController&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;WiredController&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/wiredcontroller.h" line="67" column="3"/>
            <symbol>WiredController</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TrackRobot&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TrackRobot&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/trackrobots.h" line="68" column="3"/>
            <symbol>TrackRobot</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Agent&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Agent&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/agent.h" line="57" column="3"/>
            <symbol>Agent</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Agent&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Agent&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/agent.h" line="61" column="3"/>
            <symbol>Agent</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~WiredController&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~WiredController&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/wiredcontroller.h" line="71" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/inspectable.h" line="110" column="12" info="Virtual destructor in base class"/>
            <symbol>~WiredController</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~AbstractRobot&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~AbstractRobot&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractrobot.h" line="55" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/trackable.h" line="48" column="12" info="Virtual destructor in base class"/>
            <symbol>~AbstractRobot</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getTrackableName&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getTrackableName&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractrobot.h" line="78" column="23" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/trackable.h" line="52" column="23" info="Virtual function in base class"/>
            <symbol>getTrackableName</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="98" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="233" column="13"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="350" column="10" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="317" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="360" column="7" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="317" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;name&apos; should be passed by const reference." verbose="Parameter &apos;name&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/inspectable.h" line="95" column="27" info="Function parameter &apos;name&apos; should be passed by const reference."/>
            <symbol>name</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;l&apos; should be passed by const reference." verbose="Parameter &apos;l&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/inspectable.h" line="97" column="28" info="Function parameter &apos;l&apos; should be passed by const reference."/>
            <symbol>l</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;_name&apos; should be passed by const reference." verbose="Parameter &apos;_name&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/sensormotorinfo.h" line="42" column="3" info="Function parameter &apos;_name&apos; should be passed by const reference."/>
            <symbol>_name</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;parameter&apos; should be passed by const reference." verbose="Parameter &apos;parameter&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/plotoption.h" line="86" column="60" info="Function parameter &apos;parameter&apos; should be passed by const reference."/>
            <symbol>parameter</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;filter&apos; should be passed by const reference." verbose="Parameter &apos;filter&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/plotoption.h" line="86" column="97" info="Function parameter &apos;filter&apos; should be passed by const reference."/>
            <symbol>filter</symbol>
        </error>
        <error id="passedByValueCallback" severity="performance" msg="Function parameter &apos;conf&apos; should be passed by const reference. However it seems that &apos;TrackRobot&apos; is a callback function." verbose="Parameter &apos;conf&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/trackrobots.h" line="68" column="29" info="Function parameter &apos;conf&apos; should be passed by const reference. However it seems that &apos;TrackRobot&apos; is a callback function."/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/trackrobots.h" line="60" column="7" info="Function pointer used here."/>
            <symbol>conf</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="282" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="65" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="300" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="413" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="71" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="419" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;name&apos; can be declared as pointer to const" verbose="Parameter &apos;name&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="166" column="30" info="Parameter &apos;name&apos; can be declared as pointer to const"/>
            <symbol>name</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;p&apos; can be declared as pointer to const" verbose="Variable &apos;p&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="168" column="9" info="Variable &apos;p&apos; can be declared as pointer to const"/>
            <symbol>p</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="300" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="419" column="46" info="Parameter &apos;line&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>line</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="419" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="317" column="11"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="328" column="10"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="345" column="8"/>
            <symbol>i</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="83" column="84"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ColorNormalNoise::factor&apos; is not initialized in the constructor." verbose="Member variable &apos;ColorNormalNoise::factor&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="215" column="3"/>
            <symbol>ColorNormalNoise::factor</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;AbstractWiring::noisenumber&apos; is not initialized in the constructor." verbose="Member variable &apos;AbstractWiring::noisenumber&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractwiring.h" line="50" column="3"/>
            <symbol>AbstractWiring::noisenumber</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;AbstractWiring::randGen&apos; is not initialized in the constructor." verbose="Member variable &apos;AbstractWiring::randGen&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractwiring.h" line="50" column="3"/>
            <symbol>AbstractWiring::randGen</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;pos&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;pos&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp" line="35" column="5"/>
            <symbol>pos</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;speed&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;speed&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp" line="36" column="5"/>
            <symbol>speed</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;MyRobot&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;MyRobot&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp" line="33" column="5"/>
            <symbol>MyRobot</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;MyRobot&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;MyRobot&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp" line="33" column="5"/>
            <symbol>MyRobot</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;ColorUniformNoise&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;ColorUniformNoise&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="165" column="3"/>
            <symbol>ColorUniformNoise</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;ColorNormalNoise&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;ColorNormalNoise&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="215" column="3"/>
            <symbol>ColorNormalNoise</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;PiMax&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;PiMax&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/pimax.h" line="64" column="3"/>
            <symbol>PiMax</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;One2OneWiring&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;One2OneWiring&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/one2onewiring.h" line="40" column="3"/>
            <symbol>One2OneWiring</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~NoNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~NoNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="121" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="46" column="12" info="Virtual destructor in base class"/>
            <symbol>~NoNoise</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="122" column="18" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="78" column="18" info="Virtual function in base class"/>
            <symbol>generate</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~WhiteUniformNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~WhiteUniformNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="132" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="46" column="12" info="Virtual destructor in base class"/>
            <symbol>~WhiteUniformNoise</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="133" column="18" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="78" column="18" info="Virtual function in base class"/>
            <symbol>generate</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~WhiteNormalNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~WhiteNormalNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="144" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="46" column="12" info="Virtual destructor in base class"/>
            <symbol>~WhiteNormalNoise</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="145" column="18" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="78" column="18" info="Virtual function in base class"/>
            <symbol>generate</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~ColorUniformNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~ColorUniformNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="171" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="46" column="12" info="Virtual destructor in base class"/>
            <symbol>~ColorUniformNoise</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;init&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;init&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="172" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="61" column="16" info="Virtual function in base class"/>
            <symbol>init</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="180" column="18" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="78" column="18" info="Virtual function in base class"/>
            <symbol>generate</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;add&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;add&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="190" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="85" column="16" info="Virtual function in base class"/>
            <symbol>add</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~ColorNormalNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~ColorNormalNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="222" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="144" column="12" info="Virtual destructor in base class"/>
            <symbol>~ColorNormalNoise</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;init&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;init&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="224" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="61" column="16" info="Virtual function in base class"/>
            <symbol>init</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="232" column="18" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="145" column="18" info="Virtual function in base class"/>
            <symbol>generate</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;add&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;add&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="237" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="85" column="16" info="Virtual function in base class"/>
            <symbol>add</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~SineWhiteNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~SineWhiteNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="275" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="46" column="12" info="Virtual destructor in base class"/>
            <symbol>~SineWhiteNoise</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="277" column="18" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="78" column="18" info="Virtual function in base class"/>
            <symbol>generate</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;add&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;add&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="285" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="85" column="16" info="Virtual function in base class"/>
            <symbol>add</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~AbstractWiring&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~AbstractWiring&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractwiring.h" line="63" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/inspectable.h" line="110" column="12" info="Virtual destructor in base class"/>
            <symbol>~AbstractWiring</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~MyRobot&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~MyRobot&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp" line="43" column="4" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractrobot.h" line="55" column="12" info="Virtual destructor in base class"/>
            <symbol>~MyRobot</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSensors&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSensors&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp" line="55" column="15" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractrobot.h" line="62" column="15" info="Virtual function in base class"/>
            <symbol>getSensors</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setMotors&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setMotors&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp" line="65" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractrobot.h" line="68" column="16" info="Virtual function in base class"/>
            <symbol>setMotors</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSensorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSensorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp" line="111" column="15" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractrobot.h" line="72" column="15" info="Virtual function in base class"/>
            <symbol>getSensorNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMotorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMotorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp" line="114" column="15" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractrobot.h" line="76" column="15" info="Virtual function in base class"/>
            <symbol>getMotorNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getPosition&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getPosition&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp" line="118" column="20" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/trackable.h" line="57" column="20" info="Virtual function in base class"/>
            <symbol>getPosition</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSpeed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSpeed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp" line="123" column="20" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/trackable.h" line="62" column="20" info="Virtual function in base class"/>
            <symbol>getSpeed</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getAngularSpeed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getAngularSpeed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp" line="126" column="20" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/trackable.h" line="67" column="20" info="Virtual function in base class"/>
            <symbol>getAngularSpeed</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getOrientation&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getOrientation&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp" line="131" column="26" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/trackable.h" line="72" column="26" info="Virtual function in base class"/>
            <symbol>getOrientation</symbol>
        </error>
        <error id="nullPointerOutOfMemory" severity="warning" msg="If memory allocation fails, then there is a possible null pointer dereference: mean" verbose="If memory allocation fails, then there is a possible null pointer dereference: mean" cwe="476" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="176" column="9" info="Null pointer dereference"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="174" column="12" info="Assignment &apos;mean=(double*)malloc(sizeof(double)*dimension)&apos;, assigned value is 0"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="174" column="27" info="Assuming allocation function fails"/>
            <symbol>mean</symbol>
        </error>
        <error id="nullPointerOutOfMemory" severity="warning" msg="If memory allocation fails, then there is a possible null pointer dereference: mean" verbose="If memory allocation fails, then there is a possible null pointer dereference: mean" cwe="476" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="228" column="9" info="Null pointer dereference"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="226" column="12" info="Assignment &apos;mean=(double*)malloc(sizeof(double)*dimension)&apos;, assigned value is 0"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="226" column="27" info="Assuming allocation function fails"/>
            <symbol>mean</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="174" column="12"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/noisegenerator.h" line="226" column="12"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;robots&apos; should be passed by const reference." verbose="Parameter &apos;robots&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp" line="159" column="33" info="Function parameter &apos;robots&apos; should be passed by const reference."/>
            <symbol>robots</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp" line="100" column="32"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/cmdline.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/cmdline.cpp" line="11" column="84"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="0" column="0"/>
        </error>
        <error id="returnNonBoolInBooleanFunction" severity="style" msg="Non-boolean value returned from function returning bool" verbose="Non-boolean value returned from function returning bool" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="151" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="98" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="233" column="13"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="350" column="10" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="317" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="360" column="7" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="317" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="282" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="65" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="300" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="413" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="71" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="419" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;name&apos; can be declared as pointer to const" verbose="Parameter &apos;name&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="166" column="30" info="Parameter &apos;name&apos; can be declared as pointer to const"/>
            <symbol>name</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;p&apos; can be declared as pointer to const" verbose="Variable &apos;p&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="168" column="9" info="Variable &apos;p&apos; can be declared as pointer to const"/>
            <symbol>p</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="300" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="419" column="46" info="Parameter &apos;line&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>line</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="419" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="317" column="11"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="328" column="10"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="345" column="8"/>
            <symbol>i</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency_direct/console.cpp" line="83" column="84"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/cmdline.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/cmdline.cpp" line="11" column="84"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="0" column="0"/>
        </error>
        <error id="returnNonBoolInBooleanFunction" severity="style" msg="Non-boolean value returned from function returning bool" verbose="Non-boolean value returned from function returning bool" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="151" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="98" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="233" column="13"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="350" column="10" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="317" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="360" column="7" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="317" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="282" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="65" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="300" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="413" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="71" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="419" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;name&apos; can be declared as pointer to const" verbose="Parameter &apos;name&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="166" column="30" info="Parameter &apos;name&apos; can be declared as pointer to const"/>
            <symbol>name</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;p&apos; can be declared as pointer to const" verbose="Variable &apos;p&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="168" column="9" info="Variable &apos;p&apos; can be declared as pointer to const"/>
            <symbol>p</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="300" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="419" column="46" info="Parameter &apos;line&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>line</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="419" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="317" column="11"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="328" column="10"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="345" column="8"/>
            <symbol>i</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/flocks/console.cpp" line="83" column="84"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/cmdline.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/cmdline.cpp" line="11" column="84"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="0" column="0"/>
        </error>
        <error id="returnNonBoolInBooleanFunction" severity="style" msg="Non-boolean value returned from function returning bool" verbose="Non-boolean value returned from function returning bool" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="151" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="98" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="233" column="13"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="350" column="10" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="317" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="360" column="7" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="317" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="282" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="65" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="300" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="413" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="71" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="419" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;name&apos; can be declared as pointer to const" verbose="Parameter &apos;name&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="166" column="30" info="Parameter &apos;name&apos; can be declared as pointer to const"/>
            <symbol>name</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;p&apos; can be declared as pointer to const" verbose="Variable &apos;p&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="168" column="9" info="Variable &apos;p&apos; can be declared as pointer to const"/>
            <symbol>p</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="300" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="419" column="46" info="Parameter &apos;line&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>line</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="419" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="317" column="11"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="328" column="10"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="345" column="8"/>
            <symbol>i</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction/console.cpp" line="83" column="84"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/cmdline.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/cmdline.cpp" line="11" column="84"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="0" column="0"/>
        </error>
        <error id="returnNonBoolInBooleanFunction" severity="style" msg="Non-boolean value returned from function returning bool" verbose="Non-boolean value returned from function returning bool" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="151" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="98" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="233" column="13"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="350" column="10" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="317" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="360" column="7" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="317" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="282" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="65" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="300" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="413" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="71" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="419" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;name&apos; can be declared as pointer to const" verbose="Parameter &apos;name&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="166" column="30" info="Parameter &apos;name&apos; can be declared as pointer to const"/>
            <symbol>name</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;p&apos; can be declared as pointer to const" verbose="Variable &apos;p&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="168" column="9" info="Variable &apos;p&apos; can be declared as pointer to const"/>
            <symbol>p</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="300" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="419" column="46" info="Parameter &apos;line&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>line</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="419" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="317" column="11"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="328" column="10"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="345" column="8"/>
            <symbol>i</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/interaction1D/console.cpp" line="83" column="84"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/cmdline.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/cmdline.cpp" line="11" column="84"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="0" column="0"/>
        </error>
        <error id="returnNonBoolInBooleanFunction" severity="style" msg="Non-boolean value returned from function returning bool" verbose="Non-boolean value returned from function returning bool" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="151" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="98" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="233" column="13"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="350" column="10" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="317" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="360" column="7" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="317" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="282" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="65" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="300" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="413" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="71" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="419" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;name&apos; can be declared as pointer to const" verbose="Parameter &apos;name&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="166" column="30" info="Parameter &apos;name&apos; can be declared as pointer to const"/>
            <symbol>name</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;p&apos; can be declared as pointer to const" verbose="Variable &apos;p&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="168" column="9" info="Variable &apos;p&apos; can be declared as pointer to const"/>
            <symbol>p</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="300" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="419" column="46" info="Parameter &apos;line&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>line</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="419" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="317" column="11"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="328" column="10"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="345" column="8"/>
            <symbol>i</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/interaction_sims/shadoworreal/console.cpp" line="83" column="84"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/cmdline.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/cmdline.cpp" line="10" column="84"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="0" column="0"/>
        </error>
        <error id="returnNonBoolInBooleanFunction" severity="style" msg="Non-boolean value returned from function returning bool" verbose="Non-boolean value returned from function returning bool" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="153" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="100" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="235" column="13"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="352" column="10" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="319" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="362" column="7" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="319" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="284" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="65" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="302" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="415" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="71" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="421" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;name&apos; can be declared as pointer to const" verbose="Parameter &apos;name&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="168" column="30" info="Parameter &apos;name&apos; can be declared as pointer to const"/>
            <symbol>name</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;p&apos; can be declared as pointer to const" verbose="Variable &apos;p&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="170" column="9" info="Variable &apos;p&apos; can be declared as pointer to const"/>
            <symbol>p</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;name&apos; can be declared as pointer to const" verbose="Variable &apos;name&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="252" column="9" info="Variable &apos;name&apos; can be declared as pointer to const"/>
            <symbol>name</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="302" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="421" column="46" info="Parameter &apos;line&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>line</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="421" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;caller&apos; can be declared as pointer to const" verbose="Parameter &apos;caller&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="462" column="24" info="Parameter &apos;caller&apos; can be declared as pointer to const"/>
            <symbol>caller</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const" verbose="Parameter &apos;arg&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="462" column="38" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <symbol>arg</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="319" column="11"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="330" column="10"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="347" column="8"/>
            <symbol>i</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="85" column="84"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/cmdline.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/cmdline.cpp" line="11" column="84"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="0" column="0"/>
        </error>
        <error id="returnNonBoolInBooleanFunction" severity="style" msg="Non-boolean value returned from function returning bool" verbose="Non-boolean value returned from function returning bool" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="153" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="100" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="235" column="13"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="352" column="10" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="319" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="362" column="7" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="319" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="284" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="65" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="302" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="415" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="71" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="421" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;name&apos; can be declared as pointer to const" verbose="Parameter &apos;name&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="168" column="30" info="Parameter &apos;name&apos; can be declared as pointer to const"/>
            <symbol>name</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;p&apos; can be declared as pointer to const" verbose="Variable &apos;p&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="170" column="9" info="Variable &apos;p&apos; can be declared as pointer to const"/>
            <symbol>p</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;name&apos; can be declared as pointer to const" verbose="Variable &apos;name&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="252" column="9" info="Variable &apos;name&apos; can be declared as pointer to const"/>
            <symbol>name</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="302" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="421" column="46" info="Parameter &apos;line&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>line</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="421" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;caller&apos; can be declared as pointer to const" verbose="Parameter &apos;caller&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="462" column="24" info="Parameter &apos;caller&apos; can be declared as pointer to const"/>
            <symbol>caller</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const" verbose="Parameter &apos;arg&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="462" column="38" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <symbol>arg</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="319" column="11"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="330" column="10"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="347" column="8"/>
            <symbol>i</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="85" column="84"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;multisat.h&quot; not found." verbose="Include file: &quot;multisat.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/main.cpp" line="18" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;pendulum.h&quot; not found." verbose="Include file: &quot;pendulum.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/main.cpp" line="23" column="0"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/cmdline.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/cmdline.cpp" line="11" column="84"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="0" column="0"/>
        </error>
        <error id="returnNonBoolInBooleanFunction" severity="style" msg="Non-boolean value returned from function returning bool" verbose="Non-boolean value returned from function returning bool" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="151" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="98" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="233" column="13"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="350" column="10" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="317" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="360" column="7" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="317" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="282" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="65" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="300" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="413" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="71" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="419" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;name&apos; can be declared as pointer to const" verbose="Parameter &apos;name&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="166" column="30" info="Parameter &apos;name&apos; can be declared as pointer to const"/>
            <symbol>name</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;p&apos; can be declared as pointer to const" verbose="Variable &apos;p&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="168" column="9" info="Variable &apos;p&apos; can be declared as pointer to const"/>
            <symbol>p</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="300" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="419" column="46" info="Parameter &apos;line&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>line</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="419" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="317" column="11"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="328" column="10"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="345" column="8"/>
            <symbol>i</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/simplesystems/console.cpp" line="83" column="84"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/commtest/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/commtest/main.cpp" line="0" column="0"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;verboseMode&apos; is assigned a value that is never used." verbose="Variable &apos;verboseMode&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/commtest/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/commtest/main.cpp" line="24" column="18"/>
            <symbol>verboseMode</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;verboseMode&apos; is assigned a value that is never used." verbose="Variable &apos;verboseMode&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/commtest/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/commtest/main.cpp" line="28" column="46"/>
            <symbol>verboseMode</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;verboseMode&apos; is assigned a value that is never used." verbose="Variable &apos;verboseMode&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/commtest/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/commtest/main.cpp" line="29" column="47"/>
            <symbol>verboseMode</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/commtest/serial_unix.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/commtest/serial_unix.cpp" line="0" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/commtest/serial_unix.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/commtest/serial_unix.cpp" line="468" column="14"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;b&apos; shadows outer variable" verbose="Local variable &apos;b&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/commtest/serial_unix.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/commtest/serial_unix.cpp" line="158" column="13" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/commtest/serial_unix.cpp" line="145" column="9" info="Shadowed declaration"/>
            <symbol>b</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/cmdline.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/cmdline.cpp" line="10" column="84"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/cmdline.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/cmdline.cpp" line="35" column="69"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/cmdline.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/cmdline.cpp" line="46" column="58"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/cmdline.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/cmdline.cpp" line="53" column="11"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="0" column="0"/>
        </error>
        <error id="returnNonBoolInBooleanFunction" severity="style" msg="Non-boolean value returned from function returning bool" verbose="Non-boolean value returned from function returning bool" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="153" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="100" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="235" column="13"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="352" column="10" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="319" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="362" column="7" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="319" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="284" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="65" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="302" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="415" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="71" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="421" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;name&apos; can be declared as pointer to const" verbose="Parameter &apos;name&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="168" column="30" info="Parameter &apos;name&apos; can be declared as pointer to const"/>
            <symbol>name</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;p&apos; can be declared as pointer to const" verbose="Variable &apos;p&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="170" column="9" info="Variable &apos;p&apos; can be declared as pointer to const"/>
            <symbol>p</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;name&apos; can be declared as pointer to const" verbose="Variable &apos;name&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="252" column="9" info="Variable &apos;name&apos; can be declared as pointer to const"/>
            <symbol>name</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="302" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="421" column="46" info="Parameter &apos;line&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>line</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="421" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;caller&apos; can be declared as pointer to const" verbose="Parameter &apos;caller&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="462" column="24" info="Parameter &apos;caller&apos; can be declared as pointer to const"/>
            <symbol>caller</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const" verbose="Parameter &apos;arg&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="462" column="38" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <symbol>arg</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="319" column="11"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="330" column="10"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="347" column="8"/>
            <symbol>i</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="85" column="84"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/serial_unix.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/serial_unix.cpp" line="0" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/serial_unix.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/serial_unix.cpp" line="195" column="14"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;b&apos; shadows outer variable" verbose="Local variable &apos;b&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/serial_unix.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/serial_unix.cpp" line="179" column="11" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/serial_unix.cpp" line="164" column="7" info="Shadowed declaration"/>
            <symbol>b</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="0" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="104" column="16"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="118" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="123" column="50"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="145" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="157" column="51"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="162" column="52"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="208" column="4"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="215" column="8"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="220" column="8"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="226" column="8"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="267" column="4"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="283" column="4"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="305" column="4"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="321" column="4"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="343" column="4"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="364" column="4"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="391" column="4"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="396" column="6"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="416" column="4"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="421" column="6"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="447" column="4"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="452" column="6"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="473" column="4"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="478" column="6"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;r&apos; can be reduced." verbose="The scope of the variable &apos;r&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="202" column="7"/>
            <symbol>r</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;toread&apos; can be reduced." verbose="The scope of the variable &apos;toread&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="205" column="7"/>
            <symbol>toread</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;host&apos; should be passed by const reference." verbose="Parameter &apos;host&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="89" column="40" info="Function parameter &apos;host&apos; should be passed by const reference."/>
            <symbol>host</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;c&apos; can be declared as pointer to const" verbose="Parameter &apos;c&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="533" column="35" info="Parameter &apos;c&apos; can be declared as pointer to const"/>
            <symbol>c</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="393" column="64"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.cpp" line="449" column="67"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;host&apos; should be passed by const reference." verbose="Parameter &apos;host&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/clienttest.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/Socket.h" line="117" column="36" info="Function parameter &apos;host&apos; should be passed by const reference."/>
            <symbol>host</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/cmdline.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/cmdline.cpp" line="11" column="84"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="0" column="0"/>
        </error>
        <error id="returnNonBoolInBooleanFunction" severity="style" msg="Non-boolean value returned from function returning bool" verbose="Non-boolean value returned from function returning bool" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="151" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="98" column="7"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="233" column="13"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="350" column="10" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="317" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="360" column="7" info="Shadow variable"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="317" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_list&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="282" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="65" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="300" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_quit&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="413" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="71" column="13" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;globalData&apos; can be declared as reference to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;globalData&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="419" column="28" info="Parameter &apos;globalData&apos; can be declared as reference to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>globalData</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;name&apos; can be declared as pointer to const" verbose="Parameter &apos;name&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="166" column="30" info="Parameter &apos;name&apos; can be declared as pointer to const"/>
            <symbol>name</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;p&apos; can be declared as pointer to const" verbose="Variable &apos;p&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="168" column="9" info="Variable &apos;p&apos; can be declared as pointer to const"/>
            <symbol>p</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_show&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="300" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="70" column="13" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;line&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;line&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="419" column="46" info="Parameter &apos;line&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>line</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;arg&apos; can be declared as pointer to const. However it seems that &apos;com_help&apos; is a callback function, if &apos;arg&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="419" column="58" info="Parameter &apos;arg&apos; can be declared as pointer to const"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="63" column="14" info="You might need to cast the function pointer here"/>
            <symbol>arg</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="317" column="11"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="328" column="10"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="345" column="8"/>
            <symbol>i</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/console.cpp" line="83" column="84"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp" line="0" column="0"/>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;MyRobot&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;MyRobot&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp" line="58" column="5"/>
            <symbol>MyRobot</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;MyRobot&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;MyRobot&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp" line="58" column="5"/>
            <symbol>MyRobot</symbol>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;InvertNChannelController&apos; defines member variable with name &apos;name&apos; also defined in its parent class &apos;Inspectable&apos;." verbose="The class &apos;InvertNChannelController&apos; defines member variable with name &apos;name&apos; also defined in its parent class &apos;Inspectable&apos;." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/invertnchannelcontroller.h" line="86" column="12" info="Derived variable &apos;InvertNChannelController::name&apos;"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/inspectable.h" line="254" column="13" info="Parent variable &apos;Inspectable::name&apos;"/>
            <symbol>InvertNChannelController</symbol>
            <symbol>name</symbol>
            <symbol>Inspectable</symbol>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;SineController&apos; defines member variable with name &apos;name&apos; also defined in its parent class &apos;Inspectable&apos;." verbose="The class &apos;SineController&apos; defines member variable with name &apos;name&apos; also defined in its parent class &apos;Inspectable&apos;." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/sinecontroller.h" line="99" column="15" info="Derived variable &apos;SineController::name&apos;"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/inspectable.h" line="254" column="13" info="Parent variable &apos;Inspectable::name&apos;"/>
            <symbol>SineController</symbol>
            <symbol>name</symbol>
            <symbol>Inspectable</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;InvertNChannelController&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;InvertNChannelController&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/invertnchannelcontroller.h" line="41" column="3"/>
            <symbol>InvertNChannelController</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;SineController&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;SineController&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/sinecontroller.h" line="45" column="3"/>
            <symbol>SineController</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;MultiSineController&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;MultiSineController&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/sinecontroller.h" line="116" column="3"/>
            <symbol>MultiSineController</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;MotorBabbler&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;MotorBabbler&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/motorbabbler.h" line="43" column="3"/>
            <symbol>MotorBabbler</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TcpController&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TcpController&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/tcpcontroller.h" line="47" column="3"/>
            <symbol>TcpController</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;init&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;init&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/invertnchannelcontroller.h" line="42" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractcontroller.h" line="58" column="16" info="Virtual function in base class"/>
            <symbol>init</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSensorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSensorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/invertnchannelcontroller.h" line="49" column="15" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractcontroller.h" line="62" column="15" info="Virtual function in base class"/>
            <symbol>getSensorNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMotorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMotorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/invertnchannelcontroller.h" line="51" column="15" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractcontroller.h" line="66" column="15" info="Virtual function in base class"/>
            <symbol>getMotorNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSensorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSensorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/sinecontroller.h" line="54" column="15" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractcontroller.h" line="62" column="15" info="Virtual function in base class"/>
            <symbol>getSensorNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMotorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMotorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/sinecontroller.h" line="59" column="15" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractcontroller.h" line="66" column="15" info="Virtual function in base class"/>
            <symbol>getMotorNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;store&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;store&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/sinecontroller.h" line="79" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/storeable.h" line="38" column="16" info="Virtual function in base class"/>
            <symbol>store</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;restore&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;restore&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/sinecontroller.h" line="85" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/storeable.h" line="42" column="16" info="Virtual function in base class"/>
            <symbol>restore</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;init&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;init&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/sinecontroller.h" line="117" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/sinecontroller.h" line="50" column="16" info="Virtual function in base class"/>
            <symbol>init</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSensorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSensorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/tcpcontroller.h" line="55" column="15" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractcontroller.h" line="62" column="15" info="Virtual function in base class"/>
            <symbol>getSensorNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMotorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMotorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/tcpcontroller.h" line="60" column="15" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractcontroller.h" line="66" column="15" info="Virtual function in base class"/>
            <symbol>getMotorNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;store&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;store&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/tcpcontroller.h" line="77" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/storeable.h" line="38" column="16" info="Virtual function in base class"/>
            <symbol>store</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;restore&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;restore&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/tcpcontroller.h" line="83" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/storeable.h" line="42" column="16" info="Virtual function in base class"/>
            <symbol>restore</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~MyRobot&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~MyRobot&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp" line="90" column="4" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractrobot.h" line="55" column="12" info="Virtual destructor in base class"/>
            <symbol>~MyRobot</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSensors&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSensors&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp" line="107" column="15" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractrobot.h" line="62" column="15" info="Virtual function in base class"/>
            <symbol>getSensors</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setMotors&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setMotors&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp" line="119" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractrobot.h" line="68" column="16" info="Virtual function in base class"/>
            <symbol>setMotors</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSensorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSensorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp" line="136" column="15" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractrobot.h" line="72" column="15" info="Virtual function in base class"/>
            <symbol>getSensorNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getMotorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getMotorNumber&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp" line="139" column="15" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractrobot.h" line="76" column="15" info="Virtual function in base class"/>
            <symbol>getMotorNumber</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getPosition&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getPosition&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp" line="141" column="20" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/trackable.h" line="57" column="20" info="Virtual function in base class"/>
            <symbol>getPosition</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSpeed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSpeed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp" line="142" column="20" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/trackable.h" line="62" column="20" info="Virtual function in base class"/>
            <symbol>getSpeed</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getAngularSpeed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getAngularSpeed&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp" line="143" column="20" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/trackable.h" line="67" column="20" info="Virtual function in base class"/>
            <symbol>getAngularSpeed</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getOrientation&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getOrientation&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp" line="144" column="26" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/trackable.h" line="72" column="26" info="Virtual function in base class"/>
            <symbol>getOrientation</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;x_cur&apos; can be declared as pointer to const" verbose="Variable &apos;x_cur&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp" line="110" column="13" info="Variable &apos;x_cur&apos; can be declared as pointer to const"/>
            <symbol>x_cur</symbol>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/statistictools/dataanalysation/templatevalueanalysation.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/dataanalysation/templatevalueanalysation.h" line="500" column="39"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;sparsearray.h&quot; not found." verbose="Include file: &quot;sparsearray.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/complexmeasure.h" line="30" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;discretisizer.h&quot; not found." verbose="Include file: &quot;discretisizer.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/complexmeasure.cpp" line="27" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;sparsearray.h&quot; not found." verbose="Include file: &quot;sparsearray.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/complexmeasure.cpp" line="28" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;stl_adds.h&quot; not found." verbose="Include file: &quot;stl_adds.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/complexmeasure.cpp" line="30" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/complexmeasure.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/complexmeasure.cpp" line="68" column="28"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;measuremodes.h&quot; not found." verbose="Include file: &quot;measuremodes.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/statisticmeasure.h" line="28" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;stl_adds.h&quot; not found." verbose="Include file: &quot;stl_adds.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/statisticmeasure.cpp" line="27" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;assert.h&quot; not found." verbose="Include file: &quot;assert.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/statisticmeasure.cpp" line="28" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;AbstractMeasure&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;AbstractMeasure&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/statisticmeasure.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/abstractmeasure.h" line="43" column="3"/>
            <symbol>AbstractMeasure</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~AbstractMeasure&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~AbstractMeasure&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/statisticmeasure.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/abstractmeasure.h" line="46" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/imeasure.h" line="45" column="18" info="Virtual destructor in base class"/>
            <symbol>~AbstractMeasure</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getName&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getName&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/statisticmeasure.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/abstractmeasure.h" line="49" column="23" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/imeasure.h" line="49" column="29" info="Virtual function in base class"/>
            <symbol>getName</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getValue&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getValue&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/statisticmeasure.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/abstractmeasure.h" line="51" column="18" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/imeasure.h" line="51" column="24" info="Virtual function in base class"/>
            <symbol>getValue</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getValueAddress&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getValueAddress&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/statisticmeasure.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/abstractmeasure.h" line="53" column="19" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/imeasure.h" line="53" column="25" info="Virtual function in base class"/>
            <symbol>getValueAddress</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;setStepSize&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;setStepSize&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/statisticmeasure.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/abstractmeasure.h" line="55" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/imeasure.h" line="55" column="22" info="Virtual function in base class"/>
            <symbol>setStepSize</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getStepSize&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getStepSize&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/statisticmeasure.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/abstractmeasure.h" line="57" column="15" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/imeasure.h" line="57" column="21" info="Virtual function in base class"/>
            <symbol>getStepSize</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getActualStep&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getActualStep&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/statisticmeasure.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/abstractmeasure.h" line="59" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/imeasure.h" line="59" column="22" info="Virtual function in base class"/>
            <symbol>getActualStep</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~StatisticMeasure&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~StatisticMeasure&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/statisticmeasure.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/statisticmeasure.h" line="40" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/abstractmeasure.h" line="46" column="12" info="Virtual destructor in base class"/>
            <symbol>~StatisticMeasure</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;trackable.h&quot; not found." verbose="Include file: &quot;trackable.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/trackablemeasure.h" line="28" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;position.h&quot; not found." verbose="Include file: &quot;position.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/trackablemeasure.h" line="30" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;discretisizer.h&quot; not found." verbose="Include file: &quot;discretisizer.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/trackablemeasure.cpp" line="25" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;stl_adds.h&quot; not found." verbose="Include file: &quot;stl_adds.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/trackablemeasure.cpp" line="26" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/trackablemeasure.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/measure/trackablemeasure.cpp" line="29" column="283"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;inspectable.h&quot; not found." verbose="Include file: &quot;inspectable.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/statistictools.h" line="35" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;callbackable.h&quot; not found." verbose="Include file: &quot;callbackable.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/statistictools.h" line="36" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;templatevalueanalysation.h&quot; not found." verbose="Include file: &quot;templatevalueanalysation.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/statistictools.h" line="39" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;statisticmeasure.h&quot; not found." verbose="Include file: &quot;statisticmeasure.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/statistictools.cpp" line="25" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;complexmeasure.h&quot; not found." verbose="Include file: &quot;complexmeasure.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/statistictools.cpp" line="26" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/statistictools/statistictools.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/statistictools/statistictools.h" line="184" column="33"/>
        </error>
        <error id="preprocessorErrorDirective" severity="error" msg="#error This development environment does not support pthreads or windows threads" verbose="#error This development environment does not support pthreads or windows threads">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/quickmp.h" line="332" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/utils/configurable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/configurable.cpp" line="82" column="42"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Configurable::parent&apos; is not initialized in the constructor." verbose="Member variable &apos;Configurable::parent&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/utils/configurablelist.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/configurable.h" line="138" column="5"/>
            <symbol>Configurable::parent</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Configurable::parent&apos; is not initialized in the constructor." verbose="Member variable &apos;Configurable::parent&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/utils/configurablelist.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/configurable.h" line="143" column="5"/>
            <symbol>Configurable::parent</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;join&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;join&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/utils/configurablelist.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/stl_adds.h" line="95" column="5"/>
            <symbol>join</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;matchId&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;matchId&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/utils/configurablelist.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/configurable.h" line="127" column="9"/>
            <symbol>matchId</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~Configurable&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~Configurable&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/utils/configurablelist.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/configurable.h" line="156" column="14" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/backcaller.h" line="54" column="14" info="Virtual destructor in base class"/>
            <symbol>~Configurable</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;list&apos; should be passed by const reference." verbose="Parameter &apos;list&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/utils/configurablelist.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/stl_adds.h" line="110" column="29" info="Function parameter &apos;list&apos; should be passed by const reference."/>
            <symbol>list</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;c&apos; can be declared as pointer to const" verbose="Parameter &apos;c&apos; can be declared as pointer to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/utils/configurablelist.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/configurable.h" line="132" column="39" info="Parameter &apos;c&apos; can be declared as pointer to const"/>
            <symbol>c</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/utils/configurablelist.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/stl_adds.h" line="121" column="11"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/utils/controller_misc.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/controller_misc.cpp" line="27" column="50"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/utils/discretisizer.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/discretisizer.cpp" line="28" column="82"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;agent.h&quot; not found." verbose="Include file: &quot;agent.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/globaldatabase.h" line="28" column="0"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Inspectable::printParentName&apos; is not initialized in the constructor." verbose="Member variable &apos;Inspectable::printParentName&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp" line="30" column="14"/>
            <symbol>Inspectable::printParentName</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ColorNormalNoise::factor&apos; is not initialized in the constructor." verbose="Member variable &apos;ColorNormalNoise::factor&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="215" column="3"/>
            <symbol>ColorNormalNoise::factor</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Inspectable&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Inspectable&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.h" line="107" column="3"/>
            <symbol>Inspectable</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;matchName&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;matchName&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.h" line="95" column="5"/>
            <symbol>matchName</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;ColorUniformNoise&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;ColorUniformNoise&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="165" column="3"/>
            <symbol>ColorUniformNoise</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;ColorNormalNoise&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;ColorNormalNoise&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="215" column="3"/>
            <symbol>ColorNormalNoise</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~NoNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~NoNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="121" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="46" column="12" info="Virtual destructor in base class"/>
            <symbol>~NoNoise</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="122" column="18" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="78" column="18" info="Virtual function in base class"/>
            <symbol>generate</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~WhiteUniformNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~WhiteUniformNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="132" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="46" column="12" info="Virtual destructor in base class"/>
            <symbol>~WhiteUniformNoise</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="133" column="18" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="78" column="18" info="Virtual function in base class"/>
            <symbol>generate</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~WhiteNormalNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~WhiteNormalNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="144" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="46" column="12" info="Virtual destructor in base class"/>
            <symbol>~WhiteNormalNoise</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="145" column="18" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="78" column="18" info="Virtual function in base class"/>
            <symbol>generate</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~ColorUniformNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~ColorUniformNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="171" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="46" column="12" info="Virtual destructor in base class"/>
            <symbol>~ColorUniformNoise</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;init&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;init&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="172" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="61" column="16" info="Virtual function in base class"/>
            <symbol>init</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="180" column="18" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="78" column="18" info="Virtual function in base class"/>
            <symbol>generate</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;add&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;add&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="190" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="85" column="16" info="Virtual function in base class"/>
            <symbol>add</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~ColorNormalNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~ColorNormalNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="222" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="144" column="12" info="Virtual destructor in base class"/>
            <symbol>~ColorNormalNoise</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;init&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;init&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="224" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="61" column="16" info="Virtual function in base class"/>
            <symbol>init</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="232" column="18" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="145" column="18" info="Virtual function in base class"/>
            <symbol>generate</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;add&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;add&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="237" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="85" column="16" info="Virtual function in base class"/>
            <symbol>add</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~SineWhiteNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~SineWhiteNoise&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="275" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="46" column="12" info="Virtual destructor in base class"/>
            <symbol>~SineWhiteNoise</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;generate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="277" column="18" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="78" column="18" info="Virtual function in base class"/>
            <symbol>generate</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;add&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;add&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="285" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="85" column="16" info="Virtual function in base class"/>
            <symbol>add</symbol>
        </error>
        <error id="nullPointerOutOfMemory" severity="warning" msg="If memory allocation fails, then there is a possible null pointer dereference: mean" verbose="If memory allocation fails, then there is a possible null pointer dereference: mean" cwe="476" file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="176" column="9" info="Null pointer dereference"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="174" column="12" info="Assignment &apos;mean=(double*)malloc(sizeof(double)*dimension)&apos;, assigned value is 0"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="174" column="27" info="Assuming allocation function fails"/>
            <symbol>mean</symbol>
        </error>
        <error id="nullPointerOutOfMemory" severity="warning" msg="If memory allocation fails, then there is a possible null pointer dereference: mean" verbose="If memory allocation fails, then there is a possible null pointer dereference: mean" cwe="476" file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="228" column="9" info="Null pointer dereference"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="226" column="12" info="Assignment &apos;mean=(double*)malloc(sizeof(double)*dimension)&apos;, assigned value is 0"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="226" column="27" info="Assuming allocation function fails"/>
            <symbol>mean</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="174" column="12"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/noisegenerator.h" line="226" column="12"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;name&apos; should be passed by const reference." verbose="Parameter &apos;name&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.h" line="95" column="27" info="Function parameter &apos;name&apos; should be passed by const reference."/>
            <symbol>name</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;l&apos; should be passed by const reference." verbose="Parameter &apos;l&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/inspectable.h" line="97" column="28" info="Function parameter &apos;l&apos; should be passed by const reference."/>
            <symbol>l</symbol>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/utils/inspectableproxy.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/inspectableproxy.cpp" line="28" column="90"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;matrix.h&quot; not found." verbose="Include file: &quot;matrix.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/lyapunov.h" line="27" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="syntax error: ( . size" verbose="syntax error: ( . size" file0="/Users/jerry/lpzrobot_mac/selforg/utils/mediator.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/mediator.cpp" line="73" column="61"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/utils/mediatorcollegue.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/mediatorcollegue.cpp" line="28" column="94"/>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;pld&apos; can be declared as reference to const" verbose="Parameter &apos;pld&apos; can be declared as reference to const" cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/utils/parametrizable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/parametrizable.cpp" line="57" column="30" info="Parameter &apos;pld&apos; can be declared as reference to const"/>
            <symbol>pld</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/utils/parametrizable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/parametrizable.cpp" line="42" column="9"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/utils/parametrizable.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/parametrizable.cpp" line="60" column="96"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/utils/plotoption.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/plotoption.cpp" line="43" column="27"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/utils/plotoptionengine.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/plotoptionengine.cpp" line="81" column="37"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;__drand48_iterate(xsubi,buffer)&lt;0&apos; is always false" verbose="Condition &apos;__drand48_iterate(xsubi,buffer)&lt;0&apos; is always false" cwe="570" file0="/Users/jerry/lpzrobot_mac/selforg/utils/randomgenerator.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/randomgenerator.cpp" line="69" column="41" info="Condition &apos;__drand48_iterate(xsubi,buffer)&lt;0&apos; is always false"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/randomgenerator.cpp" line="69" column="25" info="Calling function &apos;__drand48_iterate&apos; returns 0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;abstractrobot.h&quot; not found." verbose="Include file: &quot;abstractrobot.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/trackrobots.cpp" line="29" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;matrix.h&quot; not found." verbose="Include file: &quot;matrix.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/trackrobots.cpp" line="30" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;{&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/utils/trackrobots.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/utils/trackrobots.cpp" line="40" column="25"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;abstractcontroller.h&quot; not found." verbose="Include file: &quot;abstractcontroller.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wiredcontroller.cpp" line="34" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;abstractwiring.h&quot; not found." verbose="Include file: &quot;abstractwiring.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wiredcontroller.cpp" line="35" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;motorbabbler.h&quot; not found." verbose="Include file: &quot;motorbabbler.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wiredcontroller.cpp" line="37" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;callbackable.h&quot; not found." verbose="Include file: &quot;callbackable.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wiredcontroller.cpp" line="39" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/wiredcontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wiredcontroller.cpp" line="101" column="19"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/wiredcontroller.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wiredcontroller.cpp" line="102" column="19"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;matrix.h&quot; not found." verbose="Include file: &quot;matrix.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/abstractwiring.h" line="28" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;noisegenerator.h&quot; not found." verbose="Include file: &quot;noisegenerator.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/abstractwiring.h" line="29" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;inspectable.h&quot; not found." verbose="Include file: &quot;inspectable.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/abstractwiring.h" line="30" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;randomgenerator.h&quot; not found." verbose="Include file: &quot;randomgenerator.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/abstractwiring.h" line="31" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;sensormotorinfo.h&quot; not found." verbose="Include file: &quot;sensormotorinfo.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/abstractwiring.h" line="32" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;stl_adds.h&quot; not found." verbose="Include file: &quot;stl_adds.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/abstractwiring.cpp" line="26" column="0"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;AbstractWiring::noisenumber&apos; is not initialized in the constructor." verbose="Member variable &apos;AbstractWiring::noisenumber&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/wirings/abstractwiring.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/abstractwiring.h" line="50" column="3"/>
            <symbol>AbstractWiring::noisenumber</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;AbstractWiring::randGen&apos; is not initialized in the constructor." verbose="Member variable &apos;AbstractWiring::randGen&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/wirings/abstractwiring.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/abstractwiring.h" line="50" column="3"/>
            <symbol>AbstractWiring::randGen</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/wirings/abstractwiring.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/abstractwiring.cpp" line="39" column="15"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;noisenumber&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;noisenumber&apos; is reassigned a value before the old one has been used." cwe="563" file0="/Users/jerry/lpzrobot_mac/selforg/wirings/abstractwiring.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/abstractwiring.cpp" line="35" column="17" info="noisenumber is overwritten"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/abstractwiring.cpp" line="33" column="17" info="noisenumber is assigned"/>
            <symbol>noisenumber</symbol>
        </error>
        <error id="uselessOverride" severity="style" msg="The function &apos;reset&apos; overrides a function in a base class but is identical to the overridden function" verbose="The function &apos;reset&apos; overrides a function in a base class but is identical to the overridden function" file0="/Users/jerry/lpzrobot_mac/selforg/wirings/copywiring.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/copywiring.h" line="52" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/abstractwiring.h" line="129" column="16" info="Virtual function in base class"/>
            <symbol>reset</symbol>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;(&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;(&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/wirings/derivativewiring.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/derivativewiring.cpp" line="61" column="48"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;matrix.h&quot; not found." verbose="Include file: &quot;matrix.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/feedbackwiring.h" line="28" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;controller_misc.h&quot; not found." verbose="Include file: &quot;controller_misc.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/feedbackwiring.cpp" line="26" column="0"/>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;(&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;(&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/wirings/feedbackwiring.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/feedbackwiring.cpp" line="57" column="34"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;matrix.h&quot; not found." verbose="Include file: &quot;matrix.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/forceboostwiring.h" line="28" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;configurable.h&quot; not found." verbose="Include file: &quot;configurable.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/forceboostwiring.h" line="29" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;ForceBoostWiring&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;ForceBoostWiring&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/wirings/forceboostwiring.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/forceboostwiring.h" line="45" column="3"/>
            <symbol>ForceBoostWiring</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~AbstractWiring&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~AbstractWiring&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/wirings/forceboostwiring.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/abstractwiring.h" line="63" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/include/selforg/inspectable.h" line="110" column="12" info="Virtual destructor in base class"/>
            <symbol>~AbstractWiring</symbol>
        </error>
        <error id="syntaxError" severity="error" msg="Unmatched &apos;(&apos;. Configuration: &apos;NDEBUG=1&apos;." verbose="Unmatched &apos;(&apos;. Configuration: &apos;NDEBUG=1&apos;." file0="/Users/jerry/lpzrobot_mac/selforg/wirings/one2onewiring.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/one2onewiring.cpp" line="48" column="39"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;One2OneWiring&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;One2OneWiring&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/wirings/selectiveone2onewiring.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/one2onewiring.h" line="40" column="3"/>
            <symbol>One2OneWiring</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~select_firsthalf&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~select_firsthalf&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/wirings/selectiveone2onewiring.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/selectiveone2onewiring.h" line="45" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/selectiveone2onewiring.h" line="38" column="12" info="Virtual destructor in base class"/>
            <symbol>~select_firsthalf</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;operator()&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;operator()&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/wirings/selectiveone2onewiring.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/selectiveone2onewiring.h" line="46" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/selectiveone2onewiring.h" line="39" column="16" info="Virtual function in base class"/>
            <symbol>operator()</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~select_from_to&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~select_from_to&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/wirings/selectiveone2onewiring.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/selectiveone2onewiring.h" line="51" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/selectiveone2onewiring.h" line="38" column="12" info="Virtual destructor in base class"/>
            <symbol>~select_from_to</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;operator()&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;operator()&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/Users/jerry/lpzrobot_mac/selforg/wirings/selectiveone2onewiring.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/selectiveone2onewiring.h" line="53" column="16" info="Function in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/selectiveone2onewiring.h" line="39" column="16" info="Virtual function in base class"/>
            <symbol>operator()</symbol>
        </error>
        <error id="uselessOverride" severity="style" msg="The destructor &apos;~select_firsthalf&apos; overrides a destructor in a base class but is identical to the overridden function" verbose="The destructor &apos;~select_firsthalf&apos; overrides a destructor in a base class but is identical to the overridden function" file0="/Users/jerry/lpzrobot_mac/selforg/wirings/selectiveone2onewiring.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/selectiveone2onewiring.h" line="45" column="12" info="Destructor in derived class"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/selectiveone2onewiring.h" line="38" column="12" info="Virtual destructor in base class"/>
            <symbol>~select_firsthalf</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;controller_misc.h&quot; not found." verbose="Include file: &quot;controller_misc.h&quot; not found.">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/wiringsequence.cpp" line="26" column="0"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;addWiring&apos; is called from constructor &apos;WiringSequence(AbstractWiring*w1,AbstractWiring*w2)&apos; at line 40. Dynamic binding is not used." verbose="Virtual function &apos;addWiring&apos; is called from constructor &apos;WiringSequence(AbstractWiring*w1,AbstractWiring*w2)&apos; at line 40. Dynamic binding is not used." file0="/Users/jerry/lpzrobot_mac/selforg/wirings/wiringsequence.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/wiringsequence.h" line="59" column="16" info="addWiring is a virtual function"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/wiringsequence.cpp" line="40" column="3" info="Calling addWiring"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;addWiring&apos; is called from constructor &apos;WiringSequence(AbstractWiring*w1,AbstractWiring*w2)&apos; at line 41. Dynamic binding is not used." verbose="Virtual function &apos;addWiring&apos; is called from constructor &apos;WiringSequence(AbstractWiring*w1,AbstractWiring*w2)&apos; at line 41. Dynamic binding is not used." file0="/Users/jerry/lpzrobot_mac/selforg/wirings/wiringsequence.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/wiringsequence.h" line="59" column="16" info="addWiring is a virtual function"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/wiringsequence.cpp" line="41" column="3" info="Calling addWiring"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &apos;WiringSequence&apos; defines member variable with name &apos;initialised&apos; also defined in its parent class &apos;AbstractWiring&apos;." verbose="The class &apos;WiringSequence&apos; defines member variable with name &apos;initialised&apos; also defined in its parent class &apos;AbstractWiring&apos;." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/wirings/wiringsequence.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/wiringsequence.h" line="64" column="8" info="Derived variable &apos;WiringSequence::initialised&apos;"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/abstractwiring.h" line="202" column="8" info="Parent variable &apos;AbstractWiring::initialised&apos;"/>
            <symbol>WiringSequence</symbol>
            <symbol>initialised</symbol>
            <symbol>AbstractWiring</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;WiringSequence&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;WiringSequence&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/Users/jerry/lpzrobot_mac/selforg/wirings/wiringsequence.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/wirings/wiringsequence.h" line="38" column="3"/>
            <symbol>WiringSequence</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;COMMAND&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;COMMAND&apos;" cwe="758" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="54" column="9"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/manipuexperts/console.cpp" line="54" column="9"/>
            <symbol>COMMAND</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;GlobalData&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;GlobalData&apos;" cwe="758" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/globaldata.h" line="38" column="1"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/globaldata.h" line="38" column="1"/>
            <symbol>GlobalData</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;COMMAND&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;COMMAND&apos;" cwe="758" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="54" column="9"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/pendulum/console.cpp" line="54" column="9"/>
            <symbol>COMMAND</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;COMMAND&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;COMMAND&apos;" cwe="758" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/console.cpp" line="54" column="9"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/spherical_xbee/workstation/console.cpp" line="54" column="9"/>
            <symbol>COMMAND</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;MyRobot&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;MyRobot&apos;" cwe="758" file0="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp">
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/dblcontingency/main.cpp" line="27" column="1"/>
            <location file="/Users/jerry/lpzrobot_mac/selforg/simulations/tcpcommunication/main.cpp" line="39" column="1"/>
            <symbol>MyRobot</symbol>
        </error>
        <error id="checkersReport" severity="information" msg="Active checkers: There was critical errors (use --checkers-report=&lt;filename&gt; to see details)" verbose="Active checkers: There was critical errors (use --checkers-report=&lt;filename&gt; to see details)"/>
    </errors>
</results>
