cppcheck: unusedFunction check requires --cppcheck-build-dir to be active with -j.
Checking agents/odeagent.cpp ...
Checking examples/basic/basiccontroller.cpp ...
Checking examples/basic/differential.cpp ...
Checking examples/basic/main.cpp ...
examples/basic/basiccontroller.h:27:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
agents/odeagent.h:27:0: information: Include file: <selforg/agent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/agent.h>
^
examples/basic/basiccontroller.cpp:26:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
agents/odeagent.h:28:0: information: Include file: <selforg/storeable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/storeable.h>
^
agents/odeagent.cpp:31:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
agents/odeagent.cpp:32:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
examples/basic/differential.h:29:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
examples/basic/differential.h:32:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
examples/basic/differential.h:35:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
examples/basic/differential.h:38:0: information: Include file: <ode_robots/angularmotor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/angularmotor.h>
^
examples/basic/differential.h:41:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
examples/basic/differential.h:42:0: information: Include file: <ode_robots/irsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/irsensor.h>
^
examples/basic/main.cpp:25:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
examples/basic/main.cpp:27:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
examples/basic/main.cpp:29:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
examples/basic/main.cpp:33:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
examples/basic/main.cpp:38:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
examples/basic/main.cpp:40:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
examples/basic/main.cpp:41:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
examples/basic/basiccontroller.h:32:5: style: Class 'BasicController' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    BasicController(const std::string& name);
    ^
examples/basic/basiccontroller.cpp:30:18: warning: Member variable 'BasicController::nSensors' is not initialized in the constructor. [uninitMemberVar]
BasicController::BasicController(const std::string& name)
                 ^
examples/basic/basiccontroller.cpp:30:18: warning: Member variable 'BasicController::nMotors' is not initialized in the constructor. [uninitMemberVar]
BasicController::BasicController(const std::string& name)
                 ^
1/300 files checked 0% done
2/300 files checked 0% done
Checking examples/sphericalrobot/main.cpp ...
Checking motors/angularmotor.cpp ...
examples/sphericalrobot/main.cpp:26:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
examples/sphericalrobot/main.cpp:29:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
3/300 files checked 0% done
examples/sphericalrobot/main.cpp:30:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h> // arena
^
examples/sphericalrobot/main.cpp:31:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>  // passive balls
^
examples/sphericalrobot/main.cpp:34:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
examples/sphericalrobot/main.cpp:35:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
examples/sphericalrobot/main.cpp:37:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h> // include noisegenerator (used for adding noise to sensorvalues)
^
examples/sphericalrobot/main.cpp:38:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>  // simple wiring
^
examples/sphericalrobot/main.cpp:41:0: information: Include file: <ode_robots/sphererobot3masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sphererobot3masses.h>
^
examples/sphericalrobot/main.cpp:42:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
examples/sphericalrobot/main.cpp:44:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
motors/angularmotor.cpp:25:0: information: Include file: <ode-dbl/objects.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/objects.h>
^
motors/angularmotor.h:27:0: information: Include file: <list> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <list>
^
Checking motors/oneaxisservo.cpp ...
agents/odeagent.h:153:18: style: Virtual function 'removeOperators' is called from destructor '~OdeAgent()' at line 114. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void removeOperators() override;
                 ^
agents/odeagent.cpp:114:5: note: Calling removeOperators
    removeOperators();
    ^
agents/odeagent.h:153:18: note: removeOperators is a virtual function
    virtual void removeOperators() override;
                 ^
agents/odeagent.h:67:5: style: Class 'OdeAgent' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    OdeAgent(const PlotOption& plotOption = PlotOption(NoPlot), double noisefactor = 1, const std::string& name = "OdeAgent", const std::string& revision = "$ID$") __attribute__ ((deprecated));
    ^
agents/odeagent.h:70:5: style: Class 'OdeAgent' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    OdeAgent(const std::list<PlotOption>& plotOptions, double noisefactor = 1, const std::string& name = "OdeAgent", const std::string& revision = "$ID$") __attribute__ ((deprecated));
    ^
agents/odeagent.h:74:5: style: Class 'OdeAgent' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    OdeAgent(const GlobalData& globalData, double noisefactor = 1, const std::string& name = "OdeAgent", const std::string& revision = "");
    ^
agents/odeagent.cpp:200:26: style: C-style pointer casting [cstyleCast]
      mainTrace.color = ((OdeRobot*)robot)->osgHandle.color;
                         ^
agents/odeagent.cpp:237:22: style: C-style pointer casting [cstyleCast]
    Primitives ps = ((OdeRobot*)robot)->getAllPrimitives();
                     ^
agents/odeagent.cpp:243:36: style: C-style pointer casting [cstyleCast]
                                  ((OdeRobot*)robot)->getName() + "segm_" + std::itos(primitiveIndex));
                                   ^
4/300 files checked 0% done
motors/oneaxisservo.h:32:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
motors/oneaxisservo.cpp:27:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
5/300 files checked 0% done
Checking motors/pid.cpp ...
Checking motors/twoaxisservo.cpp ...
motors/pid.cpp:24:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
motors/pid.cpp:25:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
motors/twoaxisservo.h:32:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
motors/twoaxisservo.cpp:26:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
motors/pid.h:59:5: style: Class 'PID' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    PID ( double KP = 100 , double KI = 2.0 , double KD = 0.3 );
    ^
6/300 files checked 1% done
Checking obstacles/DummyGround.cpp ...
motors/angularmotor.h:119:14: style: The destructor '~AngularMotor1Axis' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual ~AngularMotor1Axis() {}
             ^
motors/angularmotor.h:42:14: note: Virtual destructor in base class
    virtual ~AngularMotor () override;
             ^
motors/angularmotor.h:119:14: note: Destructor in derived class
    virtual ~AngularMotor1Axis() {}
             ^
motors/angularmotor.h:149:14: style: The destructor '~AngularMotor2Axis' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual ~AngularMotor2Axis() {}
             ^
motors/angularmotor.h:42:14: note: Virtual destructor in base class
    virtual ~AngularMotor () override;
             ^
motors/angularmotor.h:149:14: note: Destructor in derived class
    virtual ~AngularMotor2Axis() {}
             ^
motors/angularmotor.h:223:14: style: The destructor '~AngularMotorNAxis' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual ~AngularMotorNAxis() {}
             ^
motors/angularmotor.h:42:14: note: Virtual destructor in base class
    virtual ~AngularMotor () override;
             ^
motors/angularmotor.h:223:14: note: Destructor in derived class
    virtual ~AngularMotorNAxis() {}
             ^
motors/oneaxisservo.h:105:18: style: Virtual function 'setMinMax' is called from constructor 'OneAxisServo(OneAxisJoint*joint,double _min,double _max,double power,double damp=0.2,double integration=2,double maxVel=10.0,double jointLimit=1.3,bool minmaxCheck=true)' at line 36. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void setMinMax(double _min, double _max){
                 ^
motors/oneaxisservo.cpp:36:5: note: Calling setMinMax
    setMinMax(_min,_max);
    ^
motors/oneaxisservo.h:105:18: note: setMinMax is a virtual function
    virtual void setMinMax(double _min, double _max){
                 ^
motors/oneaxisservo.h:172:14: style: The destructor '~OneAxisServoCentered' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual ~OneAxisServoCentered(){}
             ^
motors/oneaxisservo.h:47:14: note: Virtual destructor in base class
    virtual ~OneAxisServo() override;
             ^
motors/oneaxisservo.h:172:14: note: Destructor in derived class
    virtual ~OneAxisServoCentered(){}
             ^
motors/oneaxisservo.h:243:20: style: The function 'getMaxVel' overrides a function in a base class but is identical to the overridden function [uselessOverride]
    virtual double getMaxVel() override {
                   ^
motors/oneaxisservo.h:141:20: note: Virtual function in base class
    virtual double getMaxVel() {
                   ^
motors/oneaxisservo.h:243:20: note: Function in derived class
    virtual double getMaxVel() override {
                   ^
motors/oneaxisservo.h:314:20: style: The function 'getMaxVel' overrides a function in a base class but is identical to the overridden function [uselessOverride]
    virtual double getMaxVel()override {
                   ^
motors/oneaxisservo.h:141:20: note: Virtual function in base class
    virtual double getMaxVel() {
                   ^
motors/oneaxisservo.h:314:20: note: Function in derived class
    virtual double getMaxVel()override {
                   ^
motors/angularmotor.cpp:254:77: performance: Function parameter 'axis' should be passed by const reference. [passedByValue]
                                       std::list<std::pair<double, Axis > > axis)
                                                                            ^
7/300 files checked 1% done
obstacles/abstractground.h:27:0: information: Include file: <list> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <list>
^
obstacles/abstractobstacle.h:27:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
obstacles/abstractobstacle.h:31:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
obstacles/abstractobstacle.h:33:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
obstacles/abstractground.h:29:0: information: Include file: <selforg/position.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/position.h>
^
8/300 files checked 1% done
Checking obstacles/DummyObstacle.cpp ...
Checking obstacles/abstractground.cpp ...
motors/twoaxisservo.h:183:18: style: Virtual function 'setMinMax1' is called from constructor 'TwoAxisServo(TwoAxisJoint*joint,double _min1,double _max1,double power1,double _min2,double _max2,double power2,double damp=0.2,double integration=2,double maxVel=10.0,double jointLimit=1.3,bool minmaxCheck=true)' at line 39. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void setMinMax1(double _min, double _max){
                 ^
motors/twoaxisservo.cpp:39:5: note: Calling setMinMax1
    setMinMax1(_min1,_max1);
    ^
motors/twoaxisservo.h:183:18: note: setMinMax1 is a virtual function
    virtual void setMinMax1(double _min, double _max){
                 ^
motors/twoaxisservo.h:190:18: style: Virtual function 'setMinMax2' is called from constructor 'TwoAxisServo(TwoAxisJoint*joint,double _min1,double _max1,double power1,double _min2,double _max2,double power2,double damp=0.2,double integration=2,double maxVel=10.0,double jointLimit=1.3,bool minmaxCheck=true)' at line 40. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void setMinMax2(double _min, double _max){
                 ^
motors/twoaxisservo.cpp:40:5: note: Calling setMinMax2
    setMinMax2(_min2,_max2);
    ^
motors/twoaxisservo.h:190:18: note: setMinMax2 is a virtual function
    virtual void setMinMax2(double _min, double _max){
                 ^
motors/twoaxisservo.h:328:20: style: The function 'getMaxVel' overrides a function in a base class but is identical to the overridden function [uselessOverride]
    virtual double getMaxVel() override  {
                   ^
motors/twoaxisservo.h:202:20: note: Virtual function in base class
    virtual double getMaxVel() {
                   ^
motors/twoaxisservo.h:328:20: note: Function in derived class
    virtual double getMaxVel() override  {
                   ^
Checking obstacles/abstractobstacle.cpp ...
9/300 files checked 1% done
obstacles/abstractground.cpp:29:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
obstacles/abstractground.cpp:30:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
obstacles/abstractground.cpp:31:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
10/300 files checked 1% done
11/300 files checked 1% done
Checking obstacles/complexplayground.cpp ...
Checking obstacles/meshground.cpp ...
obstacles/abstractobstacle.cpp:27:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
obstacles/abstractobstacle.cpp:28:0: information: Include file: <selforg/position.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/position.h>
^
obstacles/meshground.cpp:25:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
obstacles/meshground.cpp:26:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
obstacles/meshground.cpp:28:0: information: Include file: <osg/Geode> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Geode>
^
obstacles/meshground.cpp:29:0: information: Include file: <osg/Geometry> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Geometry>
^
obstacles/meshground.cpp:30:0: information: Include file: <osg/Texture2D> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Texture2D>
^
obstacles/meshground.cpp:31:0: information: Include file: <osg/TexEnv> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/TexEnv>
^
obstacles/meshground.cpp:32:0: information: Include file: <osg/StateSet> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/StateSet>
^
obstacles/meshground.cpp:34:0: information: Include file: <osgDB/ReadFile> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgDB/ReadFile>
^
obstacles/meshground.cpp:37:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
obstacles/meshground.cpp:38:0: information: Include file: <ode-dbl/common.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/common.h>
^
obstacles/meshground.h:27:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
obstacles/meshground.h:28:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
obstacles/complexplayground.cpp:28:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
obstacles/complexplayground.cpp:29:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
obstacles/complexplayground.cpp:30:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
obstacles/meshground.h:60:18: style: The function 'update' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual void update(){ };
                 ^
obstacles/abstractobstacle.h:64:16: note: Virtual function in base class
  virtual void update() override;
               ^
obstacles/meshground.h:60:18: note: Function in derived class
    virtual void update(){ };
                 ^
obstacles/abstractground.cpp:139:20: style: C-style pointer casting [cstyleCast]
    OSGBox* obox = (OSGBox*)box->getOSGPrimitive();
                   ^
obstacles/abstractground.cpp:172:20: style: C-style pointer casting [cstyleCast]
    OSGBox* obox = (OSGBox*)groundPlane->getOSGPrimitive();
                   ^
12/300 files checked 2% done
obstacles/abstractground.cpp:119:30: warning: Conversion of string literal "call setGroundThickness before creation of playground!" to bool always evaluates to true. [incorrectStringBooleanError]
    assert(groundPlane==0 || "call setGroundThickness before creation of playground!");
                             ^
Checking obstacles/randomobstacles.cpp ...
Checking obstacles/terrainground.cpp ...
13/300 files checked 2% done
obstacles/complexplayground.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
obstacles/abstractobstacle.cpp:189:11: warning: Either the condition 'o' is redundant or there is possible null pointer dereference: o. [nullPointerRedundantCheck]
  else if(o->getBody())
          ^
obstacles/abstractobstacle.cpp:187:7: note: Assuming that condition 'o' is not redundant
  if (o && o->getGeom())
      ^
obstacles/abstractobstacle.cpp:183:40: note: Assignment to 'o=getMainPrimitive()'
  const Primitive* o = getMainPrimitive();
                                       ^
obstacles/abstractobstacle.cpp:183:22: note: o is assigned 'getMainPrimitive()' here.
  const Primitive* o = getMainPrimitive();
                     ^
obstacles/abstractobstacle.cpp:189:11: note: Null pointer dereference
  else if(o->getBody())
          ^
Checking obstacles/tracksections/degreesegment.cpp ...
obstacles/randomobstacles.cpp:29:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
obstacles/randomobstacles.cpp:30:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
obstacles/terrainground.cpp:25:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
obstacles/terrainground.cpp:33:0: information: Include file: <osgDB/ReadFile> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgDB/ReadFile>
^
obstacles/terrainground.h:27:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
obstacles/terrainground.h:28:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
14/300 files checked 2% done
obstacles/tracksections/abstracttracksection.h:30:0: information: Include file: <drawstuff/drawstuff.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <drawstuff/drawstuff.h>
^
obstacles/terrainground.h:60:14: style: The destructor '~TerrainGround' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual ~TerrainGround(){}
             ^
obstacles/abstractobstacle.h:58:12: note: Virtual destructor in base class
  virtual ~AbstractObstacle() override;
           ^
obstacles/terrainground.h:60:14: note: Destructor in derived class
    virtual ~TerrainGround(){}
             ^
obstacles/terrainground.h:65:18: style: The function 'update' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual void update(){ };
                 ^
obstacles/abstractobstacle.h:64:16: note: Virtual function in base class
  virtual void update() override;
               ^
obstacles/terrainground.h:65:18: note: Function in derived class
    virtual void update(){ };
                 ^
obstacles/terrainground.h:70:24: style: The function 'getMainPrimitive' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual Primitive* getMainPrimitive() const { return 0; }
                       ^
obstacles/abstractobstacle.h:130:22: note: Virtual function in base class
  virtual Primitive* getMainPrimitive() const  override = 0;
                     ^
obstacles/terrainground.h:70:24: note: Function in derived class
    virtual Primitive* getMainPrimitive() const { return 0; }
                       ^
15/300 files checked 2% done
Checking obstacles/tracksections/straightline.cpp ...
obstacles/randomobstacles.h:87:18: style: The function 'create' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual void create(){};
                 ^
obstacles/abstractobstacle.h:181:16: note: Virtual function in base class
  virtual void create() override;
               ^
obstacles/randomobstacles.h:87:18: note: Function in derived class
    virtual void create(){};
                 ^
obstacles/tracksections/degreesegment.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
16/300 files checked 2% done
Checking odeconfig.cpp ...
obstacles/tracksections/straightline.cpp:40:15: warning: Member variable 'StraightLine::isLeft' is not initialized in the constructor. [uninitMemberVar]
StraightLine::StraightLine(const Position& p,const double& angle)
              ^
obstacles/tracksections/straightline.cpp:40:15: warning: Member variable 'StraightLine::obstacle_exists' is not initialized in the constructor. [uninitMemberVar]
StraightLine::StraightLine(const Position& p,const double& angle)
              ^
obstacles/tracksections/straightline.cpp:49:15: warning: Member variable 'StraightLine::isLeft' is not initialized in the constructor. [uninitMemberVar]
StraightLine::StraightLine(const Matrix& pose)
              ^
obstacles/tracksections/straightline.cpp:49:15: warning: Member variable 'StraightLine::obstacle_exists' is not initialized in the constructor. [uninitMemberVar]
StraightLine::StraightLine(const Matrix& pose)
              ^
obstacles/tracksections/straightline.h:44:3: style: Class 'StraightLine' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  StraightLine(const Matrix& pose);
  ^
obstacles/tracksections/straightline.h:46:12: style: The destructor '~StraightLine' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~StraightLine(){}
           ^
obstacles/tracksections/abstracttracksection.h:63:12: note: Virtual destructor in base class
  virtual ~AbstractTrackSection(){}
           ^
obstacles/tracksections/straightline.h:46:12: note: Destructor in derived class
  virtual ~StraightLine(){}
           ^
17/300 files checked 2% done
odeconfig.h:27:0: information: Include file: <selforg/configurable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/configurable.h>
^
odeconfig.cpp:25:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
Checking osg/base.cpp ...
18/300 files checked 2% done
obstacles/complexplayground.cpp:129:8: style: Condition 'hasboundary' is always false [knownConditionTrueFalse]
    if(hasboundary){
       ^
obstacles/complexplayground.cpp:121:22: note: Assignment 'hasboundary=false', assigned value is 0
    bool hasboundary=false;
                     ^
obstacles/complexplayground.cpp:123:23: note: Assuming condition is false
      if(p->line_style==1){
                      ^
obstacles/complexplayground.cpp:129:8: note: Condition 'hasboundary' is always false
    if(hasboundary){
       ^
obstacles/complexplayground.cpp:160:11: style: Condition 'i>=1' is always false [knownConditionTrueFalse]
      if(i>=1){
          ^
obstacles/complexplayground.cpp:157:11: note: Assignment 'i=0', assigned value is 0
    int i=0;
          ^
obstacles/complexplayground.cpp:160:11: note: Condition 'i>=1' is always false
      if(i>=1){
          ^
obstacles/complexplayground.cpp:96:20: style: C-style pointer casting [cstyleCast]
    char* buffer = (char*)malloc(sizeof(char)*4096);
                   ^
obstacles/complexplayground.cpp:99:16: style: C-style pointer casting [cstyleCast]
      buffer = (char*)malloc(sizeof(char)*4096);
               ^
Checking osg/boundingshape.cpp ...
obstacles/complexplayground.cpp:165:6: style: Variable 'i' is reassigned a value before the old one has been used. [redundantAssignment]
    i=0;
     ^
obstacles/complexplayground.cpp:163:8: note: i is assigned
      i++;
       ^
obstacles/complexplayground.cpp:165:6: note: i is overwritten
    i=0;
     ^
obstacles/complexplayground.cpp:37:40: performance: Function parameter 'lines' should be passed by const reference. [passedByValue]
  int PolyLine::parse(std::list<char*> lines){
                                       ^
obstacles/complexplayground.cpp:51:17: style: Variable 'p' can be declared as pointer to const [constVariablePointer]
          char* p;
                ^
obstacles/complexplayground.cpp:54:18: style: Variable 'dat[i]' is assigned a value that is never used. [unreadVariable]
          dat[i] = atoi(p);
                 ^
19/300 files checked 3% done
osg/base.cpp:25:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
osg/base.cpp:26:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
osg/base.cpp:27:0: information: Include file: <osg/Node> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Node>
^
osg/base.cpp:28:0: information: Include file: <osg/Camera> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Camera>
^
osg/base.cpp:29:0: information: Include file: <osg/Geode> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Geode>
^
Checking osg/cameramanipulator.cpp ...
osg/base.cpp:30:0: information: Include file: <osg/Geometry> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Geometry>
^
osg/base.cpp:31:0: information: Include file: <osg/Texture2D> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Texture2D>
^
osg/base.cpp:32:0: information: Include file: <osg/TexEnv> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/TexEnv>
^
osg/base.cpp:33:0: information: Include file: <osg/TexGen> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/TexGen>
^
osg/base.cpp:34:0: information: Include file: <osg/Depth> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Depth>
^
osg/base.cpp:35:0: information: Include file: <osg/StateSet> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/StateSet>
^
osg/base.cpp:36:0: information: Include file: <osg/ClearNode> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/ClearNode>
^
osg/base.cpp:37:0: information: Include file: <osg/Transform> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Transform>
^
osg/base.cpp:38:0: information: Include file: <osg/MatrixTransform> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/MatrixTransform>
^
osg/primitive.h:28:0: information: Include file: <ode-dbl/common.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/common.h>
^
osg/base.cpp:39:0: information: Include file: <osg/Light> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Light>
^
osg/primitive.h:29:0: information: Include file: <selforg/storeable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/storeable.h>
^
osg/base.cpp:40:0: information: Include file: <osg/LightSource> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/LightSource>
^
osg/primitive.h:31:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
osg/base.cpp:41:0: information: Include file: <osg/ShapeDrawable> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/ShapeDrawable>
^
osg/base.cpp:42:0: information: Include file: <osg/PolygonOffset> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/PolygonOffset>
^
osg/base.cpp:43:0: information: Include file: <osg/CullFace> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/CullFace>
^
osg/substance.h:48:0: information: Include file: <ode-dbl/common.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include<ode-dbl/common.h>
^
osg/base.cpp:44:0: information: Include file: <osg/TexGenNode> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/TexGenNode>
^
osg/substance.h:49:0: information: Include file: <ode-dbl/contact.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include<ode-dbl/contact.h>
^
osg/base.cpp:45:0: information: Include file: <osgText/Font> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgText/Font>
^
osg/base.cpp:47:0: information: Include file: <osgUtil/CullVisitor> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgUtil/CullVisitor>
^
osg/boundingshape.h:30:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
osg/base.cpp:49:0: information: Include file: <osgDB/Registry> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgDB/Registry>
^
osg/boundingshape.h:31:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
osg/base.cpp:50:0: information: Include file: <osgDB/ReadFile> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgDB/ReadFile>
^
osg/base.cpp:52:0: information: Include file: <osgGA/AnimationPathManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/AnimationPathManipulator>
^
osg/boundingshape.cpp:27:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
osg/base.h:27:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
osg/boundingshape.cpp:29:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
osg/base.h:28:0: information: Include file: <osg/Transform> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Transform>
^
osg/boundingshape.cpp:30:0: information: Include file: <osgDB/FileUtils> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgDB/FileUtils>
^
osg/base.h:29:0: information: Include file: <osgText/Text> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgText/Text>
^
osg/hudstatistics.h:27:0: information: Include file: <selforg/statistictools.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/statistictools.h>
^
osg/base.h:35:0: information: Include file: <selforg/configurable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/configurable.h>
^
osg/osgprimitive.h:28:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
osg/osgprimitive.h:29:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
osg/osgprimitive.h:30:0: information: Include file: <osg/ref_ptr> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/ref_ptr>
^
osg/osgprimitive.h:33:0: information: Include file: <osgDB/ReadFile> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgDB/ReadFile>
^
osg/osgprimitive.h:34:0: information: Include file: <osgText/Text> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgText/Text>
^
osg/base.cpp:59:0: information: Include file: <selforg/callbackable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/callbackable.h>
^
osg/base.cpp:61:0: information: Include file: <osgShadow/ShadowedScene> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgShadow/ShadowedScene>
^
osg/base.cpp:64:0: information: Include file: <osgShadow/ShadowTexture> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgShadow/ShadowTexture>
^
osg/base.cpp:65:0: information: Include file: <osgShadow/ShadowMap> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgShadow/ShadowMap>
^
osg/base.cpp:66:0: information: Include file: <osgShadow/SoftShadowMap> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgShadow/SoftShadowMap>
^
osg/base.cpp:67:0: information: Include file: <osgShadow/ParallelSplitShadowMap> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgShadow/ParallelSplitShadowMap>
^
obstacles/tracksections/degreesegment.cpp:31:16: warning: Member variable 'DegreeSegment::obstacle_exists' is not initialized in the constructor. [uninitMemberVar]
DegreeSegment::DegreeSegment(const Position& p,const double& angle)
               ^
obstacles/tracksections/degreesegment.cpp:40:16: warning: Member variable 'DegreeSegment::obstacle_exists' is not initialized in the constructor. [uninitMemberVar]
DegreeSegment::DegreeSegment(const Matrix& pose)
               ^
obstacles/tracksections/degreesegment.h:45:3: style: Class 'DegreeSegment' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  DegreeSegment(const Matrix& position);
  ^
obstacles/tracksections/degreesegment.h:47:12: style: The destructor '~DegreeSegment' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~DegreeSegment(){}
           ^
obstacles/tracksections/abstracttracksection.h:63:12: note: Virtual destructor in base class
  virtual ~AbstractTrackSection(){}
           ^
obstacles/tracksections/degreesegment.h:47:12: note: Destructor in derived class
  virtual ~DegreeSegment(){}
           ^
osg/cameramanipulator.cpp:25:0: information: Include file: <osg/Notify> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Notify>
^
osg/cameramanipulator.cpp:26:0: information: Include file: <osg/Camera> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Camera>
^
osg/cameramanipulator.h:29:0: information: Include file: <osg/Version> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Version>
^
osg/cameramanipulator.h:34:0: information: Include file: <osgGA/MatrixManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/MatrixManipulator>
^
osg/cameramanipulator.h:38:0: information: Include file: <selforg/position.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/position.h>
^
osg/cameramanipulator.h:39:0: information: Include file: <selforg/callbackable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/callbackable.h>
^
osg/cameramanipulator.cpp:34:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
osg/cameramanipulator.cpp:35:0: information: Include file: <iterator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iterator>
^
20/300 files checked 3% done
osg/boundingshape.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking osg/cameramanipulatorFollow.cpp ...
osg/cameramanipulatorFollow.cpp:25:0: information: Include file: <osg/Notify> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Notify>
^
osg/cameramanipulatorFollow.h:46:25: style: The function 'className' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual const char* className() const { return "Following Camera"; }
                        ^
osg/cameramanipulator.h:66:27: note: Virtual function in base class
      virtual const char* className() const { return "Default Camera"; }
                          ^
osg/cameramanipulatorFollow.h:46:25: note: Function in derived class
    virtual const char* className() const { return "Following Camera"; }
                        ^
21/300 files checked 3% done
Checking osg/cameramanipulatorRace.cpp ...
osg/osgprimitive.h:144:5: style: Class 'OSGBox' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    OSGBox(osg::Vec3 dim);
    ^
osg/osgprimitive.h:162:5: style: Class 'OSGBoxTex' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    OSGBoxTex(osg::Vec3 dim);
    ^
osg/osgprimitive.h:186:5: style: Class 'OSGSphere' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    OSGSphere(float radius);
    ^
osg/osgprimitive.h:231:5: style: Class 'OSGLine' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    OSGLine(const std::list<osg::Vec3>& points);
    ^
osg/osgprimitive.h:261:5: style: Class 'OSGMesh' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    OSGMesh(const std::string& filename, float scale = 1, const osgDB::ReaderWriter::Options* options = 0);
    ^
osg/osgprimitive.h:289:5: style: Class 'OSGText' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    OSGText(const std::string& text, int fontsize = 12,
    ^
osg/osgprimitive.h:235:18: style: The function 'applyTextures' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual void applyTextures(){}
                 ^
osg/osgprimitive.h:99:18: note: Virtual function in base class
    virtual void applyTextures() override;
                 ^
osg/osgprimitive.h:235:18: note: Function in derived class
    virtual void applyTextures(){}
                 ^
osg/osgprimitive.h:262:6: style: The destructor '~OSGMesh' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    ~OSGMesh();
     ^
osg/osgprimitive.h:67:14: note: Virtual destructor in base class
    virtual ~OSGPrimitive () override;
             ^
osg/osgprimitive.h:262:6: note: Destructor in derived class
    ~OSGMesh();
     ^
osg/cameramanipulatorRace.cpp:25:0: information: Include file: <osg/Notify> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Notify>
^
osg/cameramanipulatorRace.cpp:30:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
osg/cameramanipulator.cpp:647:22: style: Local variable 'p' shadows outer variable [shadowVariable]
          Primitive* p = *pi;
                     ^
osg/cameramanipulator.cpp:620:13: note: Shadowed declaration
        Pos p = camHandle.watchingAgent->getRobot()->getPosition();
            ^
osg/cameramanipulator.cpp:647:22: note: Shadow variable
          Primitive* p = *pi;
                     ^
osg/base.h:67:5: style: Class 'Base' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Base(const std::string& caption="LpzRobots Simulator (Martius et al)");
    ^
osg/primitive.h:271:3: style: Class 'Box' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Box(const osg::Vec3& dim);
  ^
osg/primitive.h:291:3: style: Class 'Sphere' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Sphere(float radius);
  ^
osg/primitive.h:459:16: style: The function 'init' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void init(const OdeHandle& odeHandle, double mass,
               ^
osg/primitive.h:102:16: note: Virtual function in base class
  virtual void init(const OdeHandle& odeHandle, double mass,
               ^
osg/primitive.h:459:16: note: Function in derived class
  virtual void init(const OdeHandle& odeHandle, double mass,
               ^
osg/primitive.h:462:16: style: The function 'update' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void update() {}
               ^
osg/primitive.h:109:16: note: Virtual function in base class
  virtual void update()  override;
               ^
osg/primitive.h:462:16: note: Function in derived class
  virtual void update() {}
               ^
osg/primitive.h:463:25: style: The function 'getOSGPrimitive' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual OSGPrimitive* getOSGPrimitive() { return 0; }
                        ^
osg/primitive.h:112:25: note: Virtual function in base class
  virtual OSGPrimitive* getOSGPrimitive()  override = 0;
                        ^
osg/primitive.h:463:25: note: Function in derived class
  virtual OSGPrimitive* getOSGPrimitive() { return 0; }
                        ^
osg/primitive.h:465:16: style: The function 'setMass' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void setMass(double mass, bool density = false) {}
               ^
osg/primitive.h:165:16: note: Virtual function in base class
  virtual void setMass(double mass, bool density = false)  override = 0;
               ^
osg/primitive.h:465:16: note: Function in derived class
  virtual void setMass(double mass, bool density = false) {}
               ^
osg/primitive.h:470:15: style: The function 'getPosition' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Pos getPosition() const {
              ^
osg/primitive.h:141:15: note: Virtual function in base class
  virtual Pos getPosition() const override;
              ^
osg/primitive.h:470:15: note: Function in derived class
  virtual Pos getPosition() const {
              ^
osg/primitive.h:476:15: style: The function 'getVel' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Pos getVel() const {
              ^
osg/primitive.h:145:15: note: Virtual function in base class
  virtual Pos getVel() const override;
              ^
osg/primitive.h:476:15: note: Function in derived class
  virtual Pos getVel() const {
              ^
osg/base.cpp:209:13: style: Condition 'debugColor' is always false [knownConditionTrueFalse]
        if (debugColor)
            ^
osg/base.cpp:199:23: note: Assignment 'debugColor=false', assigned value is 0
      bool debugColor=false;
                      ^
osg/base.cpp:209:13: note: Condition 'debugColor' is always false
        if (debugColor)
            ^
osg/base.cpp:649:26: style: C-style pointer casting [cstyleCast]
    dGeomSetData(ground, (void*)plane);
                         ^
osg/cameramanipulatorRace.h:50:25: style: The function 'className' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual const char* className() const { return "Race-Camera"; }
                        ^
osg/cameramanipulator.h:66:27: note: Virtual function in base class
      virtual const char* className() const { return "Default Camera"; }
                          ^
osg/cameramanipulatorRace.h:50:25: note: Function in derived class
    virtual const char* className() const { return "Race-Camera"; }
                        ^
22/300 files checked 4% done
osg/base.cpp:363:22: style: Local variable 'stateset' shadows outer variable [shadowVariable]
      osg::StateSet* stateset = geom->getOrCreateStateSet();
                     ^
osg/base.cpp:285:20: note: Shadowed declaration
    osg::StateSet* stateset = geode->getOrCreateStateSet();
                   ^
osg/base.cpp:363:22: note: Shadow variable
      osg::StateSet* stateset = geom->getOrCreateStateSet();
                     ^
23/300 files checked 4% done
Checking osg/cameramanipulatorTV.cpp ...
Checking osg/heightfieldprimitive.cpp ...
osg/cameramanipulatorTV.cpp:25:0: information: Include file: <osg/Notify> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Notify>
^
osg/cameramanipulatorTV.cpp:30:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
24/300 files checked 5% done
Checking osg/hudstatistics.cpp ...
osg/cameramanipulatorTV.h:50:25: style: The function 'className' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual const char* className() const { return "TV-Camera"; }
                        ^
osg/cameramanipulator.h:66:27: note: Virtual function in base class
      virtual const char* className() const { return "Default Camera"; }
                          ^
osg/cameramanipulatorTV.h:50:25: note: Function in derived class
    virtual const char* className() const { return "TV-Camera"; }
                        ^
osg/osgheightfield.h:29:0: information: Include file: <osg/Shape> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Shape>
^
osg/heightfieldprimitive.h:29:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
osg/heightfieldprimitive.cpp:28:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
osg/heightfieldprimitive.cpp:29:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
osg/heightfieldprimitive.cpp:30:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
osg/heightfieldprimitive.cpp:31:0: information: Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdio>
^
25/300 files checked 5% done
osg/hudstatistics.cpp:26:0: information: Include file: <selforg/abstractmeasure.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractmeasure.h>
^
osg/hudstatistics.cpp:27:0: information: Include file: <selforg/statisticmeasure.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/statisticmeasure.h>
^
osg/hudstatistics.cpp:28:0: information: Include file: <selforg/complexmeasure.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/complexmeasure.h>
^
osg/hudstatistics.cpp:29:0: information: Include file: <selforg/statisticmeasure.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/statisticmeasure.h>
^
Checking osg/joint.cpp ...
osg/hudstatistics.cpp:33:0: information: Include file: <osgText/Text> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgText/Text>
^
osg/hudstatistics.cpp:34:0: information: Include file: <osgText/Font> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgText/Font>
^
osg/hudstatistics.cpp:35:0: information: Include file: <osg/Geode> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Geode>
^
osg/hudstatistics.cpp:37:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
osg/hudstatistics.cpp:38:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
osg/hudstatistics.cpp:39:0: information: Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdio>
^
osg/hudstatistics.cpp:150:5: error: syntax error [syntaxError]
    FOREACHC(std::list<WindowStatistic*>, windowStatisticList, i) {
    ^
26/300 files checked 5% done
osg/joint.cpp:27:0: information: Include file: <osg/Vec3> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Vec3>
^
osg/joint.cpp:28:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
osg/joint.h:27:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
osg/joint.h:28:0: information: Include file: <list> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <list>
^
Checking osg/lpzhelphandler.cpp ...
osg/lpzhelphandler.h:28:0: information: Include file: <osgViewer/ViewerEventHandlers> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/ViewerEventHandlers>
^
osg/lpzhelphandler.cpp:27:0: information: Include file: <osg/Version> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Version>
^
osg/lpzhelphandler.cpp:28:0: information: Include file: <osg/PolygonMode> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/PolygonMode>
^
osg/lpzhelphandler.cpp:29:0: information: Include file: <osgText/Text> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgText/Text>
^
osg/lpzhelphandler.cpp:30:0: information: Include file: <osgViewer/ViewerEventHandlers> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/ViewerEventHandlers>
^
osg/lpzhelphandler.cpp:31:0: information: Include file: <osgViewer/Renderer> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/Renderer>
^
osg/lpzhelphandler.cpp:49:0: information: Include file: <osgViewer/ViewerEventHandlers> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/ViewerEventHandlers>
^
osg/lpzhelphandler.cpp:50:0: information: Include file: <osgViewer/Renderer> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/Renderer>
^
osg/lpzhelphandler.cpp:52:0: information: Include file: <osg/PolygonMode> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/PolygonMode>
^
osg/lpzhelphandler.cpp:54:0: information: Include file: <osgText/Text> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgText/Text>
^
27/300 files checked 5% done
osg/lpzhelphandler.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
osg/heightfieldprimitive.cpp:40:5: style: Struct 'Indices' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Indices(dTriIndex d[3]) { i[0] = d[0]; i[1] = d[1]; i[2] = d[2]; }
    ^
osg/heightfieldprimitive.cpp:48:5: style: Struct 'Vertex' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Vertex(const osg::Vec3& vec) { v[0] = vec.x(); v[1] = vec.y(); v[2] = vec.z();}
    ^
osg/heightfieldprimitive.h:49:27: style: The function 'getOSGPrimitive' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual OSGPrimitive* getOSGPrimitive() { return osgheightfield; }
                          ^
osg/primitive.h:112:25: note: Virtual function in base class
  virtual OSGPrimitive* getOSGPrimitive()  override = 0;
                        ^
osg/heightfieldprimitive.h:49:27: note: Function in derived class
    virtual OSGPrimitive* getOSGPrimitive() { return osgheightfield; }
                          ^
osg/heightfieldprimitive.h:51:18: style: The function 'setMass' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual void setMass(double mass, bool density = false) {}
                 ^
osg/primitive.h:165:16: note: Virtual function in base class
  virtual void setMass(double mass, bool density = false)  override = 0;
               ^
osg/heightfieldprimitive.h:51:18: note: Function in derived class
    virtual void setMass(double mass, bool density = false) {}
                 ^
Checking osg/lpzviewer.cpp ...
osg/heightfieldprimitive.cpp:107:42: style: C-style pointer casting [cstyleCast]
      dGeomTriMeshDataBuildSimple (data, (dReal*)vertices, rows*cols, (dTriIndex*)indices, k*3);
                                         ^
osg/heightfieldprimitive.cpp:109:26: style: C-style pointer casting [cstyleCast]
      dGeomSetData(geom, (void*)this); // set primitive as geom data
                         ^
osg/heightfieldprimitive.cpp:40:23: style: Parameter 'd' can be declared as const array [constParameter]
    Indices(dTriIndex d[3]) { i[0] = d[0]; i[1] = d[1]; i[2] = d[2]; }
                      ^
osg/lpzviewer.h:28:0: information: Include file: <osgViewer/Viewer> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/Viewer>
^
28/300 files checked 5% done
osg/lpzviewer.h:29:0: information: Include file: <osg/Group> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Group>
^
osg/lpzviewer.cpp:27:0: information: Include file: <osgViewer/ViewerBase> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/ViewerBase>
^
osg/lpzviewer.cpp:28:0: information: Include file: <osgViewer/View> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/View>
^
osg/lpzviewer.cpp:29:0: information: Include file: <osgViewer/Renderer> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/Renderer>
^
osg/lpzviewer.cpp:31:0: information: Include file: <osgUtil/Statistics> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgUtil/Statistics>
^
osg/lpzviewer.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking osg/old/motionblurcallback.cpp ...
osg/lpzhelphandler.cpp:64:5: performance: Variable '_camera' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _camera = new osg::Camera;
    ^
osg/lpzhelphandler.h:38:9: style: Class 'LpzHelpHandler' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        LpzHelpHandler(osg::ApplicationUsage* au=0);
        ^
osg/lpzviewer.h:42:5: style: Class 'LPZViewer' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    LPZViewer(osg::ArgumentParser& arguments);
    ^
osg/lpzviewer.h:44:5: style: Class 'LPZViewer' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    LPZViewer(const osgViewer::Viewer& viewer, const osg::CopyOp& copyop=osg::CopyOp::SHALLOW_COPY);
    ^
osg/old/motionblurcallback.h:33:0: information: Include file: <osgProducer/OsgSceneHandler> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgProducer/OsgSceneHandler>
^
29/300 files checked 5% done
30/300 files checked 5% done
osg/old/motionblurcallback.cpp:34:29: warning: Member variable 'MotionBlurDrawCallback::t0_' is not initialized in the constructor. [uninitMemberVar]
    MotionBlurDrawCallback::MotionBlurDrawCallback(GlobalData& global)
                            ^
osg/old/motionblurcallback.cpp:34:29: warning: Member variable 'MotionBlurDrawCallback::persistence_' is not initialized in the constructor. [uninitMemberVar]
    MotionBlurDrawCallback::MotionBlurDrawCallback(GlobalData& global)
                            ^
Checking osg/osgdepthshadow.cc ...
Checking osg/osgheightfield.cpp ...
osg/old/motionblurcallback.h:49:7: style: Class 'MotionBlurDrawCallback' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
      MotionBlurDrawCallback(GlobalData& global);
      ^
Checking osg/osgprimitive.cpp ...
31/300 files checked 6% done
osg/osgdepthshadow.cc:1:0: information: Include file: <osgProducer/Viewer> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgProducer/Viewer>
^
osg/osgdepthshadow.cc:3:0: information: Include file: <osg/Projection> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Projection>
^
osg/osgdepthshadow.cc:4:0: information: Include file: <osg/Geometry> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Geometry>
^
osg/osgdepthshadow.cc:5:0: information: Include file: <osg/Texture> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Texture>
^
osg/osgdepthshadow.cc:6:0: information: Include file: <osg/TexGen> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/TexGen>
^
osg/osgdepthshadow.cc:7:0: information: Include file: <osg/Geode> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Geode>
^
osg/osgdepthshadow.cc:8:0: information: Include file: <osg/ShapeDrawable> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/ShapeDrawable>
^
osg/osgdepthshadow.cc:9:0: information: Include file: <osg/PolygonOffset> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/PolygonOffset>
^
osg/osgdepthshadow.cc:10:0: information: Include file: <osg/CullFace> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/CullFace>
^
osg/osgdepthshadow.cc:11:0: information: Include file: <osg/TexEnvCombine> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/TexEnvCombine>
^
osg/osgdepthshadow.cc:12:0: information: Include file: <osg/MatrixTransform> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/MatrixTransform>
^
osg/osgdepthshadow.cc:13:0: information: Include file: <osg/Light> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Light>
^
osg/osgheightfield.cpp:27:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
osg/osgdepthshadow.cc:14:0: information: Include file: <osg/LightSource> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/LightSource>
^
osg/osgheightfield.cpp:28:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
osg/osgdepthshadow.cc:15:0: information: Include file: <osg/PolygonOffset> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/PolygonOffset>
^
osg/osgheightfield.cpp:29:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
osg/osgdepthshadow.cc:16:0: information: Include file: <osg/CullFace> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/CullFace>
^
osg/osgheightfield.cpp:31:0: information: Include file: <osg/Texture2D> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Texture2D>
^
osg/osgdepthshadow.cc:17:0: information: Include file: <osg/Material> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Material>
^
osg/osgheightfield.cpp:32:0: information: Include file: <osg/ShapeDrawable> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/ShapeDrawable>
^
osg/osgdepthshadow.cc:19:0: information: Include file: <osgUtil/TransformCallback> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgUtil/TransformCallback>
^
osg/osgheightfield.cpp:33:0: information: Include file: <osg/MatrixTransform> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/MatrixTransform>
^
osg/osgdepthshadow.cc:20:0: information: Include file: <osgUtil/RenderToTextureStage> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgUtil/RenderToTextureStage>
^
osg/osgheightfield.cpp:34:0: information: Include file: <osgDB/FileUtils> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgDB/FileUtils>
^
osg/osgheightfield.cpp:35:0: information: Include file: <osg/Material> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Material>
^
osg/osgheightfield.cpp:36:0: information: Include file: <osgUtil/Simplifier> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgUtil/Simplifier>
^
osg/osgprimitive.cpp:25:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
osg/osgprimitive.cpp:27:0: information: Include file: <osg/Texture2D> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Texture2D>
^
osg/osgprimitive.cpp:28:0: information: Include file: <osg/Geode> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Geode>
^
osg/osgprimitive.cpp:29:0: information: Include file: <osg/ShapeDrawable> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/ShapeDrawable>
^
osg/osgprimitive.cpp:30:0: information: Include file: <osg/MatrixTransform> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/MatrixTransform>
^
osg/osgprimitive.cpp:31:0: information: Include file: <osgDB/ReadFile> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgDB/ReadFile>
^
osg/osgprimitive.cpp:32:0: information: Include file: <osg/Geometry> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Geometry>
^
osg/osgprimitive.cpp:38:0: information: Include file: <osg/Material> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Material>
^
osg/osgprimitive.cpp:39:0: information: Include file: <osg/TexEnv> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/TexEnv>
^
osg/osgprimitive.cpp:40:0: information: Include file: <osg/AlphaFunc> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/AlphaFunc>
^
osg/osgprimitive.cpp:43:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
osg/joint.h:90:18: style: Virtual function 'setFeedBackMode' is called from destructor '~Joint()' at line 45. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void setFeedBackMode(bool mode) override;
                 ^
osg/joint.cpp:45:5: note: Calling setFeedBackMode
    setFeedBackMode(false);
    ^
osg/joint.h:90:18: note: setFeedBackMode is a virtual function
    virtual void setFeedBackMode(bool mode) override;
                 ^
osg/joint.h:112:18: style: The function 'getAxis' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual Axis getAxis(int n) const { return axis1;}
                 ^
osg/joint.h:76:18: note: Virtual function in base class
    virtual Axis getAxis(int n) const { return Axis();};
                 ^
osg/joint.h:112:18: note: Function in derived class
    virtual Axis getAxis(int n) const { return axis1;}
                 ^
osg/joint.h:119:17: style: The function 'getNumberAxes' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getNumberAxes() const { return 1;};
                ^
osg/joint.h:74:17: note: Virtual function in base class
    virtual int getNumberAxes() const  override = 0;
                ^
osg/joint.h:119:17: note: Function in derived class
    virtual int getNumberAxes() const { return 1;};
                ^
osg/joint.h:133:18: style: The function 'getAxis' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual Axis getAxis(int n) const { if (n==0) return axis1; else return axis2;}
                 ^
osg/joint.h:112:18: note: Virtual function in base class
    virtual Axis getAxis(int n) const { return axis1;}
                 ^
osg/joint.h:133:18: note: Function in derived class
    virtual Axis getAxis(int n) const { if (n==0) return axis1; else return axis2;}
                 ^
osg/joint.h:143:17: style: The function 'getNumberAxes' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getNumberAxes() const { return 2;};
                ^
osg/joint.h:119:17: note: Virtual function in base class
    virtual int getNumberAxes() const { return 1;};
                ^
osg/joint.h:143:17: note: Function in derived class
    virtual int getNumberAxes() const { return 2;};
                ^
osg/joint.h:175:17: style: The function 'getNumberAxes' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getNumberAxes() const { return 0; }
                ^
osg/joint.h:74:17: note: Virtual function in base class
    virtual int getNumberAxes() const  override = 0;
                ^
osg/joint.h:175:17: note: Function in derived class
    virtual int getNumberAxes() const { return 0; }
                ^
osg/joint.h:292:17: style: The function 'getNumberAxes' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getNumberAxes() const { return 0; }
                ^
osg/joint.h:74:17: note: Virtual function in base class
    virtual int getNumberAxes() const  override = 0;
                ^
osg/joint.h:292:17: note: Function in derived class
    virtual int getNumberAxes() const { return 0; }
                ^
32/300 files checked 6% done
osg/joint.cpp:65:20: style: C-style pointer casting [cstyleCast]
        feedback = (dJointFeedback*)malloc(sizeof(dJointFeedback));
                   ^
Checking osg/primitive.cpp ...
33/300 files checked 6% done
34/300 files checked 7% done
Checking osg/robotcameramanager.cpp ...
Checking osg/substance.cpp ...
osg/primitive.cpp:25:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
osg/primitive.cpp:26:0: information: Include file: <osg/MatrixTransform> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/MatrixTransform>
^
osg/primitive.cpp:27:0: information: Include file: <osg/Vec4> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Vec4>
^
osg/primitive.cpp:36:0: information: Include file: <selforg/quickmp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/quickmp.h>
^
osg/robotcameramanager.h:28:0: information: Include file: <osgGA/GUIEventHandler> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/GUIEventHandler>
^
osg/robotcameramanager.h:29:0: information: Include file: <osgGA/GUIEventAdapter> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/GUIEventAdapter>
^
osg/robotcameramanager.h:30:0: information: Include file: <osgGA/GUIActionAdapter> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/GUIActionAdapter>
^
osg/robotcameramanager.cpp:27:0: information: Include file: <osg/Vec3> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Vec3>
^
osg/robotcameramanager.cpp:28:0: information: Include file: <osg/Camera> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Camera>
^
osg/robotcameramanager.cpp:29:0: information: Include file: <osg/Image> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Image>
^
osg/robotcameramanager.cpp:30:0: information: Include file: <osg/Texture2D> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Texture2D>
^
osg/robotcameramanager.cpp:31:0: information: Include file: <osg/Texture> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Texture>
^
osg/robotcameramanager.cpp:32:0: information: Include file: <osg/Geometry> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Geometry>
^
osg/robotcameramanager.cpp:33:0: information: Include file: <osg/Geode> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Geode>
^
osg/robotcameramanager.cpp:35:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
osg/substance.cpp:29:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
osg/substance.cpp:30:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
osg/substance.cpp:31:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
osg/osgprimitive.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
osg/robotcameramanager.cpp:40:32: warning: Member variable 'Overlay::overlayW' is not initialized in the constructor. [uninitMemberVar]
  RobotCameraManager::Overlay::Overlay(const Camera::CameraImage& image) :
                               ^
osg/robotcameramanager.cpp:40:32: warning: Member variable 'Overlay::overlayH' is not initialized in the constructor. [uninitMemberVar]
  RobotCameraManager::Overlay::Overlay(const Camera::CameraImage& image) :
                               ^
osg/robotcameramanager.cpp:40:32: warning: Member variable 'Overlay::overlayX' is not initialized in the constructor. [uninitMemberVar]
  RobotCameraManager::Overlay::Overlay(const Camera::CameraImage& image) :
                               ^
osg/robotcameramanager.cpp:40:32: warning: Member variable 'Overlay::overlayY' is not initialized in the constructor. [uninitMemberVar]
  RobotCameraManager::Overlay::Overlay(const Camera::CameraImage& image) :
                               ^
osg/robotcameramanager.cpp:54:5: performance: Variable 'display' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    display = new osg::Group();
    ^
osg/robotcameramanager.h:41:7: style: Struct 'Overlay' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
      Overlay(const Camera::CameraImage& image);
      ^
35/300 files checked 7% done
osg/substance.cpp:230:35: style: C-style pointer casting [cstyleCast]
    AnisotropFrictionData* data = (AnisotropFrictionData*)userdata;
                                  ^
Checking robots/amos4legs.cpp ...
osg/substance.cpp:202:41: style: Parameter 'params' can be declared as reference to const. However it seems that 'dummyCallBack' is a callback function, if 'params' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
  int dummyCallBack(dSurfaceParameters& params, GlobalData& globaldata, void *userdata,
                                        ^
osg/substance.cpp:211:26: note: You might need to cast the function pointer here
    setCollisionCallback(dummyCallBack,0);
                         ^
osg/substance.cpp:202:41: note: Parameter 'params' can be declared as reference to const
  int dummyCallBack(dSurfaceParameters& params, GlobalData& globaldata, void *userdata,
                                        ^
osg/substance.cpp:202:61: style: Parameter 'globaldata' can be declared as reference to const. However it seems that 'dummyCallBack' is a callback function, if 'globaldata' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
  int dummyCallBack(dSurfaceParameters& params, GlobalData& globaldata, void *userdata,
                                                            ^
osg/substance.cpp:211:26: note: You might need to cast the function pointer here
    setCollisionCallback(dummyCallBack,0);
                         ^
osg/substance.cpp:202:61: note: Parameter 'globaldata' can be declared as reference to const
  int dummyCallBack(dSurfaceParameters& params, GlobalData& globaldata, void *userdata,
                                                            ^
osg/substance.cpp:222:68: style: Parameter 'globaldata' can be declared as reference to const. However it seems that 'anisocallback' is a callback function, if 'globaldata' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
  static int anisocallback(dSurfaceParameters& params, GlobalData& globaldata, void *userdata,
                                                                   ^
osg/substance.cpp:264:26: note: You might need to cast the function pointer here
    setCollisionCallback(anisocallback,data);
                         ^
osg/substance.cpp:222:68: note: Parameter 'globaldata' can be declared as reference to const
  static int anisocallback(dSurfaceParameters& params, GlobalData& globaldata, void *userdata,
                                                                   ^
osg/substance.cpp:281:54: style: Parameter 'params' can be declared as reference to const. However it seems that 'dbg_output' is a callback function, if 'params' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
  int DebugSubstance::dbg_output(dSurfaceParameters& params, GlobalData& globaldata,
                                                     ^
osg/substance.cpp:277:26: note: You might need to cast the function pointer here
    setCollisionCallback(dbg_output, 0 );
                         ^
osg/substance.cpp:281:54: note: Parameter 'params' can be declared as reference to const
  int DebugSubstance::dbg_output(dSurfaceParameters& params, GlobalData& globaldata,
                                                     ^
osg/substance.cpp:281:74: style: Parameter 'globaldata' can be declared as reference to const. However it seems that 'dbg_output' is a callback function, if 'globaldata' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
  int DebugSubstance::dbg_output(dSurfaceParameters& params, GlobalData& globaldata,
                                                                         ^
osg/substance.cpp:277:26: note: You might need to cast the function pointer here
    setCollisionCallback(dbg_output, 0 );
                         ^
osg/substance.cpp:281:74: note: Parameter 'globaldata' can be declared as reference to const
  int DebugSubstance::dbg_output(dSurfaceParameters& params, GlobalData& globaldata,
                                                                         ^
osg/substance.cpp:202:79: style: Parameter 'userdata' can be declared as pointer to const. However it seems that 'dummyCallBack' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
  int dummyCallBack(dSurfaceParameters& params, GlobalData& globaldata, void *userdata,
                                                                              ^
osg/substance.cpp:211:26: note: You might need to cast the function pointer here
    setCollisionCallback(dummyCallBack,0);
                         ^
osg/substance.cpp:202:79: note: Parameter 'userdata' can be declared as pointer to const
  int dummyCallBack(dSurfaceParameters& params, GlobalData& globaldata, void *userdata,
                                                                              ^
osg/substance.cpp:203:31: style: Parameter 'contacts' can be declared as pointer to const. However it seems that 'dummyCallBack' is a callback function, if 'contacts' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
                    dContact* contacts, int numContacts,
                              ^
osg/substance.cpp:211:26: note: You might need to cast the function pointer here
    setCollisionCallback(dummyCallBack,0);
                         ^
osg/substance.cpp:203:31: note: Parameter 'contacts' can be declared as pointer to const
                    dContact* contacts, int numContacts,
                              ^
36/300 files checked 7% done
Checking robots/amosII.cpp ...
osg/osgprimitive.cpp:717:5: warning: Class 'OSGText' does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s). [noCopyConstructor]
    osgText = new osgText::Text;
    ^
osg/osgprimitive.cpp:717:5: warning: Class 'OSGText' does not have a operator= which is recommended since it has dynamic memory/resource allocation(s). [noOperatorEq]
    osgText = new osgText::Text;
    ^
osg/osgprimitive.h:76:18: style: Virtual function 'setTexture' is called from constructor 'OSGPrimitive()' at line 68. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void setTexture(const std::string& filename) override;
                 ^
osg/osgprimitive.cpp:68:5: note: Calling setTexture
    setTexture("Images/really_white.rgb");
    ^
osg/osgprimitive.h:76:18: note: setTexture is a virtual function
    virtual void setTexture(const std::string& filename) override;
                 ^
robots/amos4legs.cpp:26:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
robots/amos4legs.cpp:27:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/amos4legs.cpp:30:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
robots/amos4legs.cpp:33:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
robots/amos4legs.cpp:36:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
robots/amos4legs.cpp:37:0: information: Include file: <ode_robots/irsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/irsensor.h>
^
robots/amos4legs.cpp:38:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
robots/amos4legs.cpp:41:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
robots/amos4legs.cpp:42:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
robots/amos4legs.cpp:43:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
robots/amos4legs.cpp:44:0: information: Include file: <ode_robots/spring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/spring.h>
^
robots/amos4legs.cpp:46:0: information: Include file: <ode_robots/mathutils.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/mathutils.h>
^
robots/amos4legs.h:28:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
robots/amos4legs.h:29:0: information: Include file: <selforg/inspectable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/inspectable.h>
^
robots/amos4legs.h:30:0: information: Include file: <ode_robots/contactsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/contactsensor.h>
^
robots/amos4legs.h:32:0: information: Include file: <ode_robots/relativepositionsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/relativepositionsensor.h>
^
robots/amos4legs.h:33:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
robots/amos4legs.h:34:0: information: Include file: <ode_robots/amosiisensormotordefinition.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/amosiisensormotordefinition.h>
^
osg/osgprimitive.cpp:494:24: style: Local variable 'da' shadows outer variable [shadowVariable]
      osg::DrawArrays *da = new osg::DrawArrays(osg::PrimitiveSet::LINES,0,v->size());
                       ^
osg/osgprimitive.cpp:491:22: note: Shadowed declaration
    osg::DrawArrays *da = geometry->getNumPrimitiveSets()>0 ?
                     ^
osg/osgprimitive.cpp:494:24: note: Shadow variable
      osg::DrawArrays *da = new osg::DrawArrays(osg::PrimitiveSet::LINES,0,v->size());
                       ^
37/300 files checked 8% done
robots/amosII.cpp:37:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
robots/amosII.cpp:38:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/amosII.cpp:41:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
Checking robots/arm.cpp ...
robots/amosII.cpp:44:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
robots/amosII.cpp:47:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
robots/amosII.cpp:48:0: information: Include file: <ode_robots/irsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/irsensor.h>
^
robots/amosII.cpp:49:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
robots/amosII.cpp:52:0: information: Include file: <ode_robots/soundsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/soundsensor.h>
^
robots/amosII.cpp:55:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
robots/amosII.cpp:56:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
robots/amosII.cpp:57:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
robots/amosII.cpp:58:0: information: Include file: <ode_robots/spring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/spring.h>
^
robots/amosII.cpp:60:0: information: Include file: <ode_robots/mathutils.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/mathutils.h>
^
robots/amosII.h:28:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
robots/amosII.h:29:0: information: Include file: <selforg/inspectable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/inspectable.h>
^
robots/amosII.h:30:0: information: Include file: <ode_robots/contactsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/contactsensor.h>
^
robots/amosII.h:32:0: information: Include file: <ode_robots/relativepositionsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/relativepositionsensor.h>
^
robots/amosII.h:33:0: information: Include file: <ode_robots/amosiisensormotordefinition.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/amosiisensormotordefinition.h>
^
robots/amosII.h:34:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
robots/arm.cpp:25:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
robots/arm.cpp:26:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/arm.h:28:0: information: Include file: <selforg/inspectable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/inspectable.h>
^
robots/arm.h:29:0: information: Include file: <list> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <list>
^
robots/arm.h:30:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
robots/arm.h:31:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
robots/arm.h:33:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
robots/arm.h:34:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
robots/arm.h:36:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
robots/oderobot.h:27:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
robots/oderobot.h:28:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
robots/oderobot.h:30:0: information: Include file: <selforg/abstractrobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractrobot.h>
^
robots/oderobot.h:31:0: information: Include file: <selforg/storeable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/storeable.h>
^
robots/arm.cpp:34:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
robots/arm.cpp:35:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
robots/arm.cpp:36:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
robots/arm.cpp:37:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
robots/arm.cpp:38:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
osg/primitive.cpp:112:24: style: C-style pointer casting [cstyleCast]
    dGeomSetData(geom, (void*)this); // set primitive as geom data
                       ^
osg/primitive.cpp:719:24: style: C-style pointer casting [cstyleCast]
    dGeomSetData(geom, (void*)this); // set primitive as geom data
                       ^
38/300 files checked 8% done
robots/arm.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking robots/arm2segm.cpp ...
robots/arm2segm.h:28:0: information: Include file: <selforg/configurable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/configurable.h>
^
robots/arm2segm.h:29:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
robots/amos4legs.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
robots/amosII.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
robots/arm2segm.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
robots/arm2segm.cpp:34:5: performance: Variable 'parentspace' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    parentspace=odeHandle.space;
    ^
robots/arm2segm.cpp:36:5: performance: Variable 'speed' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    speed=1.0;
    ^
robots/arm2segm.cpp:37:5: performance: Variable 'factorSensors' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    factorSensors=2.0;
    ^
robots/arm2segm.h:130:14: warning: The class 'Arm2Segm' defines member variable with name 'parentspace' also defined in its parent class 'OdeRobot'. [duplInheritedMember]
    dSpaceID parentspace;
             ^
robots/oderobot.h:279:14: note: Parent variable 'OdeRobot::parentspace'
    dSpaceID parentspace;
             ^
robots/arm2segm.h:130:14: note: Derived variable 'Arm2Segm::parentspace'
    dSpaceID parentspace;
             ^
robots/oderobot.h:49:5: style: Struct 'Attachment' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Attachment(int pI = -1, int jI = -1) : primitiveIndex(pI), jointIndex(jI) {}
    ^
robots/arm2segm.h:60:14: style: The destructor '~Arm2Segm' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual ~Arm2Segm(){};
             ^
robots/oderobot.h:76:14: note: Virtual destructor in base class
    virtual ~OdeRobot();
             ^
robots/arm2segm.h:60:14: note: Destructor in derived class
    virtual ~Arm2Segm(){};
             ^
robots/arm2segm.h:78:18: style: The function 'update' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual void update();
                 ^
robots/oderobot.h:127:18: note: Virtual function in base class
    virtual void update();
                 ^
robots/arm2segm.h:78:18: note: Function in derived class
    virtual void update();
                 ^
robots/arm2segm.h:83:18: style: The function 'placeIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual void placeIntern(const osg::Matrix& pose);
                 ^
robots/oderobot.h:140:18: note: Virtual function in base class
    virtual void placeIntern(const osg::Matrix& pose) = 0;
                 ^
robots/arm2segm.h:83:18: note: Function in derived class
    virtual void placeIntern(const osg::Matrix& pose);
                 ^
robots/arm2segm.h:96:18: style: The function 'setMotorsIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual void setMotorsIntern(const double* motors, int motornumber);
                 ^
robots/oderobot.h:94:18: note: Virtual function in base class
    virtual void setMotorsIntern(const double* motors, int motorsnumber) { };
                 ^
robots/arm2segm.h:96:18: note: Function in derived class
    virtual void setMotorsIntern(const double* motors, int motornumber);
                 ^
robots/arm2segm.h:100:17: style: The function 'getSensorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getSensorNumberIntern(){
                ^
robots/oderobot.h:97:17: note: Virtual function in base class
    virtual int getSensorNumberIntern() { return 0; };
                ^
robots/arm2segm.h:100:17: note: Function in derived class
    virtual int getSensorNumberIntern(){
                ^
robots/arm2segm.h:106:17: style: The function 'getMotorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getMotorNumberIntern(){
                ^
robots/oderobot.h:100:17: note: Virtual function in base class
    virtual int getMotorNumberIntern() { return 0; };
                ^
robots/arm2segm.h:106:17: note: Function in derived class
    virtual int getMotorNumberIntern(){
                ^
robots/arm2segm.h:117:24: style: The function 'getMainPrimitive' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual Primitive* getMainPrimitive() const;
                       ^
robots/oderobot.h:197:24: note: Virtual function in base class
    virtual Primitive* getMainPrimitive() const  {
                       ^
robots/arm2segm.h:117:24: note: Function in derived class
    virtual Primitive* getMainPrimitive() const;
                       ^
robots/arm2segm.cpp:189:59: style: C-style pointer casting [cstyleCast]
    AngularMotor1Axis* a=new AngularMotor1Axis(odeHandle, (OneAxisJoint *)joints[0], conf.max_force);
                                                          ^
robots/arm2segm.cpp:198:40: style: C-style pointer casting [cstyleCast]
    a=new AngularMotor1Axis(odeHandle, (OneAxisJoint *)joints[1], conf.max_force);
                                       ^
robots/arm2segm.cpp:209:42: style: C-style pointer casting [cstyleCast]
      a=new AngularMotor1Axis(odeHandle, (OneAxisJoint *)joints[i], conf.max_force);
                                         ^
robots/arm2segm.cpp:31:97: performance: Function parameter 'armConf' should be passed by const reference. [passedByValue]
  Arm2Segm::Arm2Segm(const OdeHandle& odeHandle, const OsgHandle& osgHandle, const Arm2SegmConf armConf):
                                                                                                ^
robots/arm.cpp:56:5: performance: Variable 'parentspace' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    parentspace=odeHandle.space;
    ^
robots/arm.cpp:58:5: performance: Variable 'factorSensors' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    factorSensors=1/2.7; // normalization of position w.r.t. arm length (only for endeffector position)
    ^
robots/arm.h:279:14: warning: The class 'Arm' defines member variable with name 'parentspace' also defined in its parent class 'OdeRobot'. [duplInheritedMember]
    dSpaceID parentspace;
             ^
robots/oderobot.h:279:14: note: Parent variable 'OdeRobot::parentspace'
    dSpaceID parentspace;
             ^
robots/arm.h:279:14: note: Derived variable 'Arm::parentspace'
    dSpaceID parentspace;
             ^
robots/arm.h:150:14: style: The destructor '~Arm' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual ~Arm(){};
             ^
robots/oderobot.h:76:14: note: Virtual destructor in base class
    virtual ~OdeRobot();
             ^
robots/arm.h:150:14: note: Destructor in derived class
    virtual ~Arm(){};
             ^
robots/arm.h:183:17: style: The function 'getSensorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getSensorNumberIntern()
                ^
robots/oderobot.h:97:17: note: Virtual function in base class
    virtual int getSensorNumberIntern() { return 0; };
                ^
robots/arm.h:183:17: note: Function in derived class
    virtual int getSensorNumberIntern()
                ^
robots/arm.h:191:17: style: The function 'getMotorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getMotorNumberIntern()
                ^
robots/oderobot.h:100:17: note: Virtual function in base class
    virtual int getMotorNumberIntern() { return 0; };
                ^
robots/arm.h:191:17: note: Function in derived class
    virtual int getMotorNumberIntern()
                ^
robots/arm2segm.cpp:230:86: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<AngularMotor1Axis*>::iterator i=amotors.begin(); i!=amotors.end(); i++){
                                                                                     ^
robots/arm.h:226:24: style: The function 'getMainPrimitive' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual Primitive* getMainPrimitive() const
                       ^
robots/oderobot.h:197:24: note: Virtual function in base class
    virtual Primitive* getMainPrimitive() const  {
                       ^
robots/arm.h:226:24: note: Function in derived class
    virtual Primitive* getMainPrimitive() const
                       ^
robots/arm2segm.cpp:234:72: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Joint*>::iterator i=joints.begin(); i!=joints.end(); i++){
                                                                       ^
robots/arm2segm.cpp:238:78: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i=objects.begin(); i!=objects.end(); i++){
                                                                             ^
39/300 files checked 9% done
Checking robots/ashigaru.cpp ...
robots/arm.cpp:110:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++)
                                                                              ^
robots/arm.cpp:114:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++)
                                                                        ^
robots/arm.cpp:409:86: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for(list<Sensor*>::iterator i = conf.sensors.begin(); i != conf.sensors.end(); i++){
                                                                                     ^
robots/arm.cpp:414:90: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<HingeServo*>::iterator i = hingeServos.begin(); i!= hingeServos.end(); i++)
                                                                                         ^
robots/arm.cpp:419:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++)
                                                                          ^
robots/arm.cpp:424:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++)
                                                                                ^
40/300 files checked 9% done
robots/ashigaru.cpp:25:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
robots/ashigaru.cpp:26:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
robots/ashigaru.cpp:27:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
Checking robots/barrel2masses.cpp ...
robots/ashigaru.cpp:28:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
robots/ashigaru.h:31:0: information: Include file: <selforg/inspectable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/inspectable.h>
^
robots/ashigaru.h:32:0: information: Include file: <ode_robots/contactsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/contactsensor.h>
^
robots/ashigaru.h:33:0: information: Include file: <ode_robots/torquesensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/torquesensor.h>
^
robots/ashigaru.h:37:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
robots/ashigaru.h:38:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
robots/ashigaru.h:39:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
robots/ashigaru.h:40:0: information: Include file: <ode_robots/spring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/spring.h>
^
robots/barrel2masses.cpp:25:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/barrel2masses.cpp:26:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
robots/barrel2masses.cpp:27:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
robots/ashigaru.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
robots/sphererobot3masses.h:129:30: style: Boolean value assigned to floating point variable. [assignBoolToFloat]
    c.motor_ir_before_sensors=false;
                             ^
robots/barrel2masses.h:99:30: style: Boolean value assigned to floating point variable. [assignBoolToFloat]
    c.motor_ir_before_sensors=false;
                             ^
robots/barrel2masses.h:82:33: warning: The class 'Barrel2Masses' defines member function with name 'getDefaultConf' also defined in its parent class 'Sphererobot3Masses'. [duplInheritedMember]
  static Sphererobot3MassesConf getDefaultConf(){
                                ^
robots/sphererobot3masses.h:112:33: note: Parent function 'Sphererobot3Masses::getDefaultConf'
  static Sphererobot3MassesConf getDefaultConf(){
                                ^
robots/barrel2masses.h:82:33: note: Derived function 'Barrel2Masses::getDefaultConf'
  static Sphererobot3MassesConf getDefaultConf(){
                                ^
robots/sphererobot3masses.h:133:11: error: Uninitialized variable: c.pendulardiameter [uninitvar]
   return c;
          ^
robots/sphererobot3masses.h:133:11: error: Uninitialized struct member: c.pendulardiameter [uninitStructMember]
   return c;
          ^
41/300 files checked 9% done
Checking robots/caterpillar.cpp ...
robots/amos4legs.h:471:20: style: Virtual function 'destroy' is called from destructor '~AmosFour()' at line 266. Dynamic binding is not used. [virtualCallInConstructor]
      virtual void destroy() override;
                   ^
robots/amos4legs.cpp:266:5: note: Calling destroy
    destroy();
    ^
robots/amos4legs.h:471:20: note: destroy is a virtual function
      virtual void destroy() override;
                   ^
robots/defaultCaterpillar.h:38:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include<vector>
^
robots/defaultCaterpillar.h:39:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include<assert.h>
^
robots/defaultCaterpillar.h:46:0: information: Include file: <selforg/configurable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/configurable.h>
^
robots/amos4legs.cpp:1417:42: style: Same expression on both sides of '/'. [duplicateExpression]
    c.shoulderHeight = shoulderHeight_cm / 6.5 * c.height;
                                         ^
robots/amos4legs.cpp:1415:39: note: 'shoulderHeight_cm' is assigned value '6.5' here.
    const double shoulderHeight_cm = 6.5;
                                      ^
robots/amos4legs.cpp:1417:42: note: Same expression on both sides of '/'.
    c.shoulderHeight = shoulderHeight_cm / 6.5 * c.height;
                                         ^
robots/amos4legs.cpp:855:19: style: Local variable 'nullpos' shadows outer variable [shadowVariable]
        const Pos nullpos(0, 0, 0);
                  ^
robots/amos4legs.cpp:695:15: note: Shadowed declaration
    const Pos nullpos(0, 0, 0);
              ^
robots/amos4legs.cpp:855:19: note: Shadow variable
        const Pos nullpos(0, 0, 0);
                  ^
robots/amos4legs.cpp:864:21: style: Local variable 'm0' shadows outer variable [shadowVariable]
        osg::Matrix m0;
                    ^
robots/amos4legs.cpp:773:23: note: Shadowed declaration
    const osg::Matrix m0 = pose;
                      ^
robots/amos4legs.cpp:864:21: note: Shadow variable
        osg::Matrix m0;
                    ^
robots/ashigaru.cpp:980:18: warning: Member variable 'Leg::footSphere' is not initialized in the constructor. [uninitMemberVar]
  Ashigaru::Leg::Leg():
                 ^
robots/ashigaru.cpp:988:20: warning: Member variable 'Trunk::tUpTrans' is not initialized in the constructor. [uninitMemberVar]
  Ashigaru::Trunk::Trunk():
                   ^
robots/ashigaru.h:273:16: style: Virtual function 'destroy' is called from destructor '~Ashigaru()' at line 155. Dynamic binding is not used. [virtualCallInConstructor]
  virtual void destroy() override;
               ^
robots/ashigaru.cpp:155:5: note: Calling destroy
    destroy();
    ^
robots/ashigaru.h:273:16: note: destroy is a virtual function
  virtual void destroy() override;
               ^
robots/ashigaru.h:237:15: style: The function 'getSensorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int getSensorNumberIntern(){
              ^
robots/oderobot.h:97:17: note: Virtual function in base class
    virtual int getSensorNumberIntern() { return 0; };
                ^
robots/ashigaru.h:237:15: note: Function in derived class
  virtual int getSensorNumberIntern(){
              ^
robots/ashigaru.h:243:15: style: The function 'getMotorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int getMotorNumberIntern(){
              ^
robots/oderobot.h:100:17: note: Virtual function in base class
    virtual int getMotorNumberIntern() { return 0; };
                ^
robots/ashigaru.h:243:15: note: Function in derived class
  virtual int getMotorNumberIntern(){
              ^
robots/amos4legs.cpp:321:70: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (MotorMap::iterator it = servos.begin(); it != servos.end(); it++) {
                                                                     ^
robots/amos4legs.cpp:518:7: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      it++;
      ^
robots/amos4legs.cpp:528:7: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      it++;
      ^
robots/amos4legs.cpp:591:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (PrimitiveList::iterator i = objects.begin(); i != objects.end(); i++) {
                                                                          ^
robots/amos4legs.cpp:595:69: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (JointList::iterator i = joints.begin(); i != joints.end(); i++) {
                                                                    ^
robots/amos4legs.cpp:654:85: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (ServoList::iterator it = passiveServos.begin(); it != passiveServos.end(); it++) {
                                                                                    ^
robots/amos4legs.cpp:1055:123: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (std::vector<Primitive*>::iterator it = conf.GoalSensor_references.begin(); it<conf.GoalSensor_references.end();it++)
                                                                                                                          ^
robots/amos4legs.cpp:1079:106: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (std::vector<RelativePositionSensor>::iterator it = GoalSensor.begin(); it < GoalSensor.end(); it++) {
                                                                                                         ^
robots/amos4legs.cpp:1111:77: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (PrimitiveList::iterator i = objects.begin(); i != objects.end(); i++) {
                                                                            ^
robots/amos4legs.cpp:1112:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
        for (PrimitiveList::iterator j = objects.begin(); j != objects.end(); j++) {
                                                                              ^
robots/amos4legs.cpp:1128:72: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (MotorMap::iterator it = servos.begin(); it != servos.end(); it++) {
                                                                       ^
robots/amos4legs.cpp:1134:87: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (ServoList::iterator it = passiveServos.begin(); it != passiveServos.end(); it++) {
                                                                                      ^
robots/amos4legs.cpp:1140:71: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (JointList::iterator i = joints.begin(); i != joints.end(); i++) {
                                                                      ^
robots/amos4legs.cpp:1146:77: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (PrimitiveList::iterator i = objects.begin(); i != objects.end(); i++) {
                                                                            ^
robots/amos4legs.cpp:1176:64: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (LegMap::iterator it = legs.begin(); it != legs.end(); it++) {
                                                               ^
robots/defaultCaterpillar.h:144:22: style: The function 'getMainPrimitive' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Primitive* getMainPrimitive() const {
                     ^
robots/oderobot.h:197:24: note: Virtual function in base class
    virtual Primitive* getMainPrimitive() const  {
                       ^
robots/defaultCaterpillar.h:144:22: note: Function in derived class
  virtual Primitive* getMainPrimitive() const {
                     ^
robots/caterpillar.h:75:17: style: The function 'getSensorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getSensorNumberIntern() { assert(created); return 2*universalServos.size()+sliderServos.size(); }
                ^
robots/defaultCaterpillar.h:128:15: note: Virtual function in base class
  virtual int getSensorNumberIntern()  override = 0;
              ^
robots/caterpillar.h:75:17: note: Function in derived class
    virtual int getSensorNumberIntern() { assert(created); return 2*universalServos.size()+sliderServos.size(); }
                ^
robots/caterpillar.h:79:17: style: The function 'getMotorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getMotorNumberIntern(){ assert(created); return 2*universalServos.size()+sliderServos.size(); }
                ^
robots/defaultCaterpillar.h:132:15: note: Virtual function in base class
  virtual int getMotorNumberIntern()  override = 0;
              ^
robots/caterpillar.h:79:17: note: Function in derived class
    virtual int getMotorNumberIntern(){ assert(created); return 2*universalServos.size()+sliderServos.size(); }
                ^
robots/caterpillar.cpp:137:95: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
   for(vector<UniversalServo*>::iterator i=universalServos.begin(); i!=universalServos.end(); i++) {
                                                                                              ^
robots/caterpillar.cpp:147:100: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<UniversalServo*>::iterator i = universalServos.begin(); i!= universalServos.end(); i++) {
                                                                                                   ^
42/300 files checked 10% done
Checking robots/amos4legs.cpp: VERBOSE...
Checking robots/defaultCaterPillar.cpp ...
robots/ashigaru.cpp:282:70: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (MotorMap::iterator it = servos.begin(); it != servos.end(); it++) {
                                                                     ^
Checking robots/ashigaru.cpp: DEBUG_MODE...
robots/defaultCaterpillar.h:157:16: style: Virtual function 'destroy' is called from destructor '~DefaultCaterPillar()' at line 46. Dynamic binding is not used. [virtualCallInConstructor]
  virtual void destroy() override;
               ^
robots/defaultCaterPillar.cpp:46:17: note: Calling destroy
    if(created) destroy();
                ^
robots/defaultCaterpillar.h:157:16: note: destroy is a virtual function
  virtual void destroy() override;
               ^
robots/defaultCaterPillar.cpp:67:98: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<AngularMotor*>::iterator i = frictionmotors.begin(); i!= frictionmotors.end(); i++){
                                                                                                 ^
robots/defaultCaterPillar.cpp:114:98: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<AngularMotor*>::iterator i = frictionmotors.begin(); i!= frictionmotors.end(); i++){
                                                                                                 ^
43/300 files checked 10% done
Checking robots/discus.cpp ...
robots/amosII.h:486:20: style: Virtual function 'destroy' is called from destructor '~AmosII()' at line 280. Dynamic binding is not used. [virtualCallInConstructor]
      virtual void destroy() override;
                   ^
robots/amosII.cpp:280:5: note: Calling destroy
    destroy();
    ^
robots/amosII.h:486:20: note: destroy is a virtual function
      virtual void destroy() override;
                   ^
robots/discus.cpp:25:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/discus.cpp:26:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
robots/discus.cpp:27:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
robots/discus.h:28:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
robots/discus.h:29:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
robots/discus.h:30:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
robots/discus.h:31:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
robots/discus.h:32:0: information: Include file: <ode_robots/sensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sensor.h>
^
robots/discus.h:33:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
robots/discus.cpp:30:0: information: Include file: <ode_robots/irsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/irsensor.h>
^
robots/discus.cpp:31:0: information: Include file: <ode_robots/osgprimitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/osgprimitive.h> // get access to graphical (OSG) primitives
^
robots/discus.cpp:32:0: information: Include file: <ode_robots/mathutils.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/mathutils.h>
^
robots/amosII.cpp:1555:42: style: Same expression on both sides of '/'. [duplicateExpression]
    c.shoulderHeight = shoulderHeight_cm / 6.5 * c.height;
                                         ^
robots/amosII.cpp:1553:39: note: 'shoulderHeight_cm' is assigned value '6.5' here.
    const double shoulderHeight_cm = 6.5;
                                      ^
robots/amosII.cpp:1555:42: note: Same expression on both sides of '/'.
    c.shoulderHeight = shoulderHeight_cm / 6.5 * c.height;
                                         ^
robots/amosII.cpp:906:19: style: Local variable 'nullpos' shadows outer variable [shadowVariable]
        const Pos nullpos(0, 0, 0);
                  ^
robots/amosII.cpp:754:15: note: Shadowed declaration
    const Pos nullpos(0, 0, 0);
              ^
robots/amosII.cpp:906:19: note: Shadow variable
        const Pos nullpos(0, 0, 0);
                  ^
robots/amosII.cpp:915:21: style: Local variable 'm0' shadows outer variable [shadowVariable]
        osg::Matrix m0;
                    ^
robots/amosII.cpp:824:23: note: Shadowed declaration
    const osg::Matrix m0 = pose;
                      ^
robots/amosII.cpp:915:21: note: Shadow variable
        osg::Matrix m0;
                    ^
robots/discus.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
robots/amosII.cpp:335:70: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (MotorMap::iterator it = servos.begin(); it != servos.end(); it++) {
                                                                     ^
robots/amosII.cpp:570:7: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      it++;
      ^
robots/amosII.cpp:580:7: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      it++;
      ^
robots/amosII.cpp:715:85: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (ServoList::iterator it = passiveServos.begin(); it != passiveServos.end(); it++) {
                                                                                    ^
robots/amosII.cpp:1131:129: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
            for (std::vector<Primitive*>::iterator it = conf.GoalSensor_references.begin(); it<conf.GoalSensor_references.end();it++)
                                                                                                                                ^
robots/amosII.cpp:1155:106: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (std::vector<RelativePositionSensor>::iterator it = GoalSensor.begin(); it < GoalSensor.end(); it++) {
                                                                                                         ^
robots/amosII.cpp:1213:77: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (PrimitiveList::iterator i = objects.begin(); i != objects.end(); i++) {
                                                                            ^
robots/amosII.cpp:1214:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
        for (PrimitiveList::iterator j = objects.begin(); j != objects.end(); j++) {
                                                                              ^
robots/amosII.cpp:1228:72: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (MotorMap::iterator it = servos.begin(); it != servos.end(); it++) {
                                                                       ^
robots/amosII.cpp:1234:87: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (ServoList::iterator it = passiveServos.begin(); it != passiveServos.end(); it++) {
                                                                                      ^
robots/amosII.cpp:1279:64: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (LegMap::iterator it = legs.begin(); it != legs.end(); it++) {
                                                               ^
Checking robots/amosII.cpp: VERBOSE...
robots/discus.h:137:30: style: Boolean value assigned to floating point variable. [assignBoolToFloat]
    c.motor_ir_before_sensors=false;
                             ^
robots/discus.h:163:16: style: Virtual function 'destroy' is called from destructor '~Discus()' at line 92. Dynamic binding is not used. [virtualCallInConstructor]
  virtual void destroy() override;
               ^
robots/discus.cpp:92:5: note: Calling destroy
    destroy();
    ^
robots/discus.h:163:16: note: destroy is a virtual function
  virtual void destroy() override;
               ^
robots/discus.cpp:275:16: style: Local variable 'stabilizerlength' shadows outer variable [shadowVariable]
        double stabilizerlength = (conf.stabdiameter+conf.relativewidth) * conf.diameter;
               ^
robots/discus.cpp:223:12: note: Shadowed declaration
    double stabilizerlength = (conf.stabdiameter+conf.relativewidth) * conf.diameter;
           ^
robots/discus.cpp:275:16: note: Shadow variable
        double stabilizerlength = (conf.stabdiameter+conf.relativewidth) * conf.diameter;
               ^
robots/discus.h:139:11: error: Uninitialized variable: c.pendulardiameter [uninitvar]
   return c;
          ^
robots/discus.h:139:11: error: Uninitialized struct member: c.pendulardiameter [uninitStructMember]
   return c;
          ^
robots/discus.cpp:42:74: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for(list<Sensor*>::iterator i = sensors.begin(); i != sensors.end(); i++){
                                                                         ^
44/300 files checked 10% done
Checking robots/forcedsphere.cpp ...
robots/forcedsphere.cpp:25:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/forcedsphere.cpp:26:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
robots/forcedsphere.cpp:37:21: warning: Member variable 'ForcedSphereConf::radius' is not initialized in the constructor. [uninitMemberVar]
  ForcedSphereConf::ForcedSphereConf() {}
                    ^
robots/forcedsphere.cpp:37:21: warning: Member variable 'ForcedSphereConf::maxForce' is not initialized in the constructor. [uninitMemberVar]
  ForcedSphereConf::ForcedSphereConf() {}
                    ^
robots/forcedsphere.cpp:37:21: warning: Member variable 'ForcedSphereConf::speedDriven' is not initialized in the constructor. [uninitMemberVar]
  ForcedSphereConf::ForcedSphereConf() {}
                    ^
robots/forcedsphere.cpp:37:21: warning: Member variable 'ForcedSphereConf::maxSpeed' is not initialized in the constructor. [uninitMemberVar]
  ForcedSphereConf::ForcedSphereConf() {}
                    ^
robots/forcedsphere.cpp:37:21: warning: Member variable 'ForcedSphereConf::drivenDimensions' is not initialized in the constructor. [uninitMemberVar]
  ForcedSphereConf::ForcedSphereConf() {}
                    ^
robots/forcedsphere.cpp:37:21: warning: Member variable 'ForcedSphereConf::cylinderBody' is not initialized in the constructor. [uninitMemberVar]
  ForcedSphereConf::ForcedSphereConf() {}
                    ^
robots/forcedsphere.h:113:18: style: Virtual function 'destroy' is called from destructor '~ForcedSphere()' at line 61. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void destroy() override;
                 ^
robots/forcedsphere.cpp:61:5: note: Calling destroy
    destroy();
    ^
robots/forcedsphere.h:113:18: note: destroy is a virtual function
    virtual void destroy() override;
                 ^
robots/forcedsphere.h:108:24: style: The function 'getMainPrimitive' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual Primitive* getMainPrimitive() const { return object[0]; }
                       ^
robots/oderobot.h:197:24: note: Virtual function in base class
    virtual Primitive* getMainPrimitive() const  {
                       ^
robots/forcedsphere.h:108:24: note: Function in derived class
    virtual Primitive* getMainPrimitive() const { return object[0]; }
                       ^
robots/forcedsphere.cpp:42:74: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for(list<Sensor*>::iterator i = sensors.begin(); i != sensors.end(); i++){
                                                                         ^
45/300 files checked 10% done
Checking robots/formel1.cpp ...
46/300 files checked 12% done
Checking robots/fourwheeled.cpp ...
robots/formel1.cpp:24:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/fourwheeled.cpp:25:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
robots/fourwheeled.cpp:26:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/fourwheeled.cpp:27:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
47/300 files checked 13% done
robots/fourwheeled.cpp:40:16: warning: Member variable 'FourWheeled::bumpertrans' is not initialized in the constructor. [uninitMemberVar]
  FourWheeled::FourWheeled(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
               ^
robots/fourwheeled.cpp:40:16: warning: Member variable 'FourWheeled::bumper' is not initialized in the constructor. [uninitMemberVar]
  FourWheeled::FourWheeled(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
               ^
Checking robots/hand.cpp ...
robots/nimm4.h:103:18: style: Virtual function 'destroy' is called from destructor '~Nimm4()' at line 55. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void destroy() override;
                 ^
robots/nimm4.h:55:7: note: Calling destroy
      destroy();
      ^
robots/nimm4.h:103:18: note: destroy is a virtual function
    virtual void destroy() override;
                 ^
robots/fourwheeled.h:107:18: style: Virtual function 'destroy' is called from destructor '~FourWheeled()' at line 51. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void destroy() override;
                 ^
robots/fourwheeled.cpp:51:5: note: Calling destroy
    destroy();
    ^
robots/fourwheeled.h:107:18: note: destroy is a virtual function
    virtual void destroy() override;
                 ^
robots/nimm4.h:54:14: style: The destructor '~Nimm4' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual ~Nimm4(){
             ^
robots/oderobot.h:76:14: note: Virtual destructor in base class
    virtual ~OdeRobot();
             ^
robots/nimm4.h:54:14: note: Destructor in derived class
    virtual ~Nimm4(){
             ^
robots/nimm4.h:84:17: style: The function 'getSensorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getSensorNumberIntern(){
                ^
robots/oderobot.h:97:17: note: Virtual function in base class
    virtual int getSensorNumberIntern() { return 0; };
                ^
robots/nimm4.h:84:17: note: Function in derived class
    virtual int getSensorNumberIntern(){
                ^
robots/nimm4.h:90:17: style: The function 'getMotorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getMotorNumberIntern(){
                ^
robots/oderobot.h:100:17: note: Virtual function in base class
    virtual int getMotorNumberIntern() { return 0; };
                ^
robots/nimm4.h:90:17: note: Function in derived class
    virtual int getMotorNumberIntern(){
                ^
robots/fourwheeled.h:107:18: style: The function 'destroy' overrides a function in a base class but just delegates back to the base class. [uselessOverride]
    virtual void destroy() override;
                 ^
robots/nimm4.h:103:18: note: Virtual function in base class
    virtual void destroy() override;
                 ^
robots/fourwheeled.h:107:18: note: Function in derived class
    virtual void destroy() override;
                 ^
robots/formel1.cpp:45:12: warning: Member variable 'Formel1::object' is not initialized in the constructor. [uninitMemberVar]
  Formel1::Formel1(const OdeHandle& odeHandle, const OsgHandle& osgHandle, double size/*=1.0*/,
           ^
robots/formel1.cpp:45:12: warning: Member variable 'Formel1::joint' is not initialized in the constructor. [uninitMemberVar]
  Formel1::Formel1(const OdeHandle& odeHandle, const OsgHandle& osgHandle, double size/*=1.0*/,
           ^
robots/formel1.h:43:14: style: The destructor '~Formel1' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual ~Formel1(){};
             ^
robots/oderobot.h:76:14: note: Virtual destructor in base class
    virtual ~OdeRobot();
             ^
robots/formel1.h:43:14: note: Destructor in derived class
    virtual ~Formel1(){};
             ^
robots/formel1.h:71:17: style: The function 'getSensorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getSensorNumberIntern(){
                ^
robots/oderobot.h:97:17: note: Virtual function in base class
    virtual int getSensorNumberIntern() { return 0; };
                ^
robots/formel1.h:71:17: note: Function in derived class
    virtual int getSensorNumberIntern(){
                ^
robots/formel1.h:77:17: style: The function 'getMotorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getMotorNumberIntern(){
                ^
robots/oderobot.h:100:17: note: Virtual function in base class
    virtual int getMotorNumberIntern() { return 0; };
                ^
robots/formel1.h:77:17: note: Function in derived class
    virtual int getMotorNumberIntern(){
                ^
robots/formel1.h:84:24: style: The function 'getMainPrimitive' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual Primitive* getMainPrimitive() const { return object[0]; }
                       ^
robots/oderobot.h:197:24: note: Virtual function in base class
    virtual Primitive* getMainPrimitive() const  {
                       ^
robots/formel1.h:84:24: note: Function in derived class
    virtual Primitive* getMainPrimitive() const { return object[0]; }
                       ^
48/300 files checked 13% done
Checking robots/hexabot.cpp ...
49/300 files checked 13% done
robots/hand.cpp:24:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
robots/hand.h:28:0: information: Include file: <selforg/configurable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/configurable.h>
^
Checking robots/hexapod.cpp ...
robots/hand.cpp:27:0: information: Include file: <osgprimitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgprimitive.h>
^
robots/hexabot.cpp:22:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
robots/hexabot.cpp:23:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
robots/hexabot.cpp:24:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/hexabot.cpp:25:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
robots/hexabot.h:36:0: information: Include file: <selforg/inspectable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/inspectable.h>
^
robots/hexabot.h:37:0: information: Include file: <ode_robots/contactsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/contactsensor.h>
^
robots/hexabot.h:38:0: information: Include file: <ode_robots/torquesensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/torquesensor.h>
^
robots/hexabot.h:42:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
robots/hexabot.h:43:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
robots/hexabot.h:44:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
robots/hexabot.h:45:0: information: Include file: <ode_robots/spring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/spring.h>
^
robots/hexapod.cpp:26:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
robots/hexapod.cpp:27:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/hexapod.cpp:30:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
robots/hexapod.cpp:33:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
robots/hexapod.cpp:36:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
robots/hexapod.cpp:37:0: information: Include file: <ode_robots/irsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/irsensor.h>
^
robots/hexapod.cpp:40:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
robots/hexapod.cpp:41:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
robots/hexapod.cpp:42:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
robots/hexapod.cpp:43:0: information: Include file: <ode_robots/constantmotor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/constantmotor.h>
^
robots/hexapod.cpp:45:0: information: Include file: <ode_robots/mathutils.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/mathutils.h>
^
robots/hexapod.h:30:0: information: Include file: <selforg/inspectable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/inspectable.h>
^
robots/hexapod.h:32:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
robots/hexapod.h:33:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
robots/hexapod.h:34:0: information: Include file: <ode_robots/contactsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/contactsensor.h>
^
robots/hexabot.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
robots/hand.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
robots/hexapod.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
50/300 files checked 15% done
robots/hexapod.h:164:28: style: Boolean value assigned to floating point variable. [assignBoolToFloat]
      c.irSensors          = false;
                           ^
Checking robots/hurlingsnake.cpp ...
robots/hexapod.cpp:60:12: warning: Member variable 'Hexapod::t' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
robots/hexapod.cpp:60:12: warning: Member variable 'Hexapod::speed' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
robots/hexapod.cpp:60:12: warning: Member variable 'Hexapod::stabaliserTransform' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
robots/hexapod.cpp:60:12: warning: Member variable 'Hexapod::bigboxtransform' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
robots/hexapod.cpp:60:12: warning: Member variable 'Hexapod::headtrans' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
robots/hexapod.h:228:18: style: Virtual function 'destroy' is called from destructor '~Hexapod()' at line 120. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void destroy();
                 ^
robots/hexapod.h:120:25: note: Calling destroy
    virtual ~Hexapod(){ destroy(); };
                        ^
robots/hexapod.h:228:18: note: destroy is a virtual function
    virtual void destroy();
                 ^
robots/hurlingsnake.h:28:0: information: Include file: <selforg/configurable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/configurable.h>
^
robots/hexapod.cpp:144:18: style: The scope of the variable 'torques' can be reduced. [variableScope]
    const dReal *torques;
                 ^
robots/hexapod.cpp:145:18: style: The scope of the variable 'angularV' can be reduced. [variableScope]
    const dReal *angularV;
                 ^
robots/hexapod.cpp:235:22: style: Local variable 'position' shadows outer variable [shadowVariable]
        const dReal *position = dBodyGetPosition(legContactArray[i].bodyID);
                     ^
robots/hexapod.h:248:13: note: Shadowed declaration
    double *position;
            ^
robots/hexapod.cpp:235:22: note: Shadow variable
        const dReal *position = dBodyGetPosition(legContactArray[i].bodyID);
                     ^
robots/hexapod.cpp:474:14: style: Local variable 'servo' shadows outer variable [shadowVariable]
        auto servo = std::make_shared<HingeServo>(k, -1, 1, 1, 0.01,0); // parameters are set later
             ^
robots/hexapod.cpp:443:12: note: Shadowed declaration
      auto servo = std::make_shared<TwoAxisServoVel>(odeHandle, j,-1,1, 1, -1,1,1,0 );
           ^
robots/hexapod.cpp:474:14: note: Shadow variable
        auto servo = std::make_shared<HingeServo>(k, -1, 1, 1, 0.01,0); // parameters are set later
             ^
robots/hexapod.cpp:533:16: style: Local variable 'servo' shadows outer variable [shadowVariable]
          auto servo = std::make_shared<OneAxisServoVel>(odeHandle,k, -1, 1, 1, 0.01); // parameters are set later
               ^
robots/hexapod.cpp:443:12: note: Shadowed declaration
      auto servo = std::make_shared<TwoAxisServoVel>(odeHandle, j,-1,1, 1, -1,1,1,0 );
           ^
robots/hexapod.cpp:533:16: note: Shadow variable
          auto servo = std::make_shared<OneAxisServoVel>(odeHandle,k, -1, 1, 1, 0.01); // parameters are set later
               ^
robots/hexapod.cpp:218:16: style: Variable 'position_1' can be declared as pointer to const [constVariablePointer]
        dReal *position_1 = pos_record.front();
               ^
robots/hexapod.cpp:219:16: style: Variable 'position_2' can be declared as pointer to const [constVariablePointer]
        dReal *position_2 = pos_record.back();
               ^
51/300 files checked 16% done
robots/hurlingsnake.cpp:41:5: performance: Variable 'factorSensor' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    factorSensor=20.0;
    ^
robots/hurlingsnake.cpp:42:5: performance: Variable 'frictionGround' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    frictionGround=0.3;
    ^
Checking robots/kuka.cpp ...
robots/hurlingsnake.h:104:18: style: Virtual function 'destroy' is called from destructor '~HurlingSnake()' at line 89. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void destroy() override;
                 ^
robots/hurlingsnake.cpp:89:5: note: Calling destroy
    destroy();
    ^
robots/hurlingsnake.h:104:18: note: destroy is a virtual function
    virtual void destroy() override;
                 ^
robots/hurlingsnake.h:45:6: style: The destructor '~HurlingSnake' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    ~HurlingSnake();
     ^
robots/oderobot.h:76:14: note: Virtual destructor in base class
    virtual ~OdeRobot();
             ^
robots/hurlingsnake.h:45:6: note: Destructor in derived class
    ~HurlingSnake();
     ^
robots/hurlingsnake.h:91:24: style: The function 'getMainPrimitive' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual Primitive* getMainPrimitive() const { return objects[(NUM-1)/2] /*(center)*/; }
                       ^
robots/oderobot.h:197:24: note: Virtual function in base class
    virtual Primitive* getMainPrimitive() const  {
                       ^
robots/hurlingsnake.h:91:24: note: Function in derived class
    virtual Primitive* getMainPrimitive() const { return objects[(NUM-1)/2] /*(center)*/; }
                       ^
52/300 files checked 16% done
robots/kuka.cpp:22:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/kuka.cpp:23:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
robots/kuka.cpp:26:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
Checking robots/muscledarm.cpp ...
robots/kuka.cpp:27:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
robots/kuka.h:26:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
robots/kuka.h:29:0: information: Include file: <osg/io_utils> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/io_utils>
^
robots/kuka.h:30:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
robots/kuka.cpp:42:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
robots/muscledarm.cpp:25:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
robots/muscledarm.cpp:26:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/muscledarm.h:30:0: information: Include file: <selforg/configurable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/configurable.h>
^
robots/kuka.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
robots/muscledarm.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
robots/hand.cpp:40:5: performance: Variable 'frictionGround' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    frictionGround=0.3;
    ^
robots/hand.h:179:24: style: The function 'getMainPrimitive' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual Primitive* getMainPrimitive() const {
                       ^
robots/oderobot.h:197:24: note: Virtual function in base class
    virtual Primitive* getMainPrimitive() const  {
                       ^
robots/hand.h:179:24: note: Function in derived class
    virtual Primitive* getMainPrimitive() const {
                       ^
robots/hand.cpp:132:16: style: C-style pointer casting [cstyleCast]
    Hand* me = (Hand*)data;
               ^
robots/hand.cpp:214:29: style: C-style pointer casting [cstyleCast]
      sensors[sensorindex]=((AngularMotor*)palm_motor_joint)->getParam(dParamVel);
                            ^
robots/hand.cpp:216:29: style: C-style pointer casting [cstyleCast]
      sensors[sensorindex]=((AngularMotor*)palm_motor_joint)->getParam(dParamVel2);
                            ^
robots/hand.cpp:220:27: style: C-style pointer casting [cstyleCast]
    sensors[sensorindex]=((AngularMotor*)thumb_motor_joint)->getParam(dParamVel);
                          ^
robots/hand.cpp:227:27: style: C-style pointer casting [cstyleCast]
    sensors[sensorindex]=((AngularMotor*)thumb_motor_joint)->getParam(dParamVel3);
                          ^
robots/hand.cpp:237:51: style: C-style pointer casting [cstyleCast]
      sensors[sensorindex] = conf.factorSensor * ((HingeJoint*) palm_index)->getPosition1Rate();
                                                  ^
robots/hand.cpp:240:51: style: C-style pointer casting [cstyleCast]
      sensors[sensorindex] = conf.factorSensor * ((HingeJoint*) palm_middle)->getPosition1Rate();
                                                  ^
robots/hand.cpp:243:51: style: C-style pointer casting [cstyleCast]
      sensors[sensorindex] = conf.factorSensor * ((HingeJoint*) palm_ring)->getPosition1Rate();
                                                  ^
robots/hand.cpp:246:51: style: C-style pointer casting [cstyleCast]
      sensors[sensorindex] = conf.factorSensor * ((HingeJoint*) palm_little)->getPosition1Rate();
                                                  ^
robots/hand.cpp:253:51: style: C-style pointer casting [cstyleCast]
      sensors[sensorindex] = conf.factorSensor * ((HingeJoint*) thumb_bt)->getPosition1Rate();
                                                  ^
robots/hand.cpp:256:51: style: C-style pointer casting [cstyleCast]
      sensors[sensorindex] = conf.factorSensor * ((HingeJoint*) palm_index)->getPosition1Rate();
                                                  ^
robots/hand.cpp:258:51: style: C-style pointer casting [cstyleCast]
      sensors[sensorindex] = conf.factorSensor * ((HingeJoint*) index_bc)->getPosition1Rate();
                                                  ^
robots/hand.cpp:260:51: style: C-style pointer casting [cstyleCast]
      sensors[sensorindex] = conf.factorSensor * ((HingeJoint*) index_ct)->getPosition1Rate();
                                                  ^
robots/hand.cpp:263:51: style: C-style pointer casting [cstyleCast]
      sensors[sensorindex] = conf.factorSensor * ((HingeJoint*) palm_middle)->getPosition1Rate();
                                                  ^
robots/hand.cpp:265:51: style: C-style pointer casting [cstyleCast]
      sensors[sensorindex] = conf.factorSensor * ((HingeJoint*) middle_bc)->getPosition1Rate();
                                                  ^
robots/hand.cpp:267:51: style: C-style pointer casting [cstyleCast]
      sensors[sensorindex] = conf.factorSensor * ((HingeJoint*) middle_ct)->getPosition1Rate();
                                                  ^
robots/hand.cpp:270:51: style: C-style pointer casting [cstyleCast]
      sensors[sensorindex] = conf.factorSensor * ((HingeJoint*) palm_ring)->getPosition1Rate();
                                                  ^
robots/hand.cpp:272:51: style: C-style pointer casting [cstyleCast]
      sensors[sensorindex] = conf.factorSensor * ((HingeJoint*) ring_bc)->getPosition1Rate();
                                                  ^
robots/hand.cpp:274:51: style: C-style pointer casting [cstyleCast]
      sensors[sensorindex] = conf.factorSensor * ((HingeJoint*) ring_ct)->getPosition1Rate();
                                                  ^
robots/hand.cpp:277:51: style: C-style pointer casting [cstyleCast]
      sensors[sensorindex] = conf.factorSensor * ((HingeJoint*) palm_little)->getPosition1Rate();
                                                  ^
robots/hand.cpp:279:51: style: C-style pointer casting [cstyleCast]
      sensors[sensorindex] = conf.factorSensor * ((HingeJoint*) little_bc)->getPosition1Rate();
                                                  ^
robots/hand.cpp:281:51: style: C-style pointer casting [cstyleCast]
      sensors[sensorindex] = conf.factorSensor * ((HingeJoint*) little_ct)->getPosition1Rate();
                                                  ^
robots/hand.cpp:346:8: style: C-style pointer casting [cstyleCast]
      ((AngularMotor3AxisEuler*)palm_motor_joint)->set(0, motors[motorindex]* velocity);
       ^
robots/hand.cpp:348:8: style: C-style pointer casting [cstyleCast]
      ((AngularMotor3AxisEuler*)palm_motor_joint)->set(1, motors[motorindex]* velocity);
       ^
robots/hand.cpp:350:8: style: C-style pointer casting [cstyleCast]
      ((AngularMotor3AxisEuler*)palm_motor_joint)->setPower(conf.power);
       ^
robots/hand.cpp:354:6: style: C-style pointer casting [cstyleCast]
    ((AngularMotor3AxisEuler*)thumb_motor_joint)->set(0, motors[motorindex]* velocity);
     ^
robots/hand.cpp:360:6: style: C-style pointer casting [cstyleCast]
    ((AngularMotor3AxisEuler*)thumb_motor_joint)->set(2, motors[motorindex]* velocity);
     ^
robots/hand.cpp:430:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)thumb_bt) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:431:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)thumb_bt) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:433:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)palm_index) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:434:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)palm_index) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:435:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)index_bc) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:436:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)index_bc) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:437:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)index_ct) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:438:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)index_ct) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:440:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)palm_middle) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:441:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)palm_middle) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:442:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)middle_bc) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:443:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)middle_bc) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:444:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)middle_ct) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:445:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)middle_ct) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:447:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)palm_ring) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:448:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)palm_ring) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:449:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)ring_bc) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:450:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)ring_bc) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:451:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)ring_ct) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:452:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)ring_ct) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:454:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)palm_little) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:455:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)palm_little) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:456:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)little_bc) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:457:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)little_bc) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:458:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)little_ct) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:459:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)little_ct) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:466:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)thumb_bt) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:467:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)thumb_bt) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:470:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)palm_index) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:471:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)palm_index) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:473:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)index_bc) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:474:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)index_bc) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:476:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)index_ct) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:477:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)index_ct) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:480:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)palm_middle) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:481:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)palm_middle) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:483:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)middle_bc) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:484:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)middle_bc) -> setParam(dParamFMax, conf.power);
       ^
Checking robots/nejihebi.cpp ...
robots/hand.cpp:486:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)middle_ct) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:487:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)middle_ct) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:491:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)palm_ring) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:492:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)palm_ring) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:494:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)ring_bc) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:495:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)ring_bc) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:497:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)ring_ct) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/kuka.h:270:18: style: Virtual function 'destroy' is called from destructor '~Kuka()' at line 78. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void destroy();
                 ^
robots/kuka.h:78:7: note: Calling destroy
      destroy();
      ^
robots/kuka.h:270:18: note: destroy is a virtual function
    virtual void destroy();
                 ^
robots/hand.cpp:498:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)ring_ct) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:502:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)palm_little) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:503:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)palm_little) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:505:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)little_bc) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:506:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)little_bc) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:508:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)little_ct) -> setParam ( dParamVel , motors[motorindex]* velocity );
       ^
robots/hand.cpp:509:8: style: C-style pointer casting [cstyleCast]
      ((HingeJoint*)little_ct) -> setParam(dParamFMax, conf.power);
       ^
robots/hand.cpp:668:62: style: C-style pointer casting [cstyleCast]
    palm_motor_joint = new AngularMotor3AxisEuler(odeHandle, (BallJoint*) forearm_palm,
                                                             ^
robots/nejihebi.h:25:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
Checking robots/nimm2.cpp ...
robots/hand.cpp:671:8: style: C-style pointer casting [cstyleCast]
      ((AngularMotor*)palm_motor_joint)->setParam(dParamLoStop, 0);
       ^
robots/nejihebi.cpp:25:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
robots/hand.cpp:672:8: style: C-style pointer casting [cstyleCast]
      ((AngularMotor*)palm_motor_joint)->setParam(dParamHiStop, 0);
       ^
robots/nejihebi.cpp:27:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
robots/hand.cpp:673:8: style: C-style pointer casting [cstyleCast]
      ((AngularMotor*)palm_motor_joint)->setParam(dParamLoStop2, 0);
       ^
robots/nejihebi.cpp:29:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
robots/hand.cpp:674:8: style: C-style pointer casting [cstyleCast]
      ((AngularMotor*)palm_motor_joint)->setParam(dParamHiStop2, 0);
       ^
robots/nejihebi.cpp:31:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
robots/hand.cpp:675:8: style: C-style pointer casting [cstyleCast]
      ((AngularMotor*)palm_motor_joint)->setParam(dParamLoStop3, 0);
       ^
robots/hand.cpp:676:8: style: C-style pointer casting [cstyleCast]
      ((AngularMotor*)palm_motor_joint)->setParam(dParamHiStop3, 0);
       ^
robots/hand.cpp:678:8: style: C-style pointer casting [cstyleCast]
      ((AngularMotor*)palm_motor_joint)->setParam(dParamLoStop, -M_PI/4);
       ^
robots/hand.cpp:679:8: style: C-style pointer casting [cstyleCast]
      ((AngularMotor*)palm_motor_joint)->setParam(dParamHiStop, M_PI/2);
       ^
robots/hand.cpp:680:8: style: C-style pointer casting [cstyleCast]
      ((AngularMotor*)palm_motor_joint)->setParam(dParamLoStop2, -M_PI/4);
       ^
robots/hand.cpp:681:8: style: C-style pointer casting [cstyleCast]
      ((AngularMotor*)palm_motor_joint)->setParam(dParamHiStop2, M_PI/4);
       ^
robots/hand.cpp:682:8: style: C-style pointer casting [cstyleCast]
      ((AngularMotor*)palm_motor_joint)->setParam(dParamLoStop3, 0);
       ^
robots/hand.cpp:683:8: style: C-style pointer casting [cstyleCast]
      ((AngularMotor*)palm_motor_joint)->setParam(dParamHiStop3, 0);
       ^
robots/hand.cpp:790:63: style: C-style pointer casting [cstyleCast]
    thumb_motor_joint = new AngularMotor3AxisEuler(odeHandle, (BallJoint*)palm_thumb,
                                                              ^
robots/kuka.cpp:422:10: style: Condition 'i>1' is always true [knownConditionTrueFalse]
    if (i>1 and i<5) return 100;
         ^
robots/kuka.cpp:421:10: note: Assuming that condition 'i<2' is not redundant
    if (i<2) return 200;
         ^
robots/kuka.cpp:422:10: note: Condition 'i>1' is always true
    if (i>1 and i<5) return 100;
         ^
robots/hand.cpp:792:6: style: C-style pointer casting [cstyleCast]
    ((AngularMotor*)thumb_motor_joint)->setParam(dParamLoStop, -M_PI/360);
     ^
robots/hand.cpp:793:6: style: C-style pointer casting [cstyleCast]
    ((AngularMotor*)thumb_motor_joint)->setParam(dParamHiStop,  0.8 * M_PI);
     ^
robots/hand.cpp:795:6: style: C-style pointer casting [cstyleCast]
    ((AngularMotor*)thumb_motor_joint)->setParam(dParamLoStop2, 0);
     ^
robots/hand.cpp:796:6: style: C-style pointer casting [cstyleCast]
    ((AngularMotor*)thumb_motor_joint)->setParam(dParamHiStop2, 0);
     ^
robots/hand.cpp:797:6: style: C-style pointer casting [cstyleCast]
    ((AngularMotor*)thumb_motor_joint)->setParam(dParamLoStop3, -M_PI/8);
     ^
robots/hand.cpp:798:6: style: C-style pointer casting [cstyleCast]
    ((AngularMotor*)thumb_motor_joint)->setParam(dParamHiStop3, 0);
     ^
robots/hand.cpp:152:18: style: Local variable 'i' shadows outer variable [shadowVariable]
        for (int i=0; i<n; i++) {
                 ^
robots/hand.cpp:135:9: note: Shadowed declaration
    int i=0;
        ^
robots/hand.cpp:152:18: note: Shadow variable
        for (int i=0; i<n; i++) {
                 ^
robots/kuka.cpp:59:26: performance: Function parameter 'objectsOfInterest' should be passed by const reference. [passedByValue]
 std::vector<Primitive*> objectsOfInterest)
                         ^
robots/muscledarm.cpp:35:15: warning: Member variable 'MuscledArm::object' is not initialized in the constructor. [uninitMemberVar]
  MuscledArm::MuscledArm(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
robots/muscledarm.cpp:35:15: warning: Member variable 'MuscledArm::joint' is not initialized in the constructor. [uninitMemberVar]
  MuscledArm::MuscledArm(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
robots/muscledarm.cpp:35:15: warning: Member variable 'MuscledArm::segmentsno' is not initialized in the constructor. [uninitMemberVar]
  MuscledArm::MuscledArm(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
robots/hand.cpp:95:98: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (std::vector<OSGPrimitive*>::iterator i = osg_objects.begin(); i!=  osg_objects.end(); i++){
                                                                                                 ^
robots/muscledarm.cpp:35:15: warning: Member variable 'MuscledArm::gelenkabstand' is not initialized in the constructor. [uninitMemberVar]
  MuscledArm::MuscledArm(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
robots/hand.cpp:138:92: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (std::vector<Primitive*>::iterator n = me->objects.begin(); n!= me->objects.end(); n++, i++){
                                                                                           ^
robots/muscledarm.cpp:35:15: warning: Member variable 'MuscledArm::SOCKEL_LAENGE' is not initialized in the constructor. [uninitMemberVar]
  MuscledArm::MuscledArm(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
robots/hand.cpp:1316:86: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (std::vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++)
                                                                                     ^
robots/muscledarm.cpp:35:15: warning: Member variable 'MuscledArm::SOCKEL_BREITE' is not initialized in the constructor. [uninitMemberVar]
  MuscledArm::MuscledArm(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
robots/nimm2.cpp:25:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
robots/hand.cpp:1322:80: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (std::vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                               ^
robots/muscledarm.cpp:35:15: warning: Member variable 'MuscledArm::SOCKEL_HOEHE' is not initialized in the constructor. [uninitMemberVar]
  MuscledArm::MuscledArm(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
robots/nimm2.cpp:26:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/hand.cpp:1327:85: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (std::vector<HingeServo*>::iterator i = servos.begin(); i!= servos.end(); i++){
                                                                                    ^
robots/muscledarm.cpp:35:15: warning: Member variable 'MuscledArm::SOCKEL_MASSE' is not initialized in the constructor. [uninitMemberVar]
  MuscledArm::MuscledArm(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
robots/nimm2.cpp:27:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
robots/hand.cpp:1332:127: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (std::vector<AngularMotor*>::iterator i = frictionmotors.begin(); i!=                         frictionmotors.end(); i++){
                                                                                                                              ^
robots/muscledarm.cpp:35:15: warning: Member variable 'MuscledArm::printed' is not initialized in the constructor. [uninitMemberVar]
  MuscledArm::MuscledArm(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
robots/nimm2.cpp:28:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
robots/hand.cpp:1354:85: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (std::vector<HingeServo*>::iterator i = servos.begin(); i!= servos.end(); i++){
                                                                                    ^
53/300 files checked 17% done
robots/muscledarm.cpp:39:5: performance: Variable 'parentspace' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    parentspace=odeHandle.space;
    ^
robots/muscledarm.cpp:40:5: performance: Variable 'factorMotors' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    factorMotors=0.1;
    ^
robots/muscledarm.cpp:41:5: performance: Variable 'damping' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    damping=1; // seems to be wrong! (too high)
    ^
54/300 files checked 18% done
robots/muscledarm.h:225:14: warning: The class 'MuscledArm' defines member variable with name 'parentspace' also defined in its parent class 'OdeRobot'. [duplInheritedMember]
    dSpaceID parentspace;
             ^
robots/oderobot.h:279:14: note: Parent variable 'OdeRobot::parentspace'
    dSpaceID parentspace;
             ^
robots/muscledarm.h:225:14: note: Derived variable 'MuscledArm::parentspace'
    dSpaceID parentspace;
             ^
robots/nimm2.h:32:0: information: Include file: <selforg/inspectable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/inspectable.h>
^
robots/muscledarm.h:117:14: style: The destructor '~MuscledArm' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual ~MuscledArm(){};
             ^
robots/oderobot.h:76:14: note: Virtual destructor in base class
    virtual ~OdeRobot();
             ^
robots/muscledarm.h:117:14: note: Destructor in derived class
    virtual ~MuscledArm(){};
             ^
robots/muscledarm.h:141:17: style: The function 'getSensorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getSensorNumberIntern(){
                ^
robots/oderobot.h:97:17: note: Virtual function in base class
    virtual int getSensorNumberIntern() { return 0; };
                ^
robots/muscledarm.h:141:17: note: Function in derived class
    virtual int getSensorNumberIntern(){
                ^
robots/muscledarm.h:147:17: style: The function 'getMotorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getMotorNumberIntern(){
                ^
robots/oderobot.h:100:17: note: Virtual function in base class
    virtual int getMotorNumberIntern() { return 0; };
                ^
robots/muscledarm.h:147:17: note: Function in derived class
    virtual int getMotorNumberIntern(){
                ^
robots/muscledarm.h:174:24: style: The function 'getMainPrimitive' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual Primitive* getMainPrimitive() const { return object[hand]; }
                       ^
robots/oderobot.h:197:24: note: Virtual function in base class
    virtual Primitive* getMainPrimitive() const  {
                       ^
robots/muscledarm.h:174:24: note: Function in derived class
    virtual Primitive* getMainPrimitive() const { return object[hand]; }
                       ^
robots/muscledarm.cpp:108:10: style: C-style pointer casting [cstyleCast]
        ((SliderJoint*)joint[i])->
         ^
robots/muscledarm.cpp:109:60: style: C-style pointer casting [cstyleCast]
          addForce1(factorMotors * (motors[i-SJ_mM1]- 8 * ((SliderJoint*)joint[i])->getPosition1()));
                                                           ^
robots/muscledarm.cpp:114:10: style: C-style pointer casting [cstyleCast]
        ((HingeJoint*)joint[i])->addForce1
         ^
robots/muscledarm.cpp:117:15: style: C-style pointer casting [cstyleCast]
           - ((HingeJoint*)joint[i])->getPosition1());
              ^
robots/muscledarm.cpp:131:33: style: C-style pointer casting [cstyleCast]
      sensors[written]= 3/M_PI*((HingeJoint*)joint[HJ_BuA])->getPosition1();
                                ^
robots/muscledarm.cpp:133:33: style: C-style pointer casting [cstyleCast]
      sensors[written]= 3/M_PI*((HingeJoint*)joint[HJ_uAlA])->getPosition1();
                                ^
robots/muscledarm.cpp:138:42: style: C-style pointer casting [cstyleCast]
      sensors[written]= factorSensors * ((HingeJoint*)joint[HJ_BuA])->getPosition1Rate();
                                         ^
robots/muscledarm.cpp:140:42: style: C-style pointer casting [cstyleCast]
      sensors[written]= factorSensors * ((HingeJoint*)joint[HJ_uAlA])->getPosition1Rate();
                                         ^
robots/muscledarm.cpp:152:43: style: C-style pointer casting [cstyleCast]
        sensors[written]=factorSensors * ((SliderJoint*)joint[j])->getPosition1();
                                          ^
robots/muscledarm.cpp:241:22: style: C-style pointer casting [cstyleCast]
    MuscledArm* me = (MuscledArm*)data;
                     ^
robots/muscledarm.cpp:518:39: style: C-style pointer casting [cstyleCast]
                                     ((OneAxisJoint*)joint[HJ_BmM11])->getAxis1());
                                      ^
robots/muscledarm.cpp:526:40: style: C-style pointer casting [cstyleCast]
                                      ((OneAxisJoint*)joint[HJ_BuA])->getAxis1());
                                       ^
robots/muscledarm.cpp:542:39: style: C-style pointer casting [cstyleCast]
                                     ((OneAxisJoint*)joint[HJ_BmM21])->getAxis1());
                                      ^
robots/muscledarm.cpp:549:40: style: C-style pointer casting [cstyleCast]
                                      ((OneAxisJoint*)joint[HJ_uAsM12])->getAxis1());
                                       ^
robots/muscledarm.cpp:567:40: style: C-style pointer casting [cstyleCast]
                                      ((OneAxisJoint*)joint[HJ_lAmM12])->getAxis1());
                                       ^
robots/muscledarm.cpp:574:40: style: C-style pointer casting [cstyleCast]
                                      ((OneAxisJoint*)joint[HJ_uAlA])->getAxis1());
                                       ^
robots/muscledarm.cpp:589:40: style: C-style pointer casting [cstyleCast]
                                      ((OneAxisJoint*)joint[HJ_lAmM22])->getAxis1());
                                       ^
robots/muscledarm.cpp:596:40: style: C-style pointer casting [cstyleCast]
                                      ((OneAxisJoint*)joint[HJ_BuA])->getAxis1());
                                       ^
robots/muscledarm.cpp:214:18: style: The scope of the variable 'p1' can be reduced. [variableScope]
    const dReal *p1;
                 ^
55/300 files checked 19% done
robots/nimm2.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking robots/nimm4.cpp ...
robots/nimm4.cpp:24:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/nimm4.cpp:25:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
robots/nejihebi.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
robots/nimm2.h:172:16: style: Virtual function 'destroy' is called from destructor '~Nimm2()' at line 111. Dynamic binding is not used. [virtualCallInConstructor]
  virtual void destroy() override;
               ^
robots/nimm2.cpp:111:5: note: Calling destroy
    destroy();
    ^
robots/nimm2.h:172:16: note: destroy is a virtual function
  virtual void destroy() override;
               ^
robots/nimm2.h:131:15: style: The function 'getSensorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int getSensorNumberIntern(){
              ^
robots/oderobot.h:97:17: note: Virtual function in base class
    virtual int getSensorNumberIntern() { return 0; };
                ^
robots/nimm2.h:131:15: note: Function in derived class
  virtual int getSensorNumberIntern(){
              ^
robots/nimm2.h:137:15: style: The function 'getMotorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int getMotorNumberIntern(){
              ^
robots/oderobot.h:100:17: note: Virtual function in base class
    virtual int getMotorNumberIntern() { return 0; };
                ^
robots/nimm2.h:137:15: note: Function in derived class
  virtual int getMotorNumberIntern(){
              ^
robots/nimm2.cpp:222:14: style: Local variable 'height' shadows outer variable [shadowVariable]
      double height = width/4*3 + dheight;
             ^
robots/nimm2.h:192:10: note: Shadowed declaration
  double height;   // chassis height
         ^
robots/nimm2.cpp:222:14: note: Shadow variable
      double height = width/4*3 + dheight;
             ^
56/300 files checked 19% done
Checking robots/oderobot.cpp ...
robots/nejihebi.cpp:400:28: style: Variable 'commands[i-noScrews]' is assigned a value that is never used. [unreadVariable]
      commands[i-noScrews] = motors[i];
                           ^
57/300 files checked 19% done
Checking robots/plattfussschlange.cpp ...
58/300 files checked 20% done
robots/schlange.h:33:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include<vector>
^
robots/schlange.h:34:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include<assert.h>
^
Checking robots/replayrobot.cpp ...
robots/schlange.h:42:0: information: Include file: <selforg/configurable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/configurable.h>
^
robots/replayrobot.cpp:24:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/replayrobot.h:29:0: information: Include file: <selforg/types.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/types.h>
^
robots/replayrobot.h:30:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
robots/schlange.h:151:22: style: The function 'getMainPrimitive' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Primitive* getMainPrimitive() const {
                     ^
robots/oderobot.h:197:24: note: Virtual function in base class
    virtual Primitive* getMainPrimitive() const  {
                       ^
robots/schlange.h:151:22: note: Function in derived class
  virtual Primitive* getMainPrimitive() const {
                     ^
robots/schlange.h:159:35: style: The function 'getAllPrimitives' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual std::vector<Primitive*> getAllPrimitives() const { return objects;}
                                  ^
robots/oderobot.h:202:24: note: Virtual function in base class
    virtual Primitives getAllPrimitives() const { return objects; };
                       ^
robots/schlange.h:159:35: note: Function in derived class
  virtual std::vector<Primitive*> getAllPrimitives() const { return objects;}
                                  ^
robots/schlangeservo2.h:76:17: style: The function 'getSensorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getSensorNumberIntern() { assert(created); return 2*servos.size(); }
                ^
robots/schlange.h:134:15: note: Virtual function in base class
  virtual int getSensorNumberIntern()  override = 0;
              ^
robots/schlangeservo2.h:76:17: note: Function in derived class
    virtual int getSensorNumberIntern() { assert(created); return 2*servos.size(); }
                ^
robots/schlangeservo2.h:80:17: style: The function 'getMotorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getMotorNumberIntern(){ assert(created); return 2*servos.size(); }
                ^
robots/schlange.h:138:15: note: Virtual function in base class
  virtual int getMotorNumberIntern()  override = 0;
              ^
robots/schlangeservo2.h:80:17: note: Function in derived class
    virtual int getMotorNumberIntern(){ assert(created); return 2*servos.size(); }
                ^
robots/schlange.h:159:35: style: The function 'getAllPrimitives' overrides a function in a base class but is identical to the overridden function [uselessOverride]
  virtual std::vector<Primitive*> getAllPrimitives() const { return objects;}
                                  ^
robots/oderobot.h:202:24: note: Virtual function in base class
    virtual Primitives getAllPrimitives() const { return objects; };
                       ^
robots/schlange.h:159:35: note: Function in derived class
  virtual std::vector<Primitive*> getAllPrimitives() const { return objects;}
                                  ^
59/300 files checked 20% done
robots/oderobot.cpp:46:5: performance: Variable 'parentspace' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    parentspace = odeHandle.space;
    ^
Checking robots/robotchain.cpp ...
robots/oderobot.h:261:18: style: Virtual function 'cleanup' is called from destructor '~OdeRobot()' at line 51. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void cleanup();
                 ^
robots/oderobot.cpp:51:5: note: Calling cleanup
    cleanup();
    ^
robots/oderobot.h:261:18: note: cleanup is a virtual function
    virtual void cleanup();
                 ^
robots/oderobot.cpp:309:7: portability: %lu in format string (no. 2) requires 'unsigned long' but the argument type is 'std::size_t {aka unsigned long}'. [invalidPrintfArgType_uint]
      fprintf(stderr,"primitive index out of bounds %i (of %lui)", primitiveID, ps.size());
      ^
robots/robotchain.cpp:24:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/robotchain.cpp:26:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
robots/robotchain.cpp:27:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
robots/robotchain.h:28:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
robots/oderobot.cpp:264:0: style: Consider using std::any_of algorithm instead of a raw loop. [useStlAlgorithm]
      if(geom == i->getGeom()) return true;
^
60/300 files checked 20% done
Checking robots/schlange.cpp ...
robots/replayrobot.h:93:20: warning: The class 'ReplayRobot' defines member variable with name 'sensors' also defined in its parent class 'OdeRobot'. [duplInheritedMember]
    matrix::Matrix sensors;
                   ^
robots/oderobot.h:269:33: note: Parent variable 'OdeRobot::sensors'
    std::list<SensorAttachment> sensors; // list of generic sensors
                                ^
robots/replayrobot.h:93:20: note: Derived variable 'ReplayRobot::sensors'
    matrix::Matrix sensors;
                   ^
robots/replayrobot.h:41:6: style: The destructor '~ReplayRobot' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    ~ReplayRobot();
     ^
robots/oderobot.h:76:14: note: Virtual destructor in base class
    virtual ~OdeRobot();
             ^
robots/replayrobot.h:41:6: note: Destructor in derived class
    ~ReplayRobot();
     ^
robots/replayrobot.h:48:18: style: The function 'placeIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual void placeIntern(const osg::Matrix& pose) {}
                 ^
robots/oderobot.h:140:18: note: Virtual function in base class
    virtual void placeIntern(const osg::Matrix& pose) = 0;
                 ^
robots/replayrobot.h:48:18: note: Function in derived class
    virtual void placeIntern(const osg::Matrix& pose) {}
                 ^
robots/replayrobot.h:75:18: style: The function 'doInternalStuff' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual void doInternalStuff(GlobalData& globalData) {}
                 ^
robots/oderobot.h:165:18: note: Virtual function in base class
    virtual void doInternalStuff(GlobalData& globalData);
                 ^
robots/replayrobot.h:75:18: note: Function in derived class
    virtual void doInternalStuff(GlobalData& globalData) {}
                 ^
robots/replayrobot.h:79:24: style: The function 'getMainPrimitive' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual Primitive* getMainPrimitive() const { return 0; }
                       ^
robots/oderobot.h:197:24: note: Virtual function in base class
    virtual Primitive* getMainPrimitive() const  {
                       ^
robots/replayrobot.h:79:24: note: Function in derived class
    virtual Primitive* getMainPrimitive() const { return 0; }
                       ^
robots/replayrobot.cpp:83:15: style: Variable 'p' can be declared as pointer to const [constVariablePointer]
        char* p;
              ^
robots/replayrobot.cpp:132:15: style: Variable 'p' can be declared as pointer to const [constVariablePointer]
        char* p;
              ^
61/300 files checked 20% done
Checking robots/schlangeforce.cpp ...
robots/robotchain.h:116:18: style: Virtual function 'destroy' is called from destructor '~RobotChain()' at line 65. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void destroy() override;
                 ^
robots/robotchain.h:65:28: note: Calling destroy
    virtual ~RobotChain(){ destroy(); };
                           ^
robots/robotchain.h:116:18: note: destroy is a virtual function
    virtual void destroy() override;
                 ^
robots/robotchain.cpp:83:26: style: Condition 'j==0' is always true [knownConditionTrueFalse]
      if(conf.useIR && (j==0 || j==conf.numRobots-1)){
                         ^
robots/robotchain.cpp:79:11: note: Assignment 'j=0', assigned value is 0
    int j=0;
          ^
robots/robotchain.cpp:83:26: note: Condition 'j==0' is always true
      if(conf.useIR && (j==0 || j==conf.numRobots-1)){
                         ^
robots/robotchain.cpp:162:8: style: C-style pointer casting [cstyleCast]
      ((OdeRobot*)nimm2)->placeIntern(TRANSM(j*(-conf.distance),0,0.11)*pose);
       ^
62/300 files checked 20% done
robots/schlangeforce.h:70:19: style: The function 'getSensorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
      virtual int getSensorNumberIntern() { assert(created); return joints.size() * 2; }
                  ^
robots/schlange.h:134:15: note: Virtual function in base class
  virtual int getSensorNumberIntern()  override = 0;
              ^
robots/schlangeforce.h:70:19: note: Function in derived class
      virtual int getSensorNumberIntern() { assert(created); return joints.size() * 2; }
                  ^
robots/schlangeforce.h:74:19: style: The function 'getMotorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
      virtual int getMotorNumberIntern(){ assert(created); return joints.size() * 2; }
                  ^
robots/schlange.h:138:15: note: Virtual function in base class
  virtual int getMotorNumberIntern()  override = 0;
              ^
robots/schlangeforce.h:74:19: note: Function in derived class
      virtual int getMotorNumberIntern(){ assert(created); return joints.size() * 2; }
                  ^
Checking robots/schlangeservo.cpp ...
robots/schlangeforce.cpp:57:8: style: C-style pointer casting [cstyleCast]
      ((UniversalJoint*)joints[i])->addForces(conf.motorPower * motors[2*i],
       ^
robots/schlangeforce.cpp:91:45: style: C-style pointer casting [cstyleCast]
      sensors[2*n]   = conf.sensorFactor * ((UniversalJoint*)joints[n])->getPosition1Rate();
                                            ^
robots/schlangeforce.cpp:93:45: style: C-style pointer casting [cstyleCast]
      sensors[2*n+1] = conf.sensorFactor * ((UniversalJoint*)joints[n])->getPosition2Rate();
                                            ^
63/300 files checked 20% done
Checking robots/schlangeservo2.cpp ...
robots/schlange.h:188:16: style: Virtual function 'destroy' is called from destructor '~Schlange()' at line 44. Dynamic binding is not used. [virtualCallInConstructor]
  virtual void destroy() override;
               ^
robots/schlange.cpp:44:17: note: Calling destroy
    if(created) destroy();
                ^
robots/schlange.h:188:16: note: destroy is a virtual function
  virtual void destroy() override;
               ^
robots/schlange.cpp:74:98: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<AngularMotor*>::iterator i = frictionmotors.begin(); i!= frictionmotors.end(); i++){
                                                                                                 ^
robots/schlange.cpp:202:98: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<AngularMotor*>::iterator i = frictionmotors.begin(); i!= frictionmotors.end(); i++){
                                                                                                 ^
64/300 files checked 21% done
Checking robots/schlangevelocity.cpp ...
robots/schlangevelocity.h:53:27: warning: The class 'SchlangeVelocity' defines member function with name 'getDefaultConf' also defined in its parent class 'Schlange'. [duplInheritedMember]
      static SchlangeConf getDefaultConf(){
                          ^
robots/schlange.h:85:23: note: Parent function 'Schlange::getDefaultConf'
  static SchlangeConf getDefaultConf(){
                      ^
robots/schlangevelocity.h:53:27: note: Derived function 'SchlangeVelocity::getDefaultConf'
      static SchlangeConf getDefaultConf(){
                          ^
robots/schlangevelocity.h:85:19: style: The function 'getSensorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
      virtual int getSensorNumberIntern() { assert(created); return joints.size() * 2; }
                  ^
robots/schlange.h:134:15: note: Virtual function in base class
  virtual int getSensorNumberIntern()  override = 0;
              ^
robots/schlangevelocity.h:85:19: note: Function in derived class
      virtual int getSensorNumberIntern() { assert(created); return joints.size() * 2; }
                  ^
robots/schlangevelocity.h:89:19: style: The function 'getMotorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
      virtual int getMotorNumberIntern(){ assert(created); return joints.size() * 2; }
                  ^
robots/schlange.h:138:15: note: Virtual function in base class
  virtual int getMotorNumberIntern()  override = 0;
              ^
robots/schlangevelocity.h:89:19: note: Function in derived class
      virtual int getMotorNumberIntern(){ assert(created); return joints.size() * 2; }
                  ^
robots/schlangeservo.h:76:17: style: The function 'getSensorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getSensorNumberIntern() { assert(created); return servos.size(); }
                ^
robots/schlange.h:134:15: note: Virtual function in base class
  virtual int getSensorNumberIntern()  override = 0;
              ^
robots/schlangeservo.h:76:17: note: Function in derived class
    virtual int getSensorNumberIntern() { assert(created); return servos.size(); }
                ^
robots/schlangeservo.h:80:17: style: The function 'getMotorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getMotorNumberIntern(){ assert(created); return servos.size(); }
                ^
robots/schlange.h:138:15: note: Virtual function in base class
  virtual int getMotorNumberIntern()  override = 0;
              ^
robots/schlangeservo.h:80:17: note: Function in derived class
    virtual int getMotorNumberIntern(){ assert(created); return servos.size(); }
                ^
robots/schlangevelocity.cpp:56:8: style: C-style pointer casting [cstyleCast]
      ((UniversalJoint*)joints[i])->setParam ( dParamVel, factor_motors * motors[2*i]);
       ^
robots/schlangevelocity.cpp:57:8: style: C-style pointer casting [cstyleCast]
      ((UniversalJoint*)joints[i])->setParam ( dParamFMax , conf.motorPower );
       ^
robots/schlangevelocity.cpp:59:8: style: C-style pointer casting [cstyleCast]
      ((UniversalJoint*)joints[i])->addForces
       ^
robots/schlangevelocity.cpp:60:35: style: C-style pointer casting [cstyleCast]
         (- conf.frictionJoint * ((UniversalJoint*)joints[i])->getPosition1Rate(),
                                  ^
robots/schlangevelocity.cpp:61:35: style: C-style pointer casting [cstyleCast]
          - conf.frictionJoint * ((UniversalJoint*)joints[i])->getPosition2Rate());
                                  ^
robots/schlangevelocity.cpp:86:45: style: C-style pointer casting [cstyleCast]
      sensors[2*n]   = conf.sensorFactor * ((UniversalJoint*)joints[n])->getPosition1Rate();
                                            ^
robots/schlangevelocity.cpp:87:45: style: C-style pointer casting [cstyleCast]
      sensors[2*n+1] = conf.sensorFactor * ((UniversalJoint*)joints[n])->getPosition2Rate();
                                            ^
robots/hexabot.cpp:367:28: warning: Assert statement calls a function which may have desired side effects: 'getSensorNumber'. [assertWithSideEffect]
    assert(sensornumber == getSensorNumber());
                           ^
robots/schlangevelocity.h:61:16: error: Uninitialized variables: conf.sensorFactor, conf.frictionJoint, conf.frictionRatio, conf.useServoVel, conf.velocity, conf.useSpaces [uninitvar]
        return conf;
               ^
robots/schlangevelocity.h:61:16: error: Uninitialized struct member: conf.sensorFactor [uninitStructMember]
        return conf;
               ^
robots/schlangevelocity.h:61:16: error: Uninitialized struct member: conf.frictionJoint [uninitStructMember]
        return conf;
               ^
robots/schlangevelocity.h:61:16: error: Uninitialized struct member: conf.frictionRatio [uninitStructMember]
        return conf;
               ^
robots/schlangevelocity.h:61:16: error: Uninitialized struct member: conf.useServoVel [uninitStructMember]
        return conf;
               ^
robots/schlangevelocity.h:61:16: error: Uninitialized struct member: conf.velocity [uninitStructMember]
        return conf;
               ^
robots/schlangevelocity.h:61:16: error: Uninitialized struct member: conf.useSpaces [uninitStructMember]
        return conf;
               ^
robots/schlangeservo.cpp:115:76: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<HingeServo*>::iterator i = servos.begin(); i!= servos.end(); i++){
                                                                           ^
robots/schlangeservo.cpp:118:76: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<HingeServo*>::iterator i = servos.begin(); i!= servos.end(); i++){
                                                                           ^
robots/schlangeservo.cpp:121:76: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<HingeServo*>::iterator i = servos.begin(); i!= servos.end(); i++){
                                                                           ^
robots/schlangeservo.cpp:132:78: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<HingeServo*>::iterator i = servos.begin(); i!= servos.end(); i++){
                                                                             ^
65/300 files checked 21% done
66/300 files checked 21% done
Checking robots/shortcircuit.cpp ...
robots/hexabot.cpp:1098:17: warning: Member variable 'Leg::footSphere' is not initialized in the constructor. [uninitMemberVar]
  Hexabot::Leg::Leg():
                ^
robots/hexabot.cpp:1106:19: warning: Member variable 'Trunk::tUpTrans' is not initialized in the constructor. [uninitMemberVar]
  Hexabot::Trunk::Trunk() {
                  ^
Checking robots/skeleton.cpp ...
robots/hexabot.h:200:16: style: Virtual function 'destroy' is called from destructor '~Hexabot()' at line 195. Dynamic binding is not used. [virtualCallInConstructor]
  virtual void destroy() override;
               ^
robots/hexabot.cpp:195:5: note: Calling destroy
    destroy();
    ^
robots/hexabot.h:200:16: note: destroy is a virtual function
  virtual void destroy() override;
               ^
robots/hexabot.h:163:15: style: The function 'getSensorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int getSensorNumberIntern(){
              ^
robots/oderobot.h:97:17: note: Virtual function in base class
    virtual int getSensorNumberIntern() { return 0; };
                ^
robots/hexabot.h:163:15: note: Function in derived class
  virtual int getSensorNumberIntern(){
              ^
robots/hexabot.h:169:15: style: The function 'getMotorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int getMotorNumberIntern(){
              ^
robots/oderobot.h:100:17: note: Virtual function in base class
    virtual int getMotorNumberIntern() { return 0; };
                ^
robots/hexabot.h:169:15: note: Function in derived class
  virtual int getMotorNumberIntern(){
              ^
robots/shortcircuit.cpp:24:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/schlangeservo2.cpp:123:82: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<UniversalServo*>::iterator i = servos.begin(); i!= servos.end(); i++){
                                                                                 ^
robots/schlangeservo2.cpp:126:82: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<UniversalServo*>::iterator i = servos.begin(); i!= servos.end(); i++){
                                                                                 ^
robots/schlangeservo2.cpp:132:82: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<UniversalServo*>::iterator i = servos.begin(); i!= servos.end(); i++){
                                                                                 ^
robots/schlangeservo2.cpp:143:84: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<UniversalServo*>::iterator i = servos.begin(); i!= servos.end(); i++){
                                                                                   ^
67/300 files checked 21% done
Checking robots/sliderwheelie.cpp ...
robots/skeleton.cpp:24:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/skeleton.cpp:25:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
robots/skeleton.cpp:28:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
robots/skeleton.cpp:31:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
robots/skeleton.cpp:32:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
robots/skeleton.cpp:33:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
robots/skeleton.cpp:34:0: information: Include file: <ode_robots/angularmotor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/angularmotor.h>
^
robots/skeleton.cpp:35:0: information: Include file: <ode_robots/irsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/irsensor.h>
^
robots/skeleton.h:27:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
robots/skeleton.h:28:0: information: Include file: <ode_robots/gripper.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/gripper.h>
^
robots/shortcircuit.h:84:13: warning: The class 'ShortCircuit' defines member variable with name 'motors' also defined in its parent class 'OdeRobot'. [duplInheritedMember]
    double* motors;
            ^
robots/oderobot.h:270:32: note: Parent variable 'OdeRobot::motors'
    std::list<MotorAttachment> motors;   // list of generic motors
                               ^
robots/shortcircuit.h:84:13: note: Derived variable 'ShortCircuit::motors'
    double* motors;
            ^
robots/shortcircuit.h:47:18: style: The function 'placeIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual void placeIntern(const osg::Matrix& pose) {}
                 ^
robots/oderobot.h:140:18: note: Virtual function in base class
    virtual void placeIntern(const osg::Matrix& pose) = 0;
                 ^
robots/shortcircuit.h:47:18: note: Function in derived class
    virtual void placeIntern(const osg::Matrix& pose) {}
                 ^
robots/shortcircuit.h:64:17: style: The function 'getSensorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getSensorNumberIntern() {return sensorno; }
                ^
robots/oderobot.h:97:17: note: Virtual function in base class
    virtual int getSensorNumberIntern() { return 0; };
                ^
robots/shortcircuit.h:64:17: note: Function in derived class
    virtual int getSensorNumberIntern() {return sensorno; }
                ^
robots/shortcircuit.h:68:17: style: The function 'getMotorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getMotorNumberIntern() {return motorno; }
                ^
robots/oderobot.h:100:17: note: Virtual function in base class
    virtual int getMotorNumberIntern() { return 0; };
                ^
robots/shortcircuit.h:68:17: note: Function in derived class
    virtual int getMotorNumberIntern() {return motorno; }
                ^
robots/shortcircuit.h:74:18: style: The function 'doInternalStuff' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual void doInternalStuff(GlobalData& globalData) {}
                 ^
robots/oderobot.h:165:18: note: Virtual function in base class
    virtual void doInternalStuff(GlobalData& globalData);
                 ^
robots/shortcircuit.h:74:18: note: Function in derived class
    virtual void doInternalStuff(GlobalData& globalData) {}
                 ^
robots/shortcircuit.h:78:24: style: The function 'getMainPrimitive' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual Primitive* getMainPrimitive() const { return dummy; }
                       ^
robots/oderobot.h:197:24: note: Virtual function in base class
    virtual Primitive* getMainPrimitive() const  {
                       ^
robots/shortcircuit.h:78:24: note: Function in derived class
    virtual Primitive* getMainPrimitive() const { return dummy; }
                       ^
robots/shortcircuit.cpp:39:14: style: C-style pointer casting [cstyleCast]
    motors = (double*)malloc(motorno * sizeof(motor));
             ^
68/300 files checked 21% done
robots/sliderwheelie.h:27:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include<vector>
^
robots/sliderwheelie.h:28:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include<assert.h>
^
Checking robots/sphererobot.cpp ...
robots/hexabot.cpp:347:70: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (MotorMap::iterator it = servos.begin(); it != servos.end(); it++) {
                                                                     ^
robots/hexabot.cpp:518:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (PrimitiveList::iterator i = objects.begin(); i != objects.end(); i++) {
                                                                          ^
robots/hexabot.cpp:525:69: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (JointList::iterator i = joints.begin(); i != joints.end(); i++) {
                                                                    ^
robots/sphererobot.cpp:24:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/sphererobot.cpp:32:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
Checking robots/hexabot.cpp: HEXABOT_MAIN_VER_1_6...
robots/sphererobot.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
robots/sphererobot.cpp:40:16: warning: Member variable 'Sphererobot::servo' is not initialized in the constructor. [uninitMemberVar]
  Sphererobot::Sphererobot ( const OdeHandle& odeHandle, const OsgHandle& osgHandle,
               ^
robots/sphererobot.h:143:18: style: Virtual function 'destroy' is called from destructor '~Sphererobot()' at line 52. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void destroy() override;
                 ^
robots/sphererobot.cpp:52:5: note: Calling destroy
    destroy();
    ^
robots/sphererobot.h:143:18: note: destroy is a virtual function
    virtual void destroy() override;
                 ^
robots/sphererobot.h:136:24: style: The function 'getMainPrimitive' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual Primitive* getMainPrimitive() const { return object[Base]; }
                       ^
robots/oderobot.h:197:24: note: Virtual function in base class
    virtual Primitive* getMainPrimitive() const  {
                       ^
robots/sphererobot.h:136:24: note: Function in derived class
    virtual Primitive* getMainPrimitive() const { return object[Base]; }
                       ^
robots/sphererobot.cpp:163:12: style: The scope of the variable 'x' can be reduced. [variableScope]
    double x , y;
           ^
robots/sphererobot.cpp:163:16: style: The scope of the variable 'y' can be reduced. [variableScope]
    double x , y;
               ^
69/300 files checked 21% done
robots/skeleton.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking robots/sphererobot3masses.cpp ...
robots/sphererobot3masses.cpp:25:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/sphererobot3masses.cpp:26:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
robots/sphererobot3masses.cpp:27:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
robots/sliderwheelie.h:142:18: style: Virtual function 'destroy' is called from destructor '~SliderWheelie()' at line 47. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void destroy();
                 ^
robots/sliderwheelie.cpp:47:17: note: Calling destroy
    if(created) destroy();
                ^
robots/sliderwheelie.h:142:18: note: destroy is a virtual function
    virtual void destroy();
                 ^
robots/sliderwheelie.h:87:14: style: The destructor '~SliderWheelie' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual ~SliderWheelie();
             ^
robots/oderobot.h:76:14: note: Virtual destructor in base class
    virtual ~OdeRobot();
             ^
robots/sliderwheelie.h:87:14: note: Destructor in derived class
    virtual ~SliderWheelie();
             ^
robots/sliderwheelie.h:110:18: style: The function 'placeIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual void placeIntern(const osg::Matrix& pose);
                 ^
robots/oderobot.h:140:18: note: Virtual function in base class
    virtual void placeIntern(const osg::Matrix& pose) = 0;
                 ^
robots/sliderwheelie.h:110:18: note: Function in derived class
    virtual void placeIntern(const osg::Matrix& pose);
                 ^
robots/sliderwheelie.h:112:18: style: The function 'update' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual void update();
                 ^
robots/oderobot.h:127:18: note: Virtual function in base class
    virtual void update();
                 ^
robots/sliderwheelie.h:112:18: note: Function in derived class
    virtual void update();
                 ^
robots/sliderwheelie.h:114:10: style: The function 'doInternalStuff' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    void doInternalStuff(GlobalData& global);
         ^
robots/oderobot.h:165:18: note: Virtual function in base class
    virtual void doInternalStuff(GlobalData& globalData);
                 ^
robots/sliderwheelie.h:114:10: note: Function in derived class
    void doInternalStuff(GlobalData& global);
         ^
robots/sliderwheelie.h:116:18: style: The function 'setMotorsIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual void setMotorsIntern( const double* motors, int motornumber );
                 ^
robots/oderobot.h:94:18: note: Virtual function in base class
    virtual void setMotorsIntern(const double* motors, int motorsnumber) { };
                 ^
robots/sliderwheelie.h:116:18: note: Function in derived class
    virtual void setMotorsIntern( const double* motors, int motornumber );
                 ^
robots/sliderwheelie.h:120:17: style: The function 'getSensorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getSensorNumberIntern() { assert(created);
                ^
robots/oderobot.h:97:17: note: Virtual function in base class
    virtual int getSensorNumberIntern() { return 0; };
                ^
robots/sliderwheelie.h:120:17: note: Function in derived class
    virtual int getSensorNumberIntern() { assert(created);
                ^
robots/sliderwheelie.h:123:17: style: The function 'getMotorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getMotorNumberIntern(){ assert(created);
                ^
robots/oderobot.h:100:17: note: Virtual function in base class
    virtual int getMotorNumberIntern() { return 0; };
                ^
robots/sliderwheelie.h:123:17: note: Function in derived class
    virtual int getMotorNumberIntern(){ assert(created);
                ^
robots/sliderwheelie.h:126:24: style: The function 'getMainPrimitive' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual Primitive* getMainPrimitive() const {
                       ^
robots/oderobot.h:197:24: note: Virtual function in base class
    virtual Primitive* getMainPrimitive() const  {
                       ^
robots/sliderwheelie.h:126:24: note: Function in derived class
    virtual Primitive* getMainPrimitive() const {
                       ^
robots/sliderwheelie.h:133:37: style: The function 'getAllPrimitives' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual std::vector<Primitive*> getAllPrimitives() const { return objects;}
                                    ^
robots/oderobot.h:202:24: note: Virtual function in base class
    virtual Primitives getAllPrimitives() const { return objects; };
                       ^
robots/sliderwheelie.h:133:37: note: Function in derived class
    virtual std::vector<Primitive*> getAllPrimitives() const { return objects;}
                                    ^
robots/sliderwheelie.h:133:37: style: The function 'getAllPrimitives' overrides a function in a base class but is identical to the overridden function [uselessOverride]
    virtual std::vector<Primitive*> getAllPrimitives() const { return objects;}
                                    ^
robots/oderobot.h:202:24: note: Virtual function in base class
    virtual Primitives getAllPrimitives() const { return objects; };
                       ^
robots/sliderwheelie.h:133:37: note: Function in derived class
    virtual std::vector<Primitive*> getAllPrimitives() const { return objects;}
                                    ^
robots/sliderwheelie.cpp:62:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
robots/sliderwheelie.cpp:65:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
robots/sliderwheelie.cpp:97:80: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
     for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                               ^
robots/sliderwheelie.cpp:286:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++) {
                                                                                ^
robots/sliderwheelie.cpp:304:89: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for(vector<SliderServo*>::iterator i=sliderServos.begin(); i!=sliderServos.end(); i++) {
                                                                                        ^
70/300 files checked 22% done
robots/sphererobot3masses.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking robots/truckmesh.cpp ...
robots/truckmesh.cpp:30:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/truckmesh.cpp:31:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
robots/truckmesh.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
robots/skeleton.cpp:47:13: warning: Member variable 'Skeleton::pelvisservo' is not initialized in the constructor. [uninitMemberVar]
  Skeleton::Skeleton(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
            ^
robots/skeleton.cpp:47:13: warning: Member variable 'Skeleton::backbendindex' is not initialized in the constructor. [uninitMemberVar]
  Skeleton::Skeleton(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
            ^
robots/skeleton.h:291:18: style: Virtual function 'destroy' is called from destructor '~Skeleton()' at line 146. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void destroy();
                 ^
robots/skeleton.h:146:26: note: Calling destroy
    virtual ~Skeleton(){ destroy(); };
                         ^
robots/skeleton.h:291:18: note: destroy is a virtual function
    virtual void destroy();
                 ^
robots/skeleton.cpp:1119:13: warning: Either the condition 'o' is redundant or there is possible null pointer dereference: o. [nullPointerRedundantCheck]
    else if(o->getBody())
            ^
robots/skeleton.cpp:1117:9: note: Assuming that condition 'o' is not redundant
    if (o && o->getGeom())
        ^
robots/skeleton.cpp:1119:13: note: Null pointer dereference
    else if(o->getBody())
            ^
robots/skeleton.cpp:1130:13: warning: Either the condition 'o' is redundant or there is possible null pointer dereference: o. [nullPointerRedundantCheck]
    else if(o->getBody())
            ^
robots/skeleton.cpp:1128:9: note: Assuming that condition 'o' is not redundant
    if (o && o->getGeom())
        ^
robots/skeleton.cpp:1130:13: note: Null pointer dereference
    else if(o->getBody())
            ^
robots/skeleton.cpp:365:17: style: The scope of the variable 'bj' can be reduced. [variableScope]
    BallJoint*  bj;
                ^
robots/skeleton.cpp:356:15: style: Local variable 'ignoreColSpace' shadows outer variable [shadowVariable]
    OdeHandle ignoreColSpace(odeHandle);
              ^
robots/skeleton.h:297:15: note: Shadowed declaration
    OdeHandle ignoreColSpace; // odehandle with space within collisions are ignored
              ^
robots/skeleton.cpp:356:15: note: Shadow variable
    OdeHandle ignoreColSpace(odeHandle);
              ^
robots/truckmesh.cpp:51:14: warning: Member variable 'TruckMesh::drawBoundings' is not initialized in the constructor. [uninitMemberVar]
  TruckMesh::TruckMesh(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
             ^
robots/truckmesh.h:111:18: style: Virtual function 'destroy' is called from destructor '~TruckMesh()' at line 58. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void destroy() override;
                 ^
robots/truckmesh.h:58:27: note: Calling destroy
    virtual ~TruckMesh(){ destroy(); };
                          ^
robots/truckmesh.h:111:18: note: destroy is a virtual function
    virtual void destroy() override;
                 ^
robots/truckmesh.h:58:14: style: The destructor '~TruckMesh' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual ~TruckMesh(){ destroy(); };
             ^
robots/oderobot.h:76:14: note: Virtual destructor in base class
    virtual ~OdeRobot();
             ^
robots/truckmesh.h:58:14: note: Destructor in derived class
    virtual ~TruckMesh(){ destroy(); };
             ^
robots/truckmesh.h:86:17: style: The function 'getSensorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getSensorNumberIntern(){
                ^
robots/oderobot.h:97:17: note: Virtual function in base class
    virtual int getSensorNumberIntern() { return 0; };
                ^
robots/truckmesh.h:86:17: note: Function in derived class
    virtual int getSensorNumberIntern(){
                ^
robots/truckmesh.h:92:17: style: The function 'getMotorNumberIntern' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getMotorNumberIntern(){
                ^
robots/oderobot.h:100:17: note: Virtual function in base class
    virtual int getMotorNumberIntern() { return 0; };
                ^
robots/truckmesh.h:92:17: note: Function in derived class
    virtual int getMotorNumberIntern(){
                ^
robots/truckmesh.cpp:237:17: warning: Identical inner 'if' condition is always true. [identicalInnerCondition]
      else if (i<7){ // front wheels
                ^
robots/truckmesh.cpp:217:20: note: outer condition: i<7
    for (int i=1; i<7; i++) {
                   ^
robots/truckmesh.cpp:237:17: note: identical inner condition: i<7
      else if (i<7){ // front wheels
                ^
71/300 files checked 22% done
Checking robots/twowheeled.cpp ...
robots/twowheeled.cpp:25:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/twowheeled.cpp:26:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
robots/twowheeled.cpp:28:0: information: Include file: <ode_robots/twowheeled.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twowheeled.h>
^
robots/twowheeled.cpp:29:0: information: Include file: <ode_robots/camerasensors.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/camerasensors.h>
^
72/300 files checked 23% done
robots/sphererobot3masses.h:159:16: style: Virtual function 'destroy' is called from destructor '~Sphererobot3Masses()' at line 97. Dynamic binding is not used. [virtualCallInConstructor]
  virtual void destroy() override;
               ^
robots/sphererobot3masses.cpp:97:5: note: Calling destroy
    destroy();
    ^
robots/sphererobot3masses.h:159:16: note: destroy is a virtual function
  virtual void destroy() override;
               ^
Checking robots/uwo.cpp ...
73/300 files checked 23% done
Checking robots/vierbeiner.cpp ...
robots/uwo.cpp:24:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/uwo.cpp:25:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
robots/sphererobot3masses.cpp:42:74: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for(list<Sensor*>::iterator i = sensors.begin(); i != sensors.end(); i++){
                                                                         ^
74/300 files checked 24% done
robots/vierbeiner.cpp:24:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
robots/vierbeiner.cpp:25:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
robots/vierbeiner.cpp:28:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
robots/vierbeiner.cpp:31:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
robots/vierbeiner.cpp:32:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
Checking sensors/axisorientationsensor.cpp ...
robots/vierbeiner.h:27:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
sensors/axisorientationsensor.cpp:25:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
sensors/sensor.h:27:0: information: Include file: <list> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <list>
^
sensors/sensor.h:28:0: information: Include file: <selforg/types.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/types.h>
^
sensors/sensor.h:29:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
sensors/sensor.h:30:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
sensors/axisorientationsensor.h:49:5: style: Class 'AxisOrientationSensor' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    AxisOrientationSensor(Mode mode, short dimensions = X | Y | Z );
    ^
sensors/axisorientationsensor.h:50:14: style: The destructor '~AxisOrientationSensor' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual ~AxisOrientationSensor() {}
             ^
sensors/sensor.h:49:14: note: Virtual destructor in base class
    virtual ~Sensor() {}
             ^
sensors/axisorientationsensor.h:50:14: note: Destructor in derived class
    virtual ~AxisOrientationSensor() {}
             ^
75/300 files checked 24% done
Checking sensors/camera.cpp ...
robots/uwo.h:106:18: style: Virtual function 'destroy' is called from destructor '~Uwo()' at line 68. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void destroy() override;
                 ^
robots/uwo.h:68:21: note: Calling destroy
    virtual ~Uwo(){ destroy(); };
                    ^
robots/uwo.h:106:18: note: destroy is a virtual function
    virtual void destroy() override;
                 ^
robots/uwo.h:68:14: style: The destructor '~Uwo' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual ~Uwo(){ destroy(); };
             ^
robots/oderobot.h:76:14: note: Virtual destructor in base class
    virtual ~OdeRobot();
             ^
robots/uwo.h:68:14: note: Destructor in derived class
    virtual ~Uwo(){ destroy(); };
             ^
robots/uwo.h:97:24: style: The function 'getMainPrimitive' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual Primitive* getMainPrimitive() const { return objects[0]; }
                       ^
robots/oderobot.h:197:24: note: Virtual function in base class
    virtual Primitive* getMainPrimitive() const  {
                       ^
robots/uwo.h:97:24: note: Function in derived class
    virtual Primitive* getMainPrimitive() const { return objects[0]; }
                       ^
robots/uwo.cpp:129:13: style: Local variable 'pos' shadows outer variable [shadowVariable]
        Pos pos = Pos(0,0,-(conf.legLength/2+conf.sliderLength/1.6));
            ^
robots/uwo.cpp:94:11: note: Shadowed declaration
      Pos pos = Pos(sin(alpha) * radius * 0.8,
          ^
robots/uwo.cpp:129:13: note: Shadow variable
        Pos pos = Pos(0,0,-(conf.legLength/2+conf.sliderLength/1.6));
            ^
76/300 files checked 24% done
sensors/camera.h:32:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
sensors/camera.h:33:0: information: Include file: <osg/Camera> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Camera>
^
sensors/camera.cpp:27:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
sensors/camera.cpp:29:0: information: Include file: <selforg/position.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/position.h>
^
sensors/camera.cpp:30:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
sensors/camera.cpp:31:0: information: Include file: <osg/Camera> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Camera>
^
sensors/camera.cpp:32:0: information: Include file: <osg/Image> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Image>
^
sensors/imageprocessor.h:27:0: information: Include file: <osg/Image> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Image>
^
sensors/camera.cpp:40:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
sensors/camera.h:110:19: style: Boolean value assigned to floating point variable. [assignBoolToFloat]
      c.draw      = true;
                  ^
Checking sensors/camerasensor.cpp ...
sensors/camera.cpp:59:11: warning: Member variable 'Camera::cam' is not initialized in the constructor. [uninitMemberVar]
  Camera::Camera( const CameraConf& conf)
          ^
sensors/camera.cpp:59:11: warning: Member variable 'Camera::body' is not initialized in the constructor. [uninitMemberVar]
  Camera::Camera( const CameraConf& conf)
          ^
sensors/camera.cpp:59:11: warning: Member variable 'Camera::transform' is not initialized in the constructor. [uninitMemberVar]
  Camera::Camera( const CameraConf& conf)
          ^
sensors/camera.cpp:59:11: warning: Member variable 'Camera::initialized' is not initialized in the constructor. [uninitMemberVar]
  Camera::Camera( const CameraConf& conf)
          ^
sensors/camera.h:100:5: style: Class 'Camera' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Camera( const CameraConf& conf = getDefaultConf() );
    ^
sensors/camera.h:72:7: style: Struct 'PostDrawCallback' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
      PostDrawCallback(Camera* cam):
      ^
77/300 files checked 24% done
robots/vierbeiner.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking sensors/contactsensor.cpp ...
sensors/contactsensor.cpp:24:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
sensors/contactsensor.cpp:25:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
sensors/contactsensor.cpp:26:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
sensors/contactsensor.cpp:27:0: information: Include file: <selforg/position.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/position.h>
^
sensors/contactsensor.cpp:28:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
sensors/contactsensor.cpp:29:0: information: Include file: <osg/Vec3> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Vec3>
^
sensors/contactsensor.cpp:31:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
sensors/contactsensor.cpp:32:0: information: Include file: <ode_robots/osgprimitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/osgprimitive.h>
^
sensors/contactsensor.cpp:33:0: information: Include file: <ode_robots/osghandle.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/osghandle.h>
^
sensors/contactsensor.cpp:34:0: information: Include file: <ode_robots/contactsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/contactsensor.h>
^
sensors/contactsensor.cpp:44:29: style: C-style pointer casting [cstyleCast]
    ContactSensor* sensor = (ContactSensor*)userdata;
                            ^
sensors/contactsensor.cpp:54:29: style: C-style pointer casting [cstyleCast]
    ContactSensor* sensor = (ContactSensor*)userdata;
                            ^
sensors/contactsensor.cpp:40:52: style: Parameter 'params' can be declared as reference to const. However it seems that 'contactCollCallbackNoCol' is a callback function, if 'params' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
  int contactCollCallbackNoCol(dSurfaceParameters& params, GlobalData& globaldata, void *userdata,
                                                   ^
sensors/contactsensor.cpp:102:49: note: You might need to cast the function pointer here
      transform->substance.setCollisionCallback(contactCollCallbackNoCol,this);
                                                ^
sensors/contactsensor.cpp:40:52: note: Parameter 'params' can be declared as reference to const
  int contactCollCallbackNoCol(dSurfaceParameters& params, GlobalData& globaldata, void *userdata,
                                                   ^
sensors/contactsensor.cpp:50:47: style: Parameter 'params' can be declared as reference to const. However it seems that 'contactCollCallback' is a callback function, if 'params' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
  int contactCollCallback(dSurfaceParameters& params, GlobalData& globaldata, void *userdata,
                                              ^
sensors/contactsensor.cpp:104:49: note: You might need to cast the function pointer here
      reference->substance.setCollisionCallback(contactCollCallback,this);
                                                ^
sensors/contactsensor.cpp:50:47: note: Parameter 'params' can be declared as reference to const
  int contactCollCallback(dSurfaceParameters& params, GlobalData& globaldata, void *userdata,
                                              ^
78/300 files checked 24% done
Checking sensors/derivativesensor.cpp ...
79/300 files checked 24% done
Checking sensors/irsensor.cpp ...
sensors/raysensor.h:27:0: information: Include file: <ode-dbl/common.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/common.h>
^
sensors/raysensor.h:28:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
sensors/raysensor.h:29:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
sensors/raysensor.h:30:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
sensors/raysensor.h:31:0: information: Include file: <selforg/position.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/position.h>
^
sensors/raysensor.h:32:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
sensors/raysensor.h:33:0: information: Include file: <osg/Vec3> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Vec3>
^
sensors/derivativesensor.h:18:5: style: Class 'DerivativeSensor' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    DerivativeSensor(Sensor* attachedSensor, double factor = 1);
    ^
sensors/derivativesensor.h:20:14: style: The destructor '~DerivativeSensor' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual ~DerivativeSensor() {}
             ^
sensors/sensor.h:49:14: note: Virtual destructor in base class
    virtual ~Sensor() {}
             ^
sensors/derivativesensor.h:20:14: note: Destructor in derived class
    virtual ~DerivativeSensor() {}
             ^
80/300 files checked 24% done
Checking sensors/opticalflow.cpp ...
sensors/irsensor.h:47:5: style: Class 'IRSensor' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    IRSensor(double exponent = 1, double size = 0.05, double range = 2,
    ^
sensors/physicalsensor.h:39:14: style: The destructor '~PhysicalSensor' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual ~PhysicalSensor() {}
             ^
sensors/sensor.h:49:14: note: Virtual destructor in base class
    virtual ~Sensor() {}
             ^
sensors/physicalsensor.h:39:14: note: Destructor in derived class
    virtual ~PhysicalSensor() {}
             ^
sensors/raysensor.h:67:6: style: The destructor '~RaySensor' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    ~RaySensor();
     ^
sensors/physicalsensor.h:39:14: note: Virtual destructor in base class
    virtual ~PhysicalSensor() {}
             ^
sensors/raysensor.h:67:6: note: Destructor in derived class
    ~RaySensor();
     ^
81/300 files checked 24% done
Checking sensors/rangeFinder.cpp ...
sensors/opticalflow.h:29:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
sensors/raysensorbank.h:27:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
sensors/rangeFinder.h:7:0: information: Include file: <selforg/types.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/types.h>
^
sensors/rangeFinder.h:8:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
sensors/rangeFinder.h:10:0: information: Include file: <list> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <list>
^
sensors/opticalflow.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
sensors/rangeFinder.h:22:5: warning: Member variable 'RangeFinder::own' is not initialized in the constructor. [uninitMemberVar]
    RangeFinder(){};
    ^
82/300 files checked 24% done
Checking sensors/raysensor.cpp ...
robots/vierbeiner.cpp:44:15: warning: Member variable 'VierBeiner::trunk' is not initialized in the constructor. [uninitMemberVar]
  VierBeiner::VierBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
robots/vierbeiner.cpp:44:15: warning: Member variable 'VierBeiner::headtrans' is not initialized in the constructor. [uninitMemberVar]
  VierBeiner::VierBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
robots/vierbeiner.cpp:44:15: warning: Member variable 'VierBeiner::bigboxtransform' is not initialized in the constructor. [uninitMemberVar]
  VierBeiner::VierBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
robots/vierbeiner.cpp:44:15: warning: Member variable 'VierBeiner::neck' is not initialized in the constructor. [uninitMemberVar]
  VierBeiner::VierBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
robots/vierbeiner.cpp:44:15: warning: Member variable 'VierBeiner::tail' is not initialized in the constructor. [uninitMemberVar]
  VierBeiner::VierBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
robots/vierbeiner.cpp:44:15: warning: Member variable 'VierBeiner::eye_r_trans' is not initialized in the constructor. [uninitMemberVar]
  VierBeiner::VierBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
robots/vierbeiner.cpp:44:15: warning: Member variable 'VierBeiner::eye_l_trans' is not initialized in the constructor. [uninitMemberVar]
  VierBeiner::VierBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
robots/vierbeiner.cpp:44:15: warning: Member variable 'VierBeiner::ear_l_trans' is not initialized in the constructor. [uninitMemberVar]
  VierBeiner::VierBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
robots/vierbeiner.cpp:44:15: warning: Member variable 'VierBeiner::ear_r_trans' is not initialized in the constructor. [uninitMemberVar]
  VierBeiner::VierBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
robots/vierbeiner.cpp:44:15: warning: Member variable 'VierBeiner::mouth_trans' is not initialized in the constructor. [uninitMemberVar]
  VierBeiner::VierBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
robots/vierbeiner.cpp:348:14: style: The scope of the variable 'l3' can be reduced. [variableScope]
      double l3 = n<2 ? conf.legLength*0.25 : 0;  // front legs have no feet
             ^
robots/vierbeiner.cpp:350:14: style: The scope of the variable 'ankleangle' can be reduced. [variableScope]
      double ankleangle = n<2 ? -M_PI/3 : 0;
             ^
robots/vierbeiner.cpp:351:14: style: The scope of the variable 'anklelowstop' can be reduced. [variableScope]
      double anklelowstop = -M_PI/5;
             ^
robots/vierbeiner.cpp:352:14: style: The scope of the variable 'anklehighstop' can be reduced. [variableScope]
      double anklehighstop = M_PI/3;
             ^
sensors/opticalflow.cpp:42:16: warning: Member variable 'OpticalFlow::maxShiftX' is not initialized in the constructor. [uninitMemberVar]
  OpticalFlow::OpticalFlow(OpticalFlowConf conf)
               ^
sensors/opticalflow.cpp:42:16: warning: Member variable 'OpticalFlow::maxShiftY' is not initialized in the constructor. [uninitMemberVar]
  OpticalFlow::OpticalFlow(OpticalFlowConf conf)
               ^
sensors/opticalflow.cpp:42:16: warning: Member variable 'OpticalFlow::width' is not initialized in the constructor. [uninitMemberVar]
  OpticalFlow::OpticalFlow(OpticalFlowConf conf)
               ^
sensors/opticalflow.cpp:42:16: warning: Member variable 'OpticalFlow::height' is not initialized in the constructor. [uninitMemberVar]
  OpticalFlow::OpticalFlow(OpticalFlowConf conf)
               ^
sensors/opticalflow.h:74:5: style: Class 'OpticalFlow' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    OpticalFlow(OpticalFlowConf conf = getDefaultConf());
    ^
sensors/opticalflow.h:101:17: style: The function 'getSensorNumber' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual int getSensorNumber() const {
                ^
sensors/camerasensor.h:73:17: note: Virtual function in base class
    virtual int getSensorNumber() const  override = 0;
                ^
sensors/opticalflow.h:101:17: note: Function in derived class
    virtual int getSensorNumber() const {
                ^
robots/vierbeiner.cpp:160:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
robots/vierbeiner.cpp:163:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
robots/vierbeiner.cpp:473:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                          ^
robots/vierbeiner.cpp:477:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                                ^
83/300 files checked 25% done
Checking sensors/raysensorbank.cpp ...
sensors/opticalflow.cpp:49:40: style: Variable 'conf.maxFlow' is assigned a value that is never used. [unreadVariable]
    if(conf.maxFlow > 0.4) conf.maxFlow=0.4;
                                       ^
84/300 files checked 25% done
sensors/raysensorbank.cpp:25:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
sensors/raysensorbank.cpp:26:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
sensors/raysensorbank.cpp:27:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
Checking sensors/relativepositionsensor.cpp ...
sensors/raysensor.cpp:34:25: style: C-style pointer casting [cstyleCast]
    RaySensor* sensor = (RaySensor*)userdata;
                        ^
sensors/raysensor.cpp:30:43: style: Parameter 'params' can be declared as reference to const. However it seems that 'rayCollCallback' is a callback function, if 'params' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
  int rayCollCallback(dSurfaceParameters& params, GlobalData& globaldata, void *userdata,
                                          ^
sensors/raysensor.cpp:95:47: note: You might need to cast the function pointer here
    transform->substance.setCollisionCallback(rayCollCallback,this);
                                              ^
sensors/raysensor.cpp:30:43: note: Parameter 'params' can be declared as reference to const
  int rayCollCallback(dSurfaceParameters& params, GlobalData& globaldata, void *userdata,
                                          ^
sensors/raysensor.cpp:30:63: style: Parameter 'globaldata' can be declared as reference to const. However it seems that 'rayCollCallback' is a callback function, if 'globaldata' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
  int rayCollCallback(dSurfaceParameters& params, GlobalData& globaldata, void *userdata,
                                                              ^
sensors/raysensor.cpp:95:47: note: You might need to cast the function pointer here
    transform->substance.setCollisionCallback(rayCollCallback,this);
                                              ^
sensors/raysensor.cpp:30:63: note: Parameter 'globaldata' can be declared as reference to const
  int rayCollCallback(dSurfaceParameters& params, GlobalData& globaldata, void *userdata,
                                                              ^
sensors/raysensor.cpp:31:32: style: Parameter 'contacts' can be declared as pointer to const. However it seems that 'rayCollCallback' is a callback function, if 'contacts' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
                     dContact* contacts, int numContacts,
                               ^
sensors/raysensor.cpp:95:47: note: You might need to cast the function pointer here
    transform->substance.setCollisionCallback(rayCollCallback,this);
                                              ^
sensors/raysensor.cpp:31:32: note: Parameter 'contacts' can be declared as pointer to const
                     dContact* contacts, int numContacts,
                               ^
sensors/relativepositionsensor.cpp:25:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
85/300 files checked 25% done
sensors/relativepositionsensor.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking sensors/soundsensor.cpp ...
sensors/soundsensor.cpp:25:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
sensors/soundsensor.cpp:26:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
sensors/raysensorbank.h:92:18: style: Virtual function 'clear' is called from destructor '~RaySensorBank()' at line 40. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void clear() override;
                 ^
sensors/raysensorbank.cpp:40:5: note: Calling clear
    clear();
    ^
sensors/raysensorbank.h:92:18: note: clear is a virtual function
    virtual void clear() override;
                 ^
sensors/relativepositionsensor.h:44:14: style: The destructor '~RelativePositionSensor' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual ~RelativePositionSensor() {}
             ^
sensors/sensor.h:49:14: note: Virtual destructor in base class
    virtual ~Sensor() {}
             ^
sensors/relativepositionsensor.h:44:14: note: Destructor in derived class
    virtual ~RelativePositionSensor() {}
             ^
86/300 files checked 25% done
87/300 files checked 26% done
Checking sensors/speedsensor.cpp ...
sensors/speedsensor.cpp:25:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
sensors/speedsensor.cpp:26:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
Checking sensors/torquesensor.cpp ...
sensors/torquesensor.cpp:25:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
sensors/torquesensor.h:28:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
sensors/speedsensor.h:49:5: style: Class 'SpeedSensor' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    SpeedSensor(double maxSpeed, Mode mode = Translational, short dimensions = X | Y | Z );
    ^
sensors/speedsensor.h:50:14: style: The destructor '~SpeedSensor' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual ~SpeedSensor() {}
             ^
sensors/sensor.h:49:14: note: Virtual destructor in base class
    virtual ~Sensor() {}
             ^
sensors/speedsensor.h:50:14: note: Destructor in derived class
    virtual ~SpeedSensor() {}
             ^
sensors/soundsensor.h:62:17: style: Virtual function 'getSensorNumber' is called from constructor 'SoundSensor(Dimensions dim=Z,Measure measure=Angle,int segments=1,int levels=1,double maxDistance=50,double noisestrength=0.1)' at line 39. Dynamic binding is not used. [virtualCallInConstructor]
    virtual int getSensorNumber() const  override;
                ^
sensors/soundsensor.cpp:39:15: note: Calling getSensorNumber
    int len = getSensorNumber();
              ^
sensors/soundsensor.h:62:17: note: getSensorNumber is a virtual function
    virtual int getSensorNumber() const  override;
                ^
sensors/soundsensor.h:51:5: style: Class 'SoundSensor' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    SoundSensor(Dimensions dim = Z, Measure measure = Angle,
    ^
88/300 files checked 26% done
sensors/soundsensor.cpp:73:45: style: C-style pointer casting [cstyleCast]
        if(dist<maxDistance && s->sender != (void*)own){
                                            ^
sensors/torquesensor.h:44:5: style: Class 'TorqueSensor' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    TorqueSensor(double maxtorque = 1.0, int avg = 1);
    ^
sensors/soundsensor.cpp:76:18: style: Local variable 'len' shadows outer variable [shadowVariable]
          double len = sqrt(x*x + y*y);
                 ^
sensors/soundsensor.cpp:57:9: note: Shadowed declaration
    int len = getSensorNumber();
        ^
sensors/soundsensor.cpp:76:18: note: Shadow variable
          double len = sqrt(x*x + y*y);
                 ^
Checking simulation.cpp ...
89/300 files checked 26% done
90/300 files checked 26% done
Checking simulations/MI_Simu/main.cpp ...
Checking simulations/arm2segm/main.cpp ...
simulations/arm2segm/main.cpp:60:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/MI_Simu/main.cpp:95:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/arm2segm/main.cpp:62:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/MI_Simu/main.cpp:97:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/arm2segm/main.cpp:63:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/MI_Simu/main.cpp:98:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/arm2segm/main.cpp:64:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/MI_Simu/main.cpp:100:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/arm2segm/main.cpp:65:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/MI_Simu/main.cpp:101:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/arm2segm/main.cpp:66:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/MI_Simu/main.cpp:102:0: information: Include file: <ode_robots/passivecapsule.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivecapsule.h>
^
simulations/arm2segm/main.cpp:68:0: information: Include file: <ode_robots/arm2segm.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/arm2segm.h>
^
simulations/MI_Simu/main.cpp:104:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/arm2segm/main.cpp:70:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/MI_Simu/main.cpp:105:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/arm2segm/main.cpp:71:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/MI_Simu/main.cpp:106:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/MI_Simu/main.cpp:107:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/MI_Simu/main.cpp:108:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/MI_Simu/main.cpp:109:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/MI_Simu/main.cpp:110:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/MI_Simu/main.cpp:112:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/MI_Simu/main.cpp:114:0: information: Include file: <ode_robots/hurlingsnake.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/hurlingsnake.h>
^
simulations/MI_Simu/main.cpp:115:0: information: Include file: <ode_robots/schlangeservo2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo2.h>
^
simulations/MI_Simu/main.cpp:116:0: information: Include file: <ode_robots/caterpillar.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/caterpillar.h>
^
simulations/MI_Simu/main.cpp:117:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/MI_Simu/main.cpp:118:0: information: Include file: <ode_robots/nimm4.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm4.h>
^
simulations/MI_Simu/main.cpp:119:0: information: Include file: <ode_robots/sphererobot3masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sphererobot3masses.h>
^
simulations/MI_Simu/main.cpp:120:0: information: Include file: <ode_robots/sliderwheelie.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sliderwheelie.h>
^
simulations/MI_Simu/main.cpp:121:0: information: Include file: <ode_robots/shortcircuit.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/shortcircuit.h>
^
simulations/MI_Simu/main.cpp:123:0: information: Include file: <selforg/discretecontrolleradapter.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/discretecontrolleradapter.h>
^
simulations/MI_Simu/main.cpp:124:0: information: Include file: <selforg/oneactivemultipassivecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/oneactivemultipassivecontroller.h>
^
simulations/MI_Simu/main.cpp:125:0: information: Include file: <selforg/mutualinformationcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/mutualinformationcontroller.h>
^
simulations/MI_Simu/main.cpp:127:0: information: Include file: <selforg/statistictools.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/statistictools.h>
^
simulations/MI_Simu/main.cpp:128:0: information: Include file: <selforg/statisticmeasure.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/statisticmeasure.h>
^
simulations/MI_Simu/main.cpp:130:0: information: Include file: <ode_robots/substance.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/substance.h>
^
simulations/MI_Simu/main.cpp:132:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/MI_Simu/main.cpp:133:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
simulations/arm2segm/main.cpp:94:6: style: C-style pointer casting [cstyleCast]
    ((OdeRobot* )vehicle)->place(Position(0,0,0));
     ^
91/300 files checked 26% done
simulation.cpp:24:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
simulation.cpp:25:0: information: Include file: <signal.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <signal.h>
^
simulation.cpp:26:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
simulation.cpp:27:0: information: Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdexcept>
^
simulation.cpp:28:0: information: Include file: <sys/stat.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/stat.h>
^
simulation.cpp:29:0: information: Include file: <sys/time.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/time.h>
^
Checking simulations/arm3d/main.cpp ...
simulation.cpp:30:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
simulation.cpp:31:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulation.cpp:32:0: information: Include file: <selforg/abstractwiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractwiring.h>
^
simulations/MI_Simu/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulation.cpp:34:0: information: Include file: <selforg/callbackable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/callbackable.h>
^
simulation.h:30:0: information: Include file: <osgViewer/Viewer> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/Viewer>
^
simulation.h:31:0: information: Include file: <osgViewer/ViewerEventHandlers> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/ViewerEventHandlers>
^
simulation.h:32:0: information: Include file: <osgGA/KeySwitchMatrixManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/KeySwitchMatrixManipulator>
^
simulation.h:33:0: information: Include file: <osg/Camera> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Camera>
^
simulation.h:36:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulation.h:38:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
simulation.h:39:0: information: Include file: <iterator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iterator>
^
simulation.h:40:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
simulation.cpp:41:0: information: Include file: <osg/Version> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Version>
^
simulation.cpp:42:0: information: Include file: <osg/ShapeDrawable> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/ShapeDrawable>
^
simulation.cpp:43:0: information: Include file: <osg/ArgumentParser> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/ArgumentParser>
^
simulation.cpp:44:0: information: Include file: <osg/AlphaFunc> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/AlphaFunc>
^
simulation.cpp:45:0: information: Include file: <osgUtil/SceneView> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgUtil/SceneView>
^
simulation.cpp:47:0: information: Include file: <osgDB/Registry> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgDB/Registry>
^
simulation.cpp:48:0: information: Include file: <osgDB/ReaderWriter> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgDB/ReaderWriter>
^
simulation.cpp:49:0: information: Include file: <osgDB/FileUtils> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgDB/FileUtils>
^
simulation.cpp:50:0: information: Include file: <osgGA/StateSetManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/StateSetManipulator>
^
simulation.cpp:53:0: information: Include file: <osgShadow/ShadowedScene> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgShadow/ShadowedScene>
^
osg/retinalviewer.h:24:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
osg/retinawindowsizehandler.h:23:0: information: Include file: <osgViewer/ViewerEventHandlers> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/ViewerEventHandlers>
^
osg/retinawindowsizehandler.h:24:0: information: Include file: <osgViewer/GraphicsWindow> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/GraphicsWindow>
^
osg/retinawindowsizehandler.h:25:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
simulation.cpp:72:0: information: Include file: <selforg/quickmp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/quickmp.h> // moved to selforg/utils
^
simulation.cpp:83:0: information: Include file: <pthread.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <pthread.h>
^
simulations/arm3d/main.cpp:29:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/arm3d/main.cpp:30:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
simulations/arm3d/main.cpp:33:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/arm3d/main.cpp:36:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/arm3d/main.cpp:39:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/arm3d/main.cpp:42:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/arm3d/main.cpp:45:0: information: Include file: <ode_robots/arm.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/arm.h>
^
simulations/arm3d/main.cpp:48:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/arm3d/main.cpp:50:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/arm3d/main.cpp:53:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/arm3d/main.cpp:54:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/arm3d/main.cpp:55:0: information: Include file: <selforg/invertmotorbigmodel.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorbigmodel.h>
^
simulations/arm3d/main.cpp:56:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/arm3d/main.cpp:57:0: information: Include file: <selforg/derbigcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derbigcontroller.h>
^
simulations/arm3d/main.cpp:132:6: style: C-style pointer casting [cstyleCast]
    ((OdeRobot*)arm)->place(Position(-0.7,0.9,0.01));
     ^
simulations/arm3d/main.cpp:212:44: style: Parameter 'globalData' can be declared as reference to const [constParameterReference]
  /*virtual*/ void addCallback(GlobalData& globalData, bool draw, bool pause, bool control)
                                           ^
Checking simulations/arm3d/main.cpp: BIGModel...
simulations/MI_Simu/main.cpp:165:3: warning: Member variable 'ThisSim::stats' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(double cInit=1.0) : cInit(cInit) {}
  ^
simulations/MI_Simu/main.cpp:165:3: warning: Member variable 'ThisSim::myNimm2' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(double cInit=1.0) : cInit(cInit) {}
  ^
simulations/MI_Simu/main.cpp:165:3: warning: Member variable 'ThisSim::mic' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(double cInit=1.0) : cInit(cInit) {}
  ^
simulations/MI_Simu/main.cpp:165:3: warning: Member variable 'ThisSim::convTest0' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(double cInit=1.0) : cInit(cInit) {}
  ^
simulations/MI_Simu/main.cpp:165:3: warning: Member variable 'ThisSim::convTest1' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(double cInit=1.0) : cInit(cInit) {}
  ^
simulations/MI_Simu/main.cpp:165:3: style: Class 'ThisSim' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ThisSim(double cInit=1.0) : cInit(cInit) {}
  ^
simulations/MI_Simu/main.cpp:197:19: style: Condition 'i<0' is always false [knownConditionTrueFalse]
    for(int i=0; i<0; i++)
                  ^
simulations/MI_Simu/main.cpp:197:15: note: Assignment 'i=0', assigned value is 0
    for(int i=0; i<0; i++)
              ^
simulations/MI_Simu/main.cpp:197:19: note: Condition 'i<0' is always false
    for(int i=0; i<0; i++)
                  ^
simulations/MI_Simu/main.cpp:220:19: style: Condition 'i<0' is always false [knownConditionTrueFalse]
    for(int i=0; i<0; i++)
                  ^
simulations/MI_Simu/main.cpp:220:15: note: Assignment 'i=0', assigned value is 0
    for(int i=0; i<0; i++)
              ^
simulations/MI_Simu/main.cpp:220:19: note: Condition 'i<0' is always false
    for(int i=0; i<0; i++)
                  ^
simulations/MI_Simu/main.cpp:329:15: warning: If resource allocation fails, then there is a possible null pointer dereference: file [nullPointerOutOfResources]
      fprintf(file, "#Logfile for measuring the Mutual Information\n");
              ^
simulations/MI_Simu/main.cpp:327:19: note: Assuming allocation function fails
      file = fopen(filename,"w");
                  ^
simulations/MI_Simu/main.cpp:327:19: note: Assignment 'file=fopen(filename,"w")', assigned value is 0
      file = fopen(filename,"w");
                  ^
simulations/MI_Simu/main.cpp:329:15: note: Null pointer dereference
      fprintf(file, "#Logfile for measuring the Mutual Information\n");
              ^
simulations/MI_Simu/main.cpp:330:15: warning: If resource allocation fails, then there is a possible null pointer dereference: file [nullPointerOutOfResources]
      fprintf(file,"timeSteps   = %li\n",globalData.sim_step);
              ^
simulations/MI_Simu/main.cpp:327:19: note: Assuming allocation function fails
      file = fopen(filename,"w");
                  ^
simulations/MI_Simu/main.cpp:327:19: note: Assignment 'file=fopen(filename,"w")', assigned value is 0
      file = fopen(filename,"w");
                  ^
simulations/MI_Simu/main.cpp:330:15: note: Null pointer dereference
      fprintf(file,"timeSteps   = %li\n",globalData.sim_step);
              ^
simulations/MI_Simu/main.cpp:331:15: warning: If resource allocation fails, then there is a possible null pointer dereference: file [nullPointerOutOfResources]
      fprintf(file,"time in min = %f\n",((float)globalData.sim_step)/100/60);
              ^
simulations/MI_Simu/main.cpp:327:19: note: Assuming allocation function fails
      file = fopen(filename,"w");
                  ^
simulations/MI_Simu/main.cpp:327:19: note: Assignment 'file=fopen(filename,"w")', assigned value is 0
      file = fopen(filename,"w");
                  ^
simulations/MI_Simu/main.cpp:331:15: note: Null pointer dereference
      fprintf(file,"time in min = %f\n",((float)globalData.sim_step)/100/60);
              ^
simulations/MI_Simu/main.cpp:332:15: warning: If resource allocation fails, then there is a possible null pointer dereference: file [nullPointerOutOfResources]
      fprintf(file,"MI sensor 0 = %f\n",mic->getMI(0));
              ^
simulations/MI_Simu/main.cpp:327:19: note: Assuming allocation function fails
      file = fopen(filename,"w");
                  ^
simulations/MI_Simu/main.cpp:327:19: note: Assignment 'file=fopen(filename,"w")', assigned value is 0
      file = fopen(filename,"w");
                  ^
simulations/MI_Simu/main.cpp:332:15: note: Null pointer dereference
      fprintf(file,"MI sensor 0 = %f\n",mic->getMI(0));
              ^
simulations/MI_Simu/main.cpp:333:15: warning: If resource allocation fails, then there is a possible null pointer dereference: file [nullPointerOutOfResources]
      fprintf(file,"MI sensor 1 = %f\n",mic->getMI(1));
              ^
simulations/MI_Simu/main.cpp:327:19: note: Assuming allocation function fails
      file = fopen(filename,"w");
                  ^
simulations/MI_Simu/main.cpp:327:19: note: Assignment 'file=fopen(filename,"w")', assigned value is 0
      file = fopen(filename,"w");
                  ^
simulations/MI_Simu/main.cpp:333:15: note: Null pointer dereference
      fprintf(file,"MI sensor 1 = %f\n",mic->getMI(1));
              ^
simulations/MI_Simu/main.cpp:246:8: style: C-style pointer casting [cstyleCast]
      ((OdeRobot*)myNimm2)->place(Pos ((r-1)*5,5,0));
       ^
simulations/MI_Simu/main.cpp:269:29: style: C-style pointer casting [cstyleCast]
      agent->addInspectable((Inspectable*)stats);
                            ^
simulations/MI_Simu/main.cpp:270:30: style: C-style pointer casting [cstyleCast]
      agent->addCallbackable((Callbackable*)stats);
                             ^
simulations/MI_Simu/main.cpp:230:15: style: The scope of the variable 'agent' can be reduced. [variableScope]
    OdeAgent* agent;
              ^
simulations/MI_Simu/main.cpp:231:21: style: The scope of the variable 'wiring' can be reduced. [variableScope]
    AbstractWiring* wiring;
                    ^
simulations/MI_Simu/main.cpp:232:25: style: The scope of the variable 'controller' can be reduced. [variableScope]
    AbstractController *controller;
                        ^
simulations/MI_Simu/main.cpp:314:32: style: Parameter 'globalData' can be declared as reference to const [constParameterReference]
  void addCallback(GlobalData& globalData, bool draw, bool pause, bool control)
                               ^
92/300 files checked 26% done
93/300 files checked 27% done
simulation.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/atomsimulation/main.cpp ...
Checking simulations/bambi/Archiv/skeleton.cpp ...
simulations/atomsimulation/main.cpp:47:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/atomsimulation/main.cpp:48:0: information: Include file: <drawstuff/drawstuff.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <drawstuff/drawstuff.h>
^
simulations/atomsimulation/main.cpp:49:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/atomsimulation/main.cpp:51:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/atomsimulation/main.cpp:52:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/atomsimulation/main.cpp:53:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/atomsimulation/main.cpp:54:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/atomsimulation/main.cpp:57:0: information: Include file: <ode_robots/closedplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/closedplayground.h>
^
simulations/atomsimulation/main.cpp:60:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/atomsimulation/main.cpp:63:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/atomsimulation/main.cpp:67:0: information: Include file: <ode_robots/atomsimRobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/atomsimRobot.h>
^
simulations/bambi/Archiv/skeleton.cpp:111:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/bambi/Archiv/skeleton.cpp:112:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/bambi/Archiv/skeleton.cpp:115:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/bambi/Archiv/skeleton.cpp:118:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/bambi/Archiv/skeleton.cpp:119:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/bambi/Archiv/skeleton.cpp:120:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
simulations/bambi/Archiv/skeleton.cpp:121:0: information: Include file: <ode_robots/angularmotor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/angularmotor.h>
^
simulations/bambi/Archiv/skeleton.cpp:122:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
simulations/bambi/Archiv/skeleton.cpp:123:0: information: Include file: <ode_robots/irsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/irsensor.h>
^
simulations/bambi/Archiv/skeleton.h:93:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
simulations/bambi/Archiv/skeleton.h:94:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
94/300 files checked 28% done
simulations/atomsimulation/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/bambi/Archiv/skeleton_notorsion.cpp ...
simulations/bambi/Archiv/skeleton.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/bambi/Archiv/skeleton_notorsion.cpp:111:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/bambi/Archiv/skeleton_notorsion.cpp:112:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/bambi/Archiv/skeleton_notorsion.cpp:115:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/bambi/Archiv/skeleton_notorsion.cpp:118:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/bambi/Archiv/skeleton_notorsion.cpp:119:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/bambi/Archiv/skeleton_notorsion.cpp:120:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
simulations/bambi/Archiv/skeleton_notorsion.cpp:121:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
simulations/bambi/Archiv/skeleton_notorsion.cpp:122:0: information: Include file: <ode_robots/irsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/irsensor.h>
^
simulation.cpp:568:5: warning: Return value of function std::end() is not used. [ignoredReturnValue]
    end(globalData);
    ^
osg/retinalviewer.h:43:5: style: Class 'RetinaLPZViewer' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    RetinaLPZViewer(osg::ArgumentParser& arguments)
    ^
osg/retinalviewer.h:46:5: style: Class 'RetinaLPZViewer' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    RetinaLPZViewer(const osgViewer::Viewer& viewer, const osg::CopyOp& copyop = osg::CopyOp::SHALLOW_COPY)
    ^
osg/retinalviewer.h:49:14: style: The destructor '~RetinaLPZViewer' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual ~RetinaLPZViewer() {}
             ^
osg/lpzviewer.h:46:14: note: Virtual destructor in base class
    virtual ~LPZViewer() override;
             ^
osg/retinalviewer.h:49:14: note: Destructor in derived class
    virtual ~RetinaLPZViewer() {}
             ^
simulations/bambi/Archiv/skeleton_notorsion.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulation.cpp:1163:11: style: C-style pointer casting [cstyleCast]
    nargv=(char**)malloc(sizeof(char*)*nargc);
          ^
simulation.cpp:1166:19: style: C-style pointer casting [cstyleCast]
    nargv[argc++]=(char*)"--window";
                  ^
simulation.cpp:1167:19: style: C-style pointer casting [cstyleCast]
    nargv[argc++]=(char*)"-1";
                  ^
simulation.cpp:1168:19: style: C-style pointer casting [cstyleCast]
    nargv[argc++]=(char*)"-1";
                  ^
simulation.cpp:1426:48: style: C-style pointer casting [cstyleCast]
      Primitive* p1 = dynamic_cast<Primitive*>((Primitive*)dGeomGetData (o1));
                                               ^
simulation.cpp:1427:48: style: C-style pointer casting [cstyleCast]
      Primitive* p2 = dynamic_cast<Primitive*>((Primitive*)dGeomGetData (o2));
                                               ^
simulation.cpp:584:10: style: Local variable 'run' shadows outer function [shadowFunction]
    bool run=true;
         ^
simulation.h:72:10: note: Shadowed declaration
    bool run(int argc, char** argv);
         ^
simulation.cpp:584:10: note: Shadow variable
    bool run=true;
         ^
simulation.cpp:1426:18: style: Variable 'p1' can be declared as pointer to const [constVariablePointer]
      Primitive* p1 = dynamic_cast<Primitive*>((Primitive*)dGeomGetData (o1));
                 ^
simulation.cpp:1427:18: style: Variable 'p2' can be declared as pointer to const [constVariablePointer]
      Primitive* p2 = dynamic_cast<Primitive*>((Primitive*)dGeomGetData (o2));
                 ^
osg/retinalviewer.h:97:26: style: Variable 'winWidth' is assigned a value that is never used. [unreadVariable]
            int winWidth = vp->width();
                         ^
osg/retinalviewer.h:98:27: style: Variable 'winHeight' is assigned a value that is never used. [unreadVariable]
            int winHeight = vp->height();
                          ^
osg/retinawindowsizehandler.h:65:45: style: Variable 'vp' is assigned a value that is never used. [unreadVariable]
                    const osg::Viewport* vp = camera->getViewport();
                                            ^
Checking simulation.cpp: PREFIX...
simulations/atomsimulation/main.cpp:375:24: style: Variable 'it' is reassigned a value before the old one has been used. [redundantAssignment]
              for ( it = robotersammlung.begin (); it != robotersammlung.end(); it++ )
                       ^
simulations/atomsimulation/main.cpp:372:18: note: it is assigned
              it = robotersammlung.begin ();
                 ^
simulations/atomsimulation/main.cpp:375:24: note: it is overwritten
              for ( it = robotersammlung.begin (); it != robotersammlung.end(); it++ )
                       ^
simulations/atomsimulation/main.cpp:444:49: style: Local variable 'agentit' shadows outer variable [shadowVariable]
              for ( vector<OdeAgent*>::iterator agentit = global.agents.begin (); agentit != global.agents.end (); agentit++ )
                                                ^
simulations/atomsimulation/main.cpp:442:43: note: Shadowed declaration
              vector<OdeAgent*>::iterator agentit = global.agents.begin ();
                                          ^
simulations/atomsimulation/main.cpp:444:49: note: Shadow variable
              for ( vector<OdeAgent*>::iterator agentit = global.agents.begin (); agentit != global.agents.end (); agentit++ )
                                                ^
simulations/atomsimulation/main.cpp:474:43: error: Iterator 'agentit' used after element has been erased. [eraseDereference]
                      global.agents.erase ( agentit );
                                          ^
simulations/atomsimulation/main.cpp:476:23: note: Iterator 'agentit' used after element has been erased.
                      agentit--;
                      ^
simulations/atomsimulation/main.cpp:474:43: note: Iterator 'agentit' used after element has been erased.
                      global.agents.erase ( agentit );
                                          ^
simulations/atomsimulation/main.cpp:170:87: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for(ObstacleList::iterator i=global.obstacles.begin(); i != global.obstacles.end(); i++){
                                                                                      ^
simulations/atomsimulation/main.cpp:174:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for(OdeAgentList::iterator i=global.agents.begin(); i != global.agents.end(); i++){
                                                                                ^
simulations/atomsimulation/main.cpp:375:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
              for ( it = robotersammlung.begin (); it != robotersammlung.end(); it++ )
                                                                                ^
simulations/atomsimulation/main.cpp:444:116: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
              for ( vector<OdeAgent*>::iterator agentit = global.agents.begin (); agentit != global.agents.end (); agentit++ )
                                                                                                                   ^
simulations/atomsimulation/main.cpp:447:128: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
                  for ( vector<atomsimRobot*>::iterator robotit = robotersammlung.begin (); robotit != robotersammlung.end (); robotit++ )
                                                                                                                               ^
simulations/atomsimulation/main.cpp:463:131: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
                      for ( vector<Configurable*>::iterator configit = global.configs.begin(); configit != global.configs.end (); configit++ )
                                                                                                                                  ^
simulations/atomsimulation/main.cpp:476:23: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
                      agentit--;
                      ^
95/300 files checked 28% done
Checking simulations/bambi/main.cpp ...
Checking simulation.cpp: QPROF...
simulations/bambi/main.cpp:158:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/bambi/main.cpp:161:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/bambi/main.cpp:164:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/bambi/main.cpp:168:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/bambi/main.cpp:171:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/bambi/main.cpp:174:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/bambi/main.cpp:175:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/bambi/skeleton.h:96:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
simulations/bambi/skeleton.h:97:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
simulations/bambi/main.cpp:182:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/bambi/main.cpp:184:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/bambi/main.cpp:185:0: information: Include file: <ode_robots/passivemesh.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivemesh.h>
^
simulations/bambi/main.cpp:186:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/bambi/main.cpp:187:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/bambi/main.cpp:191:0: information: Include file: <selforg/derbigcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derbigcontroller.h>
^
simulations/bambi/main.cpp:192:0: information: Include file: <selforg/dercontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/dercontroller.h>
^
simulations/bambi/main.cpp:193:0: information: Include file: <selforg/invertmotorbigmodel.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorbigmodel.h>
^
simulations/bambi/main.cpp:194:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/bambi/main.cpp:195:0: information: Include file: <selforg/elman.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/elman.h>
^
simulations/bambi/main.cpp:196:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/bambi/main.cpp:197:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/bambi/main.cpp:198:0: information: Include file: <selforg/derpseudosensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derpseudosensor.h>
^
simulations/bambi/main.cpp:199:0: information: Include file: <selforg/derlininvert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derlininvert.h>
^
simulations/bambi/main.cpp:202:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/bambi/main.cpp:203:0: information: Include file: <ode_robots/terrainground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/terrainground.h>
^
simulations/bambi/main.cpp:204:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/bambi/main.cpp:205:0: information: Include file: <ode_robots/sliderwheelie.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sliderwheelie.h>
^
simulations/bambi/main.cpp:206:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/bambi/main.cpp:207:0: information: Include file: <ode_robots/plattfussschlange.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/plattfussschlange.h>
^
simulations/bambi/main.cpp:208:0: information: Include file: <ode_robots/addsensors2robotadapter.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/addsensors2robotadapter.h>
^
simulations/bambi/main.cpp:210:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/bambi/main.cpp:212:0: information: Include file: <ode_robots/sliderwheelie.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sliderwheelie.h>
^
simulations/bambi/main.cpp:213:0: information: Include file: <ode_robots/schlangeservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo.h>
^
simulations/bambi/main.cpp:214:0: information: Include file: <ode_robots/schlangeservo2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo2.h>
^
simulations/bambi/main.cpp:215:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/bambi/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulation.cpp: __APPLE__...
simulations/bambi/main.cpp:342:7: style: Condition 'narrow' is always true [knownConditionTrueFalse]
   if(narrow){
      ^
simulations/bambi/main.cpp:265:19: note: Assignment 'narrow=true', assigned value is 1
    bool narrow = true;
                  ^
simulations/bambi/main.cpp:342:7: note: Condition 'narrow' is always true
   if(narrow){
      ^
simulations/bambi/main.cpp:379:11: style: Condition 'i>0' is always false [knownConditionTrueFalse]
     if (i>0) reckturner=false;
          ^
simulations/bambi/main.cpp:407:11: style: Condition 'i==0' is always true [knownConditionTrueFalse]
     if (i==0)
          ^
simulations/bambi/skeleton.h:262:24: style: Variable 'c.hip2JointLimit' is reassigned a value before the old one has been used. [redundantAssignment]
      c.hip2JointLimit = M_PI/30; // +- 6 degree
                       ^
simulations/bambi/skeleton.h:255:23: note: c.hip2JointLimit is assigned
      c.hip2JointLimit= 1.4;
                      ^
simulations/bambi/skeleton.h:262:24: note: c.hip2JointLimit is overwritten
      c.hip2JointLimit = M_PI/30; // +- 6 degree
                       ^
simulations/bambi/main.cpp:266:12: style: The scope of the variable 'widthground' can be reduced. [variableScope]
    double widthground = 10.85;// 100; //1.3;
           ^
simulations/bambi/main.cpp:267:12: style: The scope of the variable 'heightground' can be reduced. [variableScope]
    double heightground = .8;// 1.2;
           ^
simulations/bambi/main.cpp:343:18: style: Local variable 'playground' shadows outer variable [shadowVariable]
     Playground* playground = new Playground(odeHandle, osgHandle,osg::Vec3(widthground, 0.208, heightground));
                 ^
simulations/bambi/main.cpp:229:15: note: Shadowed declaration
  Playground* playground;
              ^
simulations/bambi/main.cpp:343:18: note: Shadow variable
     Playground* playground = new Playground(odeHandle, osgHandle,osg::Vec3(widthground, 0.208, heightground));
                 ^
simulations/bambi/main.cpp:774:13: style: Local variable 'height' shadows outer variable [shadowVariable]
     double height = 2;
            ^
simulations/bambi/main.cpp:672:11: note: Shadowed declaration
   double height =.1;
          ^
simulations/bambi/main.cpp:774:13: note: Shadow variable
     double height = 2;
            ^
96/300 files checked 29% done
Checking simulations/bambi/skeleton.cpp ...
simulations/bambi/skeleton.cpp:114:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/bambi/skeleton.cpp:115:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/bambi/skeleton.cpp:118:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/bambi/skeleton.cpp:121:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/bambi/skeleton.cpp:122:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/bambi/skeleton.cpp:123:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
simulations/bambi/skeleton.cpp:124:0: information: Include file: <ode_robots/angularmotor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/angularmotor.h>
^
simulations/bambi/skeleton.cpp:125:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
simulations/bambi/skeleton.cpp:126:0: information: Include file: <ode_robots/irsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/irsensor.h>
^
97/300 files checked 31% done
simulations/bambi/skeleton.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/barrel/homeostatic/invertnchannelfw.cpp ...
simulations/barrel/homeostatic/invertnchannelfw.h:32:0: information: Include file: <selforg/invertcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertcontroller.h>
^
simulations/barrel/homeostatic/invertnchannelfw.h:33:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/barrel/homeostatic/invertnchannelfw.h:35:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/barrel/homeostatic/invertnchannelfw.h:36:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/barrel/homeostatic/invertnchannelfw.h:38:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/bambi/Archiv/skeleton.cpp:135:13: warning: Member variable 'Skeleton::pelvisservo' is not initialized in the constructor. [uninitMemberVar]
  Skeleton::Skeleton(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
            ^
simulations/bambi/Archiv/skeleton.cpp:1127:13: warning: Either the condition 'o' is redundant or there is possible null pointer dereference: o. [nullPointerRedundantCheck]
    else if(o->getBody())
            ^
simulations/bambi/Archiv/skeleton.cpp:1125:9: note: Assuming that condition 'o' is not redundant
    if (o && o->getGeom())
        ^
simulations/bambi/Archiv/skeleton.cpp:1122:33: note: Assignment to 'o=objects[Head_comp]'
    const Primitive* o = objects[Head_comp];
                                ^
simulations/bambi/Archiv/skeleton.cpp:1122:24: note: o is assigned 'objects[Head_comp]' here.
    const Primitive* o = objects[Head_comp];
                       ^
simulations/bambi/Archiv/skeleton.cpp:1127:13: note: Null pointer dereference
    else if(o->getBody())
            ^
simulations/bambi/Archiv/skeleton.cpp:1138:13: warning: Either the condition 'o' is redundant or there is possible null pointer dereference: o. [nullPointerRedundantCheck]
    else if(o->getBody())
            ^
simulations/bambi/Archiv/skeleton.cpp:1136:9: note: Assuming that condition 'o' is not redundant
    if (o && o->getGeom())
        ^
simulations/bambi/Archiv/skeleton.cpp:1133:33: note: Assignment to 'o=objects[Trunk_comp]'
    const Primitive* o = objects[Trunk_comp];
                                ^
simulations/bambi/Archiv/skeleton.cpp:1133:24: note: o is assigned 'objects[Trunk_comp]' here.
    const Primitive* o = objects[Trunk_comp];
                       ^
simulations/bambi/Archiv/skeleton.cpp:1138:13: note: Null pointer dereference
    else if(o->getBody())
            ^
simulations/bambi/Archiv/skeleton.cpp:1113:51: style: Same expression in both branches of ternary operator. [duplicateExpressionTernary]
        (*i)->setMinMax(fst? -conf.backJointLimit : -conf.backJointLimit,
                                                  ^
simulations/bambi/Archiv/skeleton.h:259:24: style: Variable 'c.hip2JointLimit' is reassigned a value before the old one has been used. [redundantAssignment]
      c.hip2JointLimit = M_PI/30; // +- 6 degree
                       ^
simulations/bambi/Archiv/skeleton.h:252:23: note: c.hip2JointLimit is assigned
      c.hip2JointLimit= 1.4;
                      ^
simulations/bambi/Archiv/skeleton.h:259:24: note: c.hip2JointLimit is overwritten
      c.hip2JointLimit = M_PI/30; // +- 6 degree
                       ^
simulations/bambi/Archiv/skeleton.cpp:437:17: style: The scope of the variable 'bj' can be reduced. [variableScope]
    BallJoint*  bj;
                ^
simulations/barrel/homeostatic/invertnchannelfw.cpp:35:19: warning: Member variable 'InvertnchannelFw::number_channels' is not initialized in the constructor. [uninitMemberVar]
InvertnchannelFw::InvertnchannelFw(int _buffersize, bool _update_only_1/*=false*/)
                  ^
simulations/barrel/homeostatic/invertnchannelfw.h:50:3: style: Class 'InvertnchannelFw' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  InvertnchannelFw(int _buffersize, bool _update_only_1=false);
  ^
simulations/barrel/homeostatic/invertnchannelfw.cpp:52:24: style: Variable 'randGen' is assigned a value that is never used. [unreadVariable]
  if(!randGen) randGen = new RandGen(); // this gives a small memory leak
                       ^
98/300 files checked 31% done
Checking simulations/barrel/homeostatic/main.cpp ...
simulations/barrel/homeostatic/main.cpp:125:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/barrel/homeostatic/main.cpp:127:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/barrel/homeostatic/main.cpp:128:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/barrel/homeostatic/main.cpp:129:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/barrel/homeostatic/main.cpp:130:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/barrel/homeostatic/main.cpp:131:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/barrel/homeostatic/main.cpp:133:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/barrel/homeostatic/main.cpp:134:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/barrel/homeostatic/main.cpp:135:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/barrel/homeostatic/main.cpp:136:0: information: Include file: <selforg/universalcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/universalcontroller.h>
^
simulations/barrel/homeostatic/main.cpp:137:0: information: Include file: <selforg/ffnncontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/ffnncontroller.h>
^
simulations/barrel/homeostatic/main.cpp:138:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/barrel/homeostatic/main.cpp:139:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/barrel/homeostatic/main.cpp:140:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/barrel/homeostatic/main.cpp:141:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/bambi/Archiv/skeleton.cpp:404:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
simulations/barrel/homeostatic/main.cpp:143:0: information: Include file: <ode_robots/barrel2masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/barrel2masses.h>
^
simulations/bambi/Archiv/skeleton.cpp:407:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
simulations/barrel/homeostatic/main.cpp:144:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/bambi/Archiv/skeleton.cpp:1024:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                          ^
simulations/barrel/homeostatic/main.cpp:145:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/bambi/Archiv/skeleton.cpp:1029:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                                ^
99/300 files checked 32% done
Checking simulations/barrel/main.cpp ...
simulations/barrel/homeostatic/main.cpp:179:8: style: Condition 'normalplayground' is always false [knownConditionTrueFalse]
    if(normalplayground){
       ^
simulations/barrel/homeostatic/main.cpp:169:27: note: Assignment 'normalplayground=false', assigned value is 0
    bool normalplayground=false;
                          ^
simulations/barrel/homeostatic/main.cpp:179:8: note: Condition 'normalplayground' is always false
    if(normalplayground){
       ^
simulations/barrel/homeostatic/main.cpp:222:19: style: Condition 'i<num_barrels_test' is always false [knownConditionTrueFalse]
    for(int i=0; i< num_barrels_test; i++){
                  ^
simulations/barrel/homeostatic/main.cpp:222:15: note: Assignment 'i=0', assigned value is 0
    for(int i=0; i< num_barrels_test; i++){
              ^
simulations/barrel/homeostatic/main.cpp:165:26: note: Assignment 'num_barrels_test=0', assigned value is 0
    int num_barrels_test=0;
                         ^
simulations/barrel/homeostatic/main.cpp:222:19: note: Condition 'i<num_barrels_test' is always false
    for(int i=0; i< num_barrels_test; i++){
                  ^
simulations/barrel/main.cpp:25:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/barrel/main.cpp:27:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/barrel/main.cpp:28:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/barrel/main.cpp:29:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/barrel/main.cpp:30:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/barrel/main.cpp:31:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/barrel/main.cpp:34:0: information: Include file: <selforg/sox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sox.h>
^
simulations/barrel/main.cpp:35:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/barrel/main.cpp:36:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/barrel/main.cpp:37:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/barrel/main.cpp:38:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/barrel/main.cpp:39:0: information: Include file: <selforg/ffnncontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/ffnncontroller.h>
^
simulations/barrel/main.cpp:40:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/barrel/main.cpp:41:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/barrel/homeostatic/main.cpp:158:7: style: class member 'ThisSim::useReinforcement' is never used. [unusedStructMember]
  int useReinforcement;
      ^
simulations/barrel/main.cpp:42:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/barrel/main.cpp:43:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/barrel/main.cpp:45:0: information: Include file: <ode_robots/barrel2masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/barrel2masses.h>
^
simulations/barrel/main.cpp:46:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/barrel/main.cpp:47:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
100/300 files checked 33% done
Checking simulations/bigmodel/main.cpp ...
simulations/barrel/main.cpp:87:8: style: Condition 'normalplayground' is always false [knownConditionTrueFalse]
    if(normalplayground){
       ^
simulations/barrel/main.cpp:73:27: note: Assignment 'normalplayground=false', assigned value is 0
    bool normalplayground=false;
                          ^
simulations/barrel/main.cpp:87:8: note: Condition 'normalplayground' is always false
    if(normalplayground){
       ^
simulations/barrel/main.cpp:147:19: style: Condition 'i<num_barrels_test' is always false [knownConditionTrueFalse]
    for(int i=0; i< num_barrels_test; i++){
                  ^
simulations/barrel/main.cpp:147:15: note: Assignment 'i=0', assigned value is 0
    for(int i=0; i< num_barrels_test; i++){
              ^
simulations/barrel/main.cpp:68:26: note: Assignment 'num_barrels_test=0', assigned value is 0
    int num_barrels_test=0;
                         ^
simulations/barrel/main.cpp:147:19: note: Condition 'i<num_barrels_test' is always false
    for(int i=0; i< num_barrels_test; i++){
                  ^
simulations/bigmodel/main.cpp:49:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/bigmodel/main.cpp:52:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/bigmodel/main.cpp:55:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/bigmodel/main.cpp:58:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/bigmodel/main.cpp:61:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/barrel/main.cpp:59:7: style: class member 'ThisSim::useReinforcement' is never used. [unusedStructMember]
  int useReinforcement;
      ^
simulations/bigmodel/main.cpp:64:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/bigmodel/main.cpp:67:0: information: Include file: <ode_robots/barrel2masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/barrel2masses.h>
^
simulations/bigmodel/main.cpp:68:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/bigmodel/main.cpp:69:0: information: Include file: <ode_robots/nimm4.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm4.h>
^
simulations/bigmodel/main.cpp:70:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/bigmodel/main.cpp:71:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
101/300 files checked 33% done
simulations/bigmodel/main.cpp:74:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/bigmodel/main.cpp:76:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/bigmodel/main.cpp:81:0: information: Include file: <selforg/invertmotorbigmodel.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorbigmodel.h>
^
simulations/bigmodel/main.cpp:82:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/bigmodel/main.cpp:83:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
Checking simulations/caterpillar/main.cpp ...
simulations/bigmodel/main.cpp:192:11: style: The scope of the variable 'f' can be reduced. [variableScope]
    FILE* f;
          ^
102/300 files checked 33% done
simulations/caterpillar/main.cpp:58:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/caterpillar/main.cpp:60:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/caterpillar/main.cpp:61:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/caterpillar/main.cpp:62:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
Checking simulations/clutteredplayground/main.cpp ...
simulations/caterpillar/main.cpp:64:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/caterpillar/main.cpp:65:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/caterpillar/main.cpp:66:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/caterpillar/main.cpp:68:0: information: Include file: <ode_robots/caterpillar.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/caterpillar.h>
^
simulations/clutteredplayground/main.cpp:104:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/clutteredplayground/main.cpp:107:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/clutteredplayground/main.cpp:110:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/clutteredplayground/main.cpp:113:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/clutteredplayground/main.cpp:116:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/clutteredplayground/main.cpp:119:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/clutteredplayground/main.cpp:120:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/clutteredplayground/main.cpp:123:0: information: Include file: <ode_robots/sphererobot3masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sphererobot3masses.h>
^
simulations/clutteredplayground/main.cpp:124:0: information: Include file: <ode_robots/schlangeservo2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo2.h>
^
simulations/clutteredplayground/main.cpp:127:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/clutteredplayground/main.cpp:128:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/clutteredplayground/main.cpp:131:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/clutteredplayground/main.cpp:133:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/clutteredplayground/main.cpp:135:0: information: Include file: <ode_robots/passivecapsule.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivecapsule.h>
^
simulations/clutteredplayground/main.cpp:138:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/clutteredplayground/main.cpp:139:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/clutteredplayground/main.cpp:142:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
simulations/caterpillar/main.cpp:116:6: style: C-style pointer casting [cstyleCast]
    ((OdeRobot*) myCaterPillar)->place(Pos(-5,-5,0.2));
     ^
103/300 files checked 33% done
simulations/clutteredplayground/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/dblcontingency/main.cpp ...
simulations/dblcontingency/main.cpp:48:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/dblcontingency/main.cpp:51:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/dblcontingency/main.cpp:52:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h> // arena
^
simulations/dblcontingency/main.cpp:53:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>  // passive box
^
simulations/dblcontingency/main.cpp:56:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/dblcontingency/main.cpp:57:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/dblcontingency/main.cpp:58:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/dblcontingency/main.cpp:59:0: information: Include file: <selforg/dercontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/dercontroller.h>
^
simulations/dblcontingency/main.cpp:60:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/dblcontingency/main.cpp:63:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h> // include noisegenerator (used for adding noise to sensorvalues)
^
simulations/dblcontingency/main.cpp:64:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>  // simple wiring
^
simulations/dblcontingency/main.cpp:65:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/dblcontingency/main.cpp:68:0: information: Include file: <ode_robots/forcedsphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/forcedsphere.h>
^
simulations/dblcontingency/main.cpp:69:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/dblcontingency/main.cpp:70:0: information: Include file: <ode_robots/relativepositionsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/relativepositionsensor.h>
^
simulations/dblcontingency/main.cpp:71:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/dblcontingency/main.cpp:72:0: information: Include file: <ode_robots/soundsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/soundsensor.h>
^
simulations/dblcontingency/main.cpp:73:0: information: Include file: <ode_robots/speaker.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speaker.h>
^
simulations/dblcontingency/main.cpp:133:82: style: Condition 'i==2' is always false [knownConditionTrueFalse]
      sphere1 = new ForcedSphere ( elast, osgHandle.changeColor(Color(i==0,i==1,i==2)),
                                                                                 ^
simulations/dblcontingency/main.cpp:135:8: style: C-style pointer casting [cstyleCast]
      ((OdeRobot*)sphere1)->place ( Pos( 2*i , 0 , 0.1 ));
       ^
simulations/dblcontingency/main.cpp:193:28: style: C-style pointer casting [cstyleCast]
        keepMatrixTraceUp(((InvertMotorNStep*)controllers[i])->C);
                           ^
simulations/dblcontingency/main.cpp:114:21: style: The scope of the variable 'wiring' can be reduced. [variableScope]
    AbstractWiring* wiring;
                    ^
simulations/dblcontingency/main.cpp:115:15: style: The scope of the variable 'agent' can be reduced. [variableScope]
    OdeAgent* agent;
              ^
simulations/dblcontingency/main.cpp:243:107: style: Parameter 'global' can be declared as reference to const [constParameterReference]
void playground_with_ramps_and_agents(const OdeHandle& odeHandle, const OsgHandle& osgHandle, GlobalData& global){
                                                                                                          ^
104/300 files checked 34% done
Checking simulations/deprivation/main.cpp ...
simulations/clutteredplayground/main.cpp:265:19: style: Condition 'i<0' is always false [knownConditionTrueFalse]
    for(int i=0; i<0; i++){
                  ^
simulations/clutteredplayground/main.cpp:265:15: note: Assignment 'i=0', assigned value is 0
    for(int i=0; i<0; i++){
              ^
simulations/clutteredplayground/main.cpp:265:19: note: Condition 'i<0' is always false
    for(int i=0; i<0; i++){
                  ^
simulations/deprivation/main.cpp:77:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/deprivation/main.cpp:79:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/deprivation/deprivation.h:54:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/deprivation/deprivation.h:55:0: information: Include file: <selforg/onelayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/onelayerffnn.h>
^
simulations/deprivation/deprivation.h:57:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/deprivation/deprivation.h:58:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
105/300 files checked 34% done
simulations/deprivation/deprivation.h:60:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/deprivation/main.cpp:81:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/deprivation/main.cpp:83:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
Checking simulations/der_zweibeiner/derskeleton.cpp ...
simulations/deprivation/deprivation.h:77:3: style: Class 'Deprivation' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Deprivation(MotorCallback motorCallback, ControllerCallback controllerCallback =0,
  ^
simulations/deprivation/deprivation.h:112:20: style: Local variable 'y' shadows outer variable [shadowVariable]
    matrix::Matrix y = InvertMotorNStep::calculateControllerValues(x_smooth);
                   ^
simulations/deprivation/main.cpp:128:8: note: Shadowed declaration
Matrix y(2,1, data);
       ^
simulations/deprivation/deprivation.h:112:20: note: Shadow variable
    matrix::Matrix y = InvertMotorNStep::calculateControllerValues(x_smooth);
                   ^
simulations/deprivation/main.cpp:93:10: style: Local variable 'y' shadows outer variable [shadowVariable]
  Matrix y(_dont_care.getM(),1);
         ^
simulations/deprivation/main.cpp:128:8: note: Shadowed declaration
Matrix y(2,1, data);
       ^
simulations/deprivation/main.cpp:93:10: note: Shadow variable
  Matrix y(_dont_care.getM(),1);
         ^
simulations/deprivation/main.cpp:119:10: style: Local variable 'y' shadows outer variable [shadowVariable]
  Matrix y(_dont_care.getM(),1);
         ^
simulations/deprivation/main.cpp:128:8: note: Shadowed declaration
Matrix y(2,1, data);
       ^
simulations/deprivation/main.cpp:119:10: note: Shadow variable
  Matrix y(_dont_care.getM(),1);
         ^
106/300 files checked 34% done
simulations/der_zweibeiner/derskeleton.cpp:50:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/der_zweibeiner/derskeleton.cpp:51:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/der_zweibeiner/derskeleton.cpp:54:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/der_zweibeiner/derskeleton.cpp:57:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/der_zweibeiner/derskeleton.cpp:58:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
Checking simulations/der_zweibeiner/main.cpp ...
simulations/der_zweibeiner/derskeleton.cpp:59:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
simulations/der_zweibeiner/main.cpp:84:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/der_zweibeiner/main.cpp:87:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/der_zweibeiner/main.cpp:90:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/der_zweibeiner/main.cpp:93:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/der_zweibeiner/main.cpp:96:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/der_zweibeiner/main.cpp:99:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/der_zweibeiner/skeleton.h:46:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
simulations/der_zweibeiner/main.cpp:106:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/der_zweibeiner/main.cpp:108:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/der_zweibeiner/main.cpp:109:0: information: Include file: <ode_robots/passivemesh.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivemesh.h>
^
simulations/der_zweibeiner/main.cpp:110:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/der_zweibeiner/main.cpp:114:0: information: Include file: <selforg/dercontroller/derbigcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/dercontroller/derbigcontroller.h>
^
simulations/der_zweibeiner/main.cpp:115:0: information: Include file: <selforg/dercontroller/dercontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/dercontroller/dercontroller.h>
^
simulations/der_zweibeiner/main.cpp:116:0: information: Include file: <selforg/invertmotorbigmodel.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorbigmodel.h>
^
simulations/der_zweibeiner/main.cpp:117:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/der_zweibeiner/main.cpp:118:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/der_zweibeiner/main.cpp:119:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/der_zweibeiner/main.cpp:122:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/der_zweibeiner/main.cpp:123:0: information: Include file: <ode_robots/terrainground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/terrainground.h>
^
simulations/der_zweibeiner/main.cpp:124:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/der_zweibeiner/main.cpp:125:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/der_zweibeiner/main.cpp:126:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/der_zweibeiner/main.cpp:127:0: information: Include file: <ode_robots/sliderwheelie.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sliderwheelie.h>
^
simulations/der_zweibeiner/main.cpp:128:0: information: Include file: <ode_robots/sphererobot3masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sphererobot3masses.h>
^
simulations/der_zweibeiner/main.cpp:129:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/der_zweibeiner/main.cpp:132:0: information: Include file: <ode_robots/sliderwheelie.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sliderwheelie.h>
^
simulations/der_zweibeiner/main.cpp:133:0: information: Include file: <ode_robots/schlangeservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo.h>
^
simulations/der_zweibeiner/main.cpp:134:0: information: Include file: <ode_robots/schlangeservo2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo2.h>
^
simulations/der_zweibeiner/main.cpp:135:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/der_zweibeiner/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/der_zweibeiner/derskeleton.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/bambi/Archiv/skeleton_notorsion.cpp:134:13: warning: Member variable 'Skeleton::pelvisservo' is not initialized in the constructor. [uninitMemberVar]
  Skeleton::Skeleton(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
            ^
simulations/bambi/Archiv/skeleton_notorsion.cpp:1070:13: warning: Either the condition 'o' is redundant or there is possible null pointer dereference: o. [nullPointerRedundantCheck]
    else if(o->getBody())
            ^
simulations/bambi/Archiv/skeleton_notorsion.cpp:1068:9: note: Assuming that condition 'o' is not redundant
    if (o && o->getGeom())
        ^
simulations/bambi/Archiv/skeleton_notorsion.cpp:1065:33: note: Assignment to 'o=objects[Head_comp]'
    const Primitive* o = objects[Head_comp];
                                ^
simulations/bambi/Archiv/skeleton_notorsion.cpp:1065:24: note: o is assigned 'objects[Head_comp]' here.
    const Primitive* o = objects[Head_comp];
                       ^
simulations/bambi/Archiv/skeleton_notorsion.cpp:1070:13: note: Null pointer dereference
    else if(o->getBody())
            ^
simulations/bambi/Archiv/skeleton_notorsion.cpp:1081:13: warning: Either the condition 'o' is redundant or there is possible null pointer dereference: o. [nullPointerRedundantCheck]
    else if(o->getBody())
            ^
simulations/bambi/Archiv/skeleton_notorsion.cpp:1079:9: note: Assuming that condition 'o' is not redundant
    if (o && o->getGeom())
        ^
simulations/bambi/Archiv/skeleton_notorsion.cpp:1076:33: note: Assignment to 'o=objects[Trunk_comp]'
    const Primitive* o = objects[Trunk_comp];
                                ^
simulations/bambi/Archiv/skeleton_notorsion.cpp:1076:24: note: o is assigned 'objects[Trunk_comp]' here.
    const Primitive* o = objects[Trunk_comp];
                       ^
simulations/bambi/Archiv/skeleton_notorsion.cpp:1081:13: note: Null pointer dereference
    else if(o->getBody())
            ^
simulations/der_zweibeiner/main.cpp:359:12: warning: Opposite inner 'if' condition leads to a dead code block. [oppositeInnerCondition]
      if (i==0) {
           ^
simulations/der_zweibeiner/main.cpp:160:18: note: 'snakes' is assigned value '0' here.
    int snakes = 0;
                 ^
simulations/der_zweibeiner/main.cpp:345:19: note: outer condition: i<snakes
    for(int i=0; i<snakes; i++){
                  ^
simulations/der_zweibeiner/main.cpp:359:12: note: opposite inner condition: i==0
      if (i==0) {
           ^
simulations/der_zweibeiner/main.cpp:376:12: warning: Opposite inner 'if' condition leads to a dead code block. [oppositeInnerCondition]
      if (i==0) {
           ^
simulations/der_zweibeiner/main.cpp:160:18: note: 'snakes' is assigned value '0' here.
    int snakes = 0;
                 ^
simulations/der_zweibeiner/main.cpp:345:19: note: outer condition: i<snakes
    for(int i=0; i<snakes; i++){
                  ^
simulations/der_zweibeiner/main.cpp:376:12: note: opposite inner condition: i==0
      if (i==0) {
           ^
simulations/bambi/Archiv/skeleton_notorsion.cpp:435:17: style: The scope of the variable 'bj' can be reduced. [variableScope]
    BallJoint*  bj;
                ^
simulations/der_zweibeiner/main.cpp:320:19: style: Condition 'i<0' is always false [knownConditionTrueFalse]
    for(int i=0; i<0; i++){
                  ^
simulations/der_zweibeiner/main.cpp:320:15: note: Assignment 'i=0', assigned value is 0
    for(int i=0; i<0; i++){
              ^
simulations/der_zweibeiner/main.cpp:320:19: note: Condition 'i<0' is always false
    for(int i=0; i<0; i++){
                  ^
simulations/der_zweibeiner/skeleton.h:134:24: style: Variable 'c.hip2JointLimit' is reassigned a value before the old one has been used. [redundantAssignment]
      c.hip2JointLimit = M_PI/30; // +- 6 degree
                       ^
simulations/der_zweibeiner/skeleton.h:114:23: note: c.hip2JointLimit is assigned
      c.hip2JointLimit=0.05;
                      ^
simulations/der_zweibeiner/skeleton.h:134:24: note: c.hip2JointLimit is overwritten
      c.hip2JointLimit = M_PI/30; // +- 6 degree
                       ^
simulations/der_zweibeiner/main.cpp:249:23: style: Variable 'conf.anklePower' is reassigned a value before the old one has been used. [redundantAssignment]
      conf.anklePower = 10 * powerfactor;
                      ^
simulations/der_zweibeiner/main.cpp:247:22: note: conf.anklePower is assigned
      conf.anklePower= 10 * powerfactor;
                     ^
simulations/der_zweibeiner/main.cpp:249:23: note: conf.anklePower is overwritten
      conf.anklePower = 10 * powerfactor;
                      ^
simulations/der_zweibeiner/main.cpp:334:22: style: Local variable 's' shadows outer variable [shadowVariable]
      PassiveSphere* s =
                     ^
simulations/der_zweibeiner/main.cpp:148:13: note: Shadowed declaration
  Substance s;
            ^
simulations/der_zweibeiner/main.cpp:334:22: note: Shadow variable
      PassiveSphere* s =
                     ^
simulations/der_zweibeiner/main.cpp:494:14: style: Local variable 'height' shadows outer variable [shadowVariable]
      double height = 2;
             ^
simulations/der_zweibeiner/main.cpp:318:9: note: Shadowed declaration
 double height = 0.5;
        ^
simulations/der_zweibeiner/main.cpp:494:14: note: Shadow variable
      double height = 2;
             ^
107/300 files checked 35% done
Checking simulations/der_zweibeiner/skeleton.cpp ...
simulations/der_zweibeiner/derskeleton.cpp:71:13: warning: Member variable 'Skeleton::pelvisservo' is not initialized in the constructor. [uninitMemberVar]
  Skeleton::Skeleton(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
            ^
simulations/der_zweibeiner/derskeleton.h:129:24: style: Variable 'c.hip2JointLimit' is reassigned a value before the old one has been used. [redundantAssignment]
      c.hip2JointLimit = M_PI/30; // +- 6 degree
                       ^
simulations/der_zweibeiner/derskeleton.h:109:23: note: c.hip2JointLimit is assigned
      c.hip2JointLimit=0.05;
                      ^
simulations/der_zweibeiner/derskeleton.h:129:24: note: c.hip2JointLimit is overwritten
      c.hip2JointLimit = M_PI/30; // +- 6 degree
                       ^
simulations/der_zweibeiner/skeleton.cpp:50:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/der_zweibeiner/skeleton.cpp:51:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/der_zweibeiner/skeleton.cpp:54:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/der_zweibeiner/skeleton.cpp:57:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/der_zweibeiner/skeleton.cpp:58:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/der_zweibeiner/skeleton.cpp:59:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
simulations/der_zweibeiner/derskeleton.cpp:220:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
simulations/der_zweibeiner/derskeleton.cpp:223:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
simulations/der_zweibeiner/derskeleton.cpp:537:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                          ^
simulations/der_zweibeiner/derskeleton.cpp:542:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                                ^
108/300 files checked 36% done
simulations/bambi/Archiv/skeleton_notorsion.cpp:402:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
simulations/bambi/Archiv/skeleton_notorsion.cpp:405:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
simulations/bambi/Archiv/skeleton_notorsion.cpp:970:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                          ^
Checking simulations/der_zweibeiner/zweibeiner.cpp ...
simulations/bambi/Archiv/skeleton_notorsion.cpp:975:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                                ^
109/300 files checked 37% done
simulations/der_zweibeiner/zweibeiner.cpp:50:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/der_zweibeiner/zweibeiner.cpp:51:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/der_zweibeiner/zweibeiner.cpp:54:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
Checking simulations/diffusion/main.cpp ...
simulations/der_zweibeiner/zweibeiner.cpp:57:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/der_zweibeiner/zweibeiner.cpp:58:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/der_zweibeiner/zweibeiner.cpp:59:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
simulations/diffusion/main.cpp:40:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/diffusion/main.cpp:42:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/diffusion/main.cpp:43:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/diffusion/main.cpp:44:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/diffusion/main.cpp:46:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/diffusion/main.cpp:47:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/diffusion/main.cpp:48:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/diffusion/main.cpp:49:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/diffusion/main.cpp:50:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/diffusion/main.cpp:51:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/diffusion/main.cpp:52:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
simulations/diffusion/main.cpp:54:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
110/300 files checked 37% done
simulations/der_zweibeiner/skeleton.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/discus/main.cpp ...
simulations/discus/main.cpp:125:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/discus/main.cpp:127:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/discus/main.cpp:128:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/discus/main.cpp:129:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/discus/main.cpp:130:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/discus/main.cpp:131:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/discus/main.cpp:133:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/discus/main.cpp:134:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/discus/main.cpp:135:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/discus/main.cpp:136:0: information: Include file: <selforg/derlininvert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derlininvert.h>
^
simulations/discus/main.cpp:137:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/discus/main.cpp:139:0: information: Include file: <selforg/ffnncontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/ffnncontroller.h>
^
simulations/discus/main.cpp:140:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/discus/main.cpp:141:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/discus/main.cpp:142:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/discus/main.cpp:143:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/discus/main.cpp:144:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/discus/main.cpp:145:0: information: Include file: <selforg/elman.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/elman.h>
^
simulations/discus/main.cpp:147:0: information: Include file: <ode_robots/forcedsphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/forcedsphere.h>
^
simulations/discus/main.cpp:148:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/discus/main.cpp:149:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/discus/main.cpp:150:0: information: Include file: <ode_robots/discus.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/discus.h>
^
simulations/discus/main.cpp:185:8: style: Condition 'normalplayground' is always true [knownConditionTrueFalse]
    if(normalplayground){
       ^
simulations/discus/main.cpp:172:27: note: Assignment 'normalplayground=true', assigned value is 1
    bool normalplayground=true;
                          ^
simulations/discus/main.cpp:185:8: note: Condition 'normalplayground' is always true
    if(normalplayground){
       ^
simulations/der_zweibeiner/skeleton.cpp:71:13: warning: Member variable 'Skeleton::pelvisservo' is not initialized in the constructor. [uninitMemberVar]
  Skeleton::Skeleton(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
            ^
111/300 files checked 37% done
Checking simulations/entropy/main.cpp ...
simulations/entropy/main.cpp:147:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/entropy/main.cpp:149:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/entropy/main.cpp:150:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/entropy/main.cpp:152:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/entropy/main.cpp:154:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/entropy/main.cpp:156:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/entropy/main.cpp:157:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/entropy/main.cpp:158:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/entropy/main.cpp:160:0: information: Include file: <selforg/oneactivemultipassivecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/oneactivemultipassivecontroller.h>
^
simulations/entropy/main.cpp:161:0: information: Include file: <selforg/mutualinformationcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/mutualinformationcontroller.h>
^
simulations/entropy/main.cpp:163:0: information: Include file: <selforg/statistictools.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/statistictools.h>
^
simulations/entropy/main.cpp:164:0: information: Include file: <selforg/statisticmeasure.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/statisticmeasure.h>
^
simulations/entropy/main.cpp:165:0: information: Include file: <selforg/trackablemeasure.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/trackablemeasure.h>
^
simulations/entropy/main.cpp:166:0: information: Include file: <selforg/measureadapter.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/measureadapter.h>
^
simulations/entropy/main.cpp:168:0: information: Include file: <ode_robots/substance.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/substance.h>
^
simulations/entropy/main.cpp:170:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/entropy/main.cpp:171:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
simulations/der_zweibeiner/skeleton.cpp:220:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
simulations/der_zweibeiner/skeleton.cpp:223:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
simulations/der_zweibeiner/skeleton.cpp:576:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                          ^
simulations/der_zweibeiner/skeleton.cpp:581:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                                ^
simulations/entropy/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
112/300 files checked 38% done
simulations/der_zweibeiner/zweibeiner.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/formel1/demo_controller.cpp ...
simulations/formel1/demo_controller.cpp:55:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/formel1/demo_controller.cpp:56:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
simulations/formel1/demo_controller.cpp:57:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
simulations/formel1/demo_controller.h:58:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/formel1/demo_controller.cpp:64:17: warning: Member variable 'DemoController::t' is not initialized in the constructor. [uninitMemberVar]
DemoController::DemoController()
                ^
simulations/formel1/demo_controller.cpp:186:23: style: Expression is always true because 'else if' condition is opposite to previous condition at line 181. [multiCondition]
  else if(delta_force < 0.0) {
                      ^
simulations/formel1/demo_controller.cpp:181:18: note: first condition
  if(delta_force >= 0.0) {
                 ^
simulations/formel1/demo_controller.cpp:186:23: note: else if condition is opposite to first condition
  else if(delta_force < 0.0) {
                      ^
simulations/formel1/demo_controller.cpp:147:10: style: The scope of the variable 'max_rotate_speed' can be reduced. [variableScope]
  double max_rotate_speed = 6.0;
         ^
113/300 files checked 38% done
simulations/entropy/main.cpp:207:3: warning: Member variable 'ThisSim::stats' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(double cInit=.1, double binit=0.0) : cInit(cInit), bInit(binit)
  ^
simulations/entropy/main.cpp:207:3: warning: Member variable 'ThisSim::nimm2' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(double cInit=.1, double binit=0.0) : cInit(cInit), bInit(binit)
  ^
Checking simulations/formel1/main.cpp ...
simulations/entropy/main.cpp:207:3: warning: Member variable 'ThisSim::mic' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(double cInit=.1, double binit=0.0) : cInit(cInit), bInit(binit)
  ^
simulations/entropy/main.cpp:207:3: warning: Member variable 'ThisSim::connectRobots' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(double cInit=.1, double binit=0.0) : cInit(cInit), bInit(binit)
  ^
simulations/entropy/main.cpp:207:3: warning: Member variable 'ThisSim::convTest0' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(double cInit=.1, double binit=0.0) : cInit(cInit), bInit(binit)
  ^
simulations/entropy/main.cpp:207:3: warning: Member variable 'ThisSim::convTest1' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(double cInit=.1, double binit=0.0) : cInit(cInit), bInit(binit)
  ^
simulations/entropy/main.cpp:207:3: warning: Member variable 'ThisSim::convTest2' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(double cInit=.1, double binit=0.0) : cInit(cInit), bInit(binit)
  ^
simulations/entropy/main.cpp:207:3: warning: Member variable 'ThisSim::convTest3' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(double cInit=.1, double binit=0.0) : cInit(cInit), bInit(binit)
  ^
simulations/entropy/main.cpp:207:3: warning: Member variable 'ThisSim::convTest4' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(double cInit=.1, double binit=0.0) : cInit(cInit), bInit(binit)
  ^
simulations/entropy/main.cpp:207:3: warning: Member variable 'ThisSim::convTest5' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(double cInit=.1, double binit=0.0) : cInit(cInit), bInit(binit)
  ^
simulations/entropy/main.cpp:207:3: warning: Member variable 'ThisSim::trackableEntropy' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(double cInit=.1, double binit=0.0) : cInit(cInit), bInit(binit)
  ^
simulations/entropy/main.cpp:207:3: warning: Member variable 'ThisSim::trackableEntropySLOW' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(double cInit=.1, double binit=0.0) : cInit(cInit), bInit(binit)
  ^
simulations/entropy/main.cpp:207:3: style: Class 'ThisSim' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ThisSim(double cInit=.1, double binit=0.0) : cInit(cInit), bInit(binit)
  ^
simulations/formel1/main.cpp:69:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/formel1/main.cpp:70:0: information: Include file: <drawstuff/drawstuff.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <drawstuff/drawstuff.h>
^
simulations/formel1/main.cpp:71:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/formel1/main.cpp:73:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/formel1/main.cpp:74:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/formel1/main.cpp:75:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/formel1/main.cpp:76:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/formel1/main.cpp:78:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/formel1/main.cpp:79:0: information: Include file: <ode_robots/camera.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/camera.h>
^
simulations/formel1/simplecontroller.h:60:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/formel1/simplecontroller.h:61:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulations/formel1/main.cpp:153:25: style: Parameter 'global' can be declared as reference to const. However it seems that 'config' is a callback function, if 'global' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
void config(GlobalData& global){
                        ^
simulations/formel1/main.cpp:195:34: note: You might need to cast the function pointer here
  simulation_init(&start, &end, &config,&command);
                                 ^
simulations/formel1/main.cpp:153:25: note: Parameter 'global' can be declared as reference to const
void config(GlobalData& global){
                        ^
simulations/formel1/main.cpp:159:54: style: Parameter 'global' can be declared as reference to const. However it seems that 'command' is a callback function, if 'global' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
void command(const OdeHandle& odeHandle, GlobalData& global, int key){
                                                     ^
simulations/formel1/main.cpp:195:42: note: You might need to cast the function pointer here
  simulation_init(&start, &end, &config,&command);
                                         ^
simulations/formel1/main.cpp:159:54: note: Parameter 'global' can be declared as reference to const
void command(const OdeHandle& odeHandle, GlobalData& global, int key){
                                                     ^
simulations/formel1/main.cpp:139:93: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
        for(ObstacleList::iterator i=global.obstacles.begin(); i != global.obstacles.end(); i++){
                                                                                            ^
simulations/formel1/main.cpp:143:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for(OdeAgentList::iterator i=global.agents.begin(); i != global.agents.end(); i++){
                                                                                ^
114/300 files checked 38% done
simulations/entropy/main.cpp:507:11: warning: If resource allocation fails, then there is a possible null pointer dereference: file [nullPointerOutOfResources]
  fprintf(file,"%f, %f, %f, %f, %f, %f, %f, %f, %f, %f\n",cinit, binit,avg,mi,h_x,h_yx,loc_avg,mi_avg,h_x_avg,h_yx_avg);
          ^
simulations/entropy/main.cpp:506:15: note: Assuming allocation function fails
  file = fopen(filename,"a");
              ^
simulations/entropy/main.cpp:506:15: note: Assignment 'file=fopen(filename,"a")', assigned value is 0
  file = fopen(filename,"a");
              ^
simulations/entropy/main.cpp:507:11: note: Null pointer dereference
  fprintf(file,"%f, %f, %f, %f, %f, %f, %f, %f, %f, %f\n",cinit, binit,avg,mi,h_x,h_yx,loc_avg,mi_avg,h_x_avg,h_yx_avg);
          ^
simulations/entropy/main.cpp:327:33: style: C-style pointer casting [cstyleCast]
          agent->addInspectable((Inspectable*)stats);
                                ^
simulations/entropy/main.cpp:328:34: style: C-style pointer casting [cstyleCast]
          agent->addCallbackable((Callbackable*)stats);
                                 ^
Checking simulations/formel1/multi_controller.cpp ...
simulations/formel1/multi_controller.h:5:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/formel1/multi_controller.h:8:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
simulations/formel1/multi_controller.h:9:0: information: Include file: <list> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <list>
^
115/300 files checked 38% done
Checking simulations/formel1/simplecontroller.cpp ...
simulations/entropy/main.cpp:604:12: style: The scope of the variable 'cinit' can be reduced. [variableScope]
    double cinit=1.0;
           ^
simulations/entropy/main.cpp:280:15: style: Local variable 'nimm2' shadows outer variable [shadowVariable]
    OdeRobot* nimm2;
              ^
simulations/entropy/main.cpp:191:10: note: Shadowed declaration
  Nimm2* nimm2;
         ^
simulations/entropy/main.cpp:280:15: note: Shadow variable
    OdeRobot* nimm2;
              ^
simulations/entropy/main.cpp:599:9: style: Local variable 'index' shadows outer variable [shadowVariable]
    int index =  Simulation::contains(argv, argc, "-runs");
        ^
simulations/entropy/main.cpp:522:7: note: Shadowed declaration
  int index = Simulation::contains(argv, argc, "-first");
      ^
simulations/entropy/main.cpp:599:9: note: Shadow variable
    int index =  Simulation::contains(argv, argc, "-runs");
        ^
simulations/entropy/main.cpp:405:32: style: Parameter 'globalData' can be declared as reference to const [constParameterReference]
  void addCallback(GlobalData& globalData, bool draw, bool pause, bool control)
                               ^
simulations/formel1/simplecontroller.cpp:58:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/formel1/simplecontroller.cpp:59:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
simulations/formel1/simplecontroller.cpp:60:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
simulations/entropy/main.cpp:191:10: style: class member 'ThisSim::nimm2' is never used. [unusedStructMember]
  Nimm2* nimm2;
         ^
simulations/entropy/main.cpp:198:21: style: class member 'ThisSim::convTest0' is never used. [unusedStructMember]
  StatisticMeasure* convTest0;
                    ^
simulations/entropy/main.cpp:199:21: style: class member 'ThisSim::convTest1' is never used. [unusedStructMember]
  StatisticMeasure* convTest1;
                    ^
simulations/entropy/main.cpp:200:21: style: class member 'ThisSim::convTest2' is never used. [unusedStructMember]
  StatisticMeasure* convTest2;
                    ^
simulations/entropy/main.cpp:201:21: style: class member 'ThisSim::convTest3' is never used. [unusedStructMember]
  StatisticMeasure* convTest3;
                    ^
simulations/entropy/main.cpp:202:21: style: class member 'ThisSim::convTest4' is never used. [unusedStructMember]
  StatisticMeasure* convTest4;
                    ^
simulations/entropy/main.cpp:203:21: style: class member 'ThisSim::convTest5' is never used. [unusedStructMember]
  StatisticMeasure* convTest5;
                    ^
simulations/entropy/main.cpp:204:21: style: class member 'ThisSim::trackableEntropy' is never used. [unusedStructMember]
  TrackableMeasure* trackableEntropy;
                    ^
simulations/formel1/simplecontroller.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/entropy/main.cpp:281:32: style: Unused variable: hmlist [unusedVariable]
    std::list<ComplexMeasure*> hmlist;
                               ^
simulations/entropy/main.cpp:282:32: style: Unused variable: mimlist [unusedVariable]
    std::list<ComplexMeasure*> mimlist;
                               ^
simulations/entropy/main.cpp:604:17: style: Variable 'cinit' is assigned a value that is never used. [unreadVariable]
    double cinit=1.0;
                ^
116/300 files checked 39% done
Checking simulations/guidingCMC/Armband/main.cpp ...
simulations/formel1/simplecontroller.cpp:69:3: performance: Variable 'velocity' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  velocity=0;
  ^
simulations/formel1/simplecontroller.cpp:70:3: performance: Variable 'leftRightShift' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  leftRightShift=0;
  ^
simulations/formel1/simplecontroller.cpp:71:3: performance: Variable 'decreaseFactorVelocity' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  decreaseFactorVelocity=0.04;
  ^
simulations/formel1/simplecontroller.cpp:72:3: performance: Variable 'decreaseFactorShift' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  decreaseFactorShift=0.04;
  ^
117/300 files checked 39% done
simulations/guidingCMC/Armband/main.cpp:64:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/guidingCMC/Armband/main.cpp:66:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/guidingCMC/Armband/main.cpp:67:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/guidingCMC/Armband/main.cpp:68:0: information: Include file: <ode_robots/complexplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/complexplayground.h>
^
simulations/guidingCMC/Armband/main.cpp:69:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
Checking simulations/guidingCMC/Armband_4talk/main.cpp ...
simulations/guidingCMC/Armband/main.cpp:71:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/guidingCMC/Armband/main.cpp:72:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/guidingCMC/Armband/main.cpp:73:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/guidingCMC/Armband/main.cpp:74:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/guidingCMC/Armband/main.cpp:75:0: information: Include file: <selforg/feedbackwiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/feedbackwiring.h>
^
simulations/guidingCMC/Armband/main.cpp:76:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
simulations/guidingCMC/Armband/main.cpp:78:0: information: Include file: <ode_robots/sliderwheelie.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sliderwheelie.h>
^
simulations/guidingCMC/Armband_4talk/main.cpp:67:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/guidingCMC/Armband_4talk/main.cpp:69:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/guidingCMC/Armband_4talk/main.cpp:70:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/guidingCMC/Armband_4talk/main.cpp:71:0: information: Include file: <ode_robots/complexplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/complexplayground.h>
^
simulations/guidingCMC/Armband_4talk/main.cpp:72:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/guidingCMC/Armband_4talk/main.cpp:74:0: information: Include file: <selforg/statistictools.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/statistictools.h>
^
simulations/guidingCMC/Armband_4talk/main.cpp:75:0: information: Include file: <selforg/statisticmeasure.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/statisticmeasure.h>
^
simulations/guidingCMC/Armband_4talk/main.cpp:77:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/guidingCMC/Armband_4talk/main.cpp:78:0: information: Include file: <selforg/semox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/semox.h>
^
simulations/guidingCMC/Armband_4talk/main.cpp:79:0: information: Include file: <selforg/crossmotorcoupling.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/crossmotorcoupling.h>
^
simulations/guidingCMC/Armband_4talk/main.cpp:80:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/guidingCMC/Armband_4talk/main.cpp:81:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/guidingCMC/Armband_4talk/main.cpp:82:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/guidingCMC/Armband_4talk/main.cpp:83:0: information: Include file: <selforg/feedbackwiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/feedbackwiring.h>
^
simulations/guidingCMC/Armband_4talk/main.cpp:84:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
simulations/guidingCMC/Armband_4talk/main.cpp:86:0: information: Include file: <ode_robots/sliderwheelie.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sliderwheelie.h>
^
118/300 files checked 39% done
Checking simulations/guidingCMC/Armband_new/main.cpp ...
119/300 files checked 40% done
simulations/guidingCMC/Armband_new/main.cpp:85:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/guidingCMC/Armband_new/main.cpp:87:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/guidingCMC/Armband_new/main.cpp:88:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
Checking simulations/guidingCMC/Hexapod/hexapod.cpp ...
simulations/guidingCMC/Armband_new/main.cpp:89:0: information: Include file: <ode_robots/complexplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/complexplayground.h>
^
simulations/guidingCMC/Armband_new/main.cpp:90:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/guidingCMC/Armband_new/main.cpp:91:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/guidingCMC/Armband_new/main.cpp:93:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/guidingCMC/Armband_new/main.cpp:94:0: information: Include file: <selforg/semox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/semox.h>
^
simulations/guidingCMC/Armband_new/main.cpp:95:0: information: Include file: <selforg/crossmotorcoupling.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/crossmotorcoupling.h>
^
simulations/guidingCMC/Armband_new/main.cpp:96:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/guidingCMC/Armband_new/main.cpp:97:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/guidingCMC/Armband_new/main.cpp:98:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/guidingCMC/Armband_new/main.cpp:99:0: information: Include file: <selforg/feedbackwiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/feedbackwiring.h>
^
simulations/guidingCMC/Armband_new/main.cpp:100:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
simulations/guidingCMC/Armband_new/main.cpp:102:0: information: Include file: <ode_robots/sliderwheelie.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sliderwheelie.h>
^
simulations/guidingCMC/Hexapod/hexapod.cpp:23:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/guidingCMC/Hexapod/hexapod.cpp:24:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/guidingCMC/Hexapod/hexapod.cpp:27:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/guidingCMC/Hexapod/hexapod.cpp:30:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/guidingCMC/Hexapod/hexapod.cpp:33:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/guidingCMC/Hexapod/hexapod.cpp:34:0: information: Include file: <ode_robots/irsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/irsensor.h>
^
simulations/guidingCMC/Hexapod/hexapod.cpp:37:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/guidingCMC/Hexapod/hexapod.cpp:38:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/guidingCMC/Hexapod/hexapod.cpp:39:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
simulations/guidingCMC/Hexapod/hexapod.cpp:41:0: information: Include file: <ode_robots/mathutils.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/mathutils.h>
^
simulations/guidingCMC/Hexapod/hexapod.h:27:0: information: Include file: <selforg/inspectable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/inspectable.h>
^
simulations/guidingCMC/Hexapod/hexapod.h:29:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
simulations/guidingCMC/Hexapod/hexapod.h:30:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
simulations/guidingCMC/Armband_new/main.cpp:119:3: style: Class 'MotorAsSensors' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  MotorAsSensors(NoiseGenerator* noise, int plotMode=Controller)
  ^
120/300 files checked 40% done
simulations/guidingCMC/Hexapod/hexapod.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/guidingCMC/Hexapod/main.cpp ...
simulations/guidingCMC/Hexapod/main.cpp:97:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/guidingCMC/Hexapod/main.cpp:99:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/guidingCMC/Hexapod/main.cpp:100:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/guidingCMC/Hexapod/main.cpp:101:0: information: Include file: <ode_robots/complexplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/complexplayground.h>
^
simulations/guidingCMC/Hexapod/main.cpp:102:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/guidingCMC/Hexapod/main.cpp:103:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/guidingCMC/Hexapod/main.cpp:105:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/guidingCMC/Hexapod/main.cpp:106:0: information: Include file: <selforg/semox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/semox.h>
^
simulations/guidingCMC/Hexapod/main.cpp:107:0: information: Include file: <selforg/crossmotorcoupling.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/crossmotorcoupling.h>
^
simulations/guidingCMC/Hexapod/main.cpp:108:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/guidingCMC/Hexapod/main.cpp:109:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/guidingCMC/Hexapod/main.cpp:110:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/guidingCMC/Hexapod/main.cpp:111:0: information: Include file: <selforg/feedbackwiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/feedbackwiring.h>
^
simulations/guidingCMC/Hexapod/main.cpp:112:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
simulations/guidingCMC/Hexapod/hexapod.h:126:18: style: Boolean value assigned to floating point variable. [assignBoolToFloat]
      c.irSensors=false;
                 ^
121/300 files checked 40% done
Checking simulations/guidingCMC/Snake/main.cpp ...
simulations/bambi/skeleton.cpp:138:13: warning: Member variable 'Skeleton::pelvisservo' is not initialized in the constructor. [uninitMemberVar]
  Skeleton::Skeleton(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
            ^
simulations/guidingCMC/Snake/main.cpp:46:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/guidingCMC/Snake/main.cpp:48:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/guidingCMC/Snake/main.cpp:49:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/guidingCMC/Snake/main.cpp:50:0: information: Include file: <ode_robots/complexplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/complexplayground.h>
^
simulations/guidingCMC/Snake/main.cpp:51:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/guidingCMC/Snake/main.cpp:53:0: information: Include file: <selforg/semox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/semox.h>
^
simulations/guidingCMC/Snake/main.cpp:54:0: information: Include file: <selforg/crossmotorcoupling.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/crossmotorcoupling.h>
^
simulations/guidingCMC/Snake/main.cpp:55:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/guidingCMC/Snake/main.cpp:56:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/guidingCMC/Snake/main.cpp:57:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/guidingCMC/Snake/main.cpp:58:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/guidingCMC/Snake/main.cpp:59:0: information: Include file: <selforg/feedbackwiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/feedbackwiring.h>
^
simulations/guidingCMC/Snake/main.cpp:60:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
simulations/guidingCMC/Snake/main.cpp:62:0: information: Include file: <ode_robots/schlangeservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo.h>
^
simulations/bambi/skeleton.cpp:1130:13: warning: Either the condition 'o' is redundant or there is possible null pointer dereference: o. [nullPointerRedundantCheck]
    else if(o->getBody())
            ^
simulations/bambi/skeleton.cpp:1128:9: note: Assuming that condition 'o' is not redundant
    if (o && o->getGeom())
        ^
simulations/bambi/skeleton.cpp:1125:33: note: Assignment to 'o=objects[Head_comp]'
    const Primitive* o = objects[Head_comp];
                                ^
simulations/bambi/skeleton.cpp:1125:24: note: o is assigned 'objects[Head_comp]' here.
    const Primitive* o = objects[Head_comp];
                       ^
simulations/bambi/skeleton.cpp:1130:13: note: Null pointer dereference
    else if(o->getBody())
            ^
simulations/bambi/skeleton.cpp:1141:13: warning: Either the condition 'o' is redundant or there is possible null pointer dereference: o. [nullPointerRedundantCheck]
    else if(o->getBody())
            ^
simulations/bambi/skeleton.cpp:1139:9: note: Assuming that condition 'o' is not redundant
    if (o && o->getGeom())
        ^
simulations/bambi/skeleton.cpp:1136:33: note: Assignment to 'o=objects[Trunk_comp]'
    const Primitive* o = objects[Trunk_comp];
                                ^
simulations/bambi/skeleton.cpp:1136:24: note: o is assigned 'objects[Trunk_comp]' here.
    const Primitive* o = objects[Trunk_comp];
                       ^
simulations/bambi/skeleton.cpp:1141:13: note: Null pointer dereference
    else if(o->getBody())
            ^
simulations/bambi/skeleton.cpp:1116:51: style: Same expression in both branches of ternary operator. [duplicateExpressionTernary]
        (*i)->setMinMax(fst? -conf.backJointLimit : -conf.backJointLimit,
                                                  ^
simulations/bambi/skeleton.cpp:440:17: style: The scope of the variable 'bj' can be reduced. [variableScope]
    BallJoint*  bj;
                ^
simulations/guidingCMC/Snake/main.cpp:83:3: warning: Member variable 'ThisSim::fixator' is not initialized in the constructor. [uninitMemberVar]
  ThisSim()
  ^
simulations/guidingCMC/Snake/main.cpp:83:3: warning: Member variable 'ThisSim::controller' is not initialized in the constructor. [uninitMemberVar]
  ThisSim()
  ^
simulations/guidingCMC/Snake/main.cpp:83:3: warning: Member variable 'ThisSim::vehicle' is not initialized in the constructor. [uninitMemberVar]
  ThisSim()
  ^
122/300 files checked 40% done
Checking simulations/hand/invertnchannelcontrollerhebbh.cpp ...
simulations/hand/invertnchannelcontrollerhebbh.cpp:54:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/hand/invertnchannelcontrollerhebbh.h:55:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/hand/invertnchannelcontrollerhebbh.h:57:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/bambi/skeleton.cpp:407:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
simulations/hand/invertnchannelcontrollerhebbh.h:58:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/bambi/skeleton.cpp:410:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
simulations/hand/invertnchannelcontrollerhebbh.h:60:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/bambi/skeleton.cpp:1027:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                          ^
simulations/bambi/skeleton.cpp:1032:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                                ^
123/300 files checked 42% done
simulations/hand/invertnchannelcontrollerhebbh.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/hand/invertnchannelcontrollerhebbhhand.cpp ...
simulations/guidingCMC/Hexapod/hexapod.cpp:60:12: warning: Member variable 'Hexapod::countt' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/guidingCMC/Hexapod/hexapod.cpp:60:12: warning: Member variable 'Hexapod::t' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/guidingCMC/Hexapod/hexapod.cpp:60:12: warning: Member variable 'Hexapod::f' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/guidingCMC/Hexapod/hexapod.cpp:60:12: warning: Member variable 'Hexapod::distance' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/guidingCMC/Hexapod/hexapod.cpp:60:12: warning: Member variable 'Hexapod::time' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/guidingCMC/Hexapod/hexapod.cpp:60:12: warning: Member variable 'Hexapod::trunk' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/guidingCMC/Hexapod/hexapod.cpp:60:12: warning: Member variable 'Hexapod::irbox' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/guidingCMC/Hexapod/hexapod.cpp:60:12: warning: Member variable 'Hexapod::bigboxtransform' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/guidingCMC/Hexapod/hexapod.cpp:60:12: warning: Member variable 'Hexapod::headtrans' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/hand/invertnchannelcontrollerhebbhhand.cpp:49:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/hand/invertnchannelcontrollerhebbhhand.h:51:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/hand/invertnchannelcontrollerhebbhhand.h:52:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
simulations/hand/invertnchannelcontrollerhebbhhand.h:53:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
simulations/hand/invertnchannelcontrollerhebbhhand.h:54:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
simulations/hand/invertnchannelcontrollerhebbhhand.h:56:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/guidingCMC/Hexapod/hexapod.cpp:222:18: style: The scope of the variable 'torques' can be reduced. [variableScope]
    const dReal *torques;
                 ^
simulations/guidingCMC/Hexapod/hexapod.cpp:223:18: style: The scope of the variable 'angularV' can be reduced. [variableScope]
    const dReal *angularV;
                 ^
simulations/guidingCMC/Hexapod/hexapod.cpp:377:19: style: The scope of the variable 'servo' can be reduced. [variableScope]
    TwoAxisServo* servo;
                  ^
simulations/guidingCMC/Hexapod/hexapod.cpp:379:17: style: The scope of the variable 'fixedJoint' can be reduced. [variableScope]
    FixedJoint* fixedJoint;
                ^
simulations/hand/invertnchannelcontrollerhebbh.cpp:59:32: warning: Member variable 'InvertNChannelControllerHebbH::number_hom_sensors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbH::InvertNChannelControllerHebbH(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                               ^
simulations/hand/invertnchannelcontrollerhebbh.cpp:59:32: warning: Member variable 'InvertNChannelControllerHebbH::number_context_sensors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbH::InvertNChannelControllerHebbH(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                               ^
simulations/hand/invertnchannelcontrollerhebbh.cpp:59:32: warning: Member variable 'InvertNChannelControllerHebbH::number_motors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbH::InvertNChannelControllerHebbH(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                               ^
simulations/hand/invertnchannelcontrollerhebbh.cpp:59:32: warning: Member variable 'InvertNChannelControllerHebbH::number_all_sensors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbH::InvertNChannelControllerHebbH(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                               ^
simulations/hand/invertnchannelcontrollerhebbh.cpp:59:32: warning: Member variable 'InvertNChannelControllerHebbH::all_sensors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbH::InvertNChannelControllerHebbH(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                               ^
simulations/hand/invertnchannelcontrollerhebbh.h:74:3: style: Class 'InvertNChannelControllerHebbH' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  InvertNChannelControllerHebbH(int _buffersize, bool _update_only_1=false, bool inactivate_hebb=false);
  ^
simulations/hand/invertnchannelcontrollerhebbh.cpp:413:9: style: Condition 'cutAt0_80' is always false [knownConditionTrueFalse]
    if (cutAt0_80) {
        ^
simulations/hand/invertnchannelcontrollerhebbh.cpp:410:20: note: Assignment 'cutAt0_80=false', assigned value is 0
    bool cutAt0_80=false;
                   ^
simulations/hand/invertnchannelcontrollerhebbh.cpp:413:9: note: Condition 'cutAt0_80' is always false
    if (cutAt0_80) {
        ^
simulations/hand/invertnchannelcontrollerhebbh.cpp:425:9: style: Condition 'useTanhForH' is always true [knownConditionTrueFalse]
    if (useTanhForH){
        ^
simulations/hand/invertnchannelcontrollerhebbh.cpp:411:22: note: Assignment 'useTanhForH=true', assigned value is 1
    bool useTanhForH=true;
                     ^
simulations/hand/invertnchannelcontrollerhebbh.cpp:425:9: note: Condition 'useTanhForH' is always true
    if (useTanhForH){
        ^
124/300 files checked 42% done
simulations/hand/invertnchannelcontrollerhebbhhand.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/guidingCMC/Hexapod/hexapod.cpp:189:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
simulations/guidingCMC/Hexapod/hexapod.cpp:192:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
Checking simulations/hand/invertnchannelcontrollerhebbxsi.cpp ...
simulations/guidingCMC/Hexapod/hexapod.cpp:648:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                          ^
simulations/guidingCMC/Hexapod/hexapod.cpp:652:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                                ^
125/300 files checked 43% done
simulations/hand/invertnchannelcontrollerhebbxsi.cpp:36:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/hand/invertnchannelcontrollerhebbxsi.h:43:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/hand/invertnchannelcontrollerhebbxsi.h:45:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
Checking simulations/hand/invertnchannelcontrollerhebbxsihand.cpp ...
simulations/hand/invertnchannelcontrollerhebbxsi.h:46:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/hand/invertnchannelcontrollerhebbxsi.h:48:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/hand/invertnchannelcontrollerhebbxsihand.cpp:46:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/hand/invertnchannelcontrollerhebbxsihand.h:48:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/hand/invertnchannelcontrollerhebbxsihand.h:49:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
simulations/hand/invertnchannelcontrollerhebbxsihand.h:50:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
simulations/hand/invertnchannelcontrollerhebbxsihand.h:51:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
simulations/hand/invertnchannelcontrollerhebbxsihand.h:53:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/hand/invertnchannelcontrollerhebbhhand.cpp:54:36: warning: Member variable 'InvertNChannelControllerHebbHHand::number_motors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbHHand::InvertNChannelControllerHebbHHand(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                                   ^
simulations/hand/invertnchannelcontrollerhebbhhand.cpp:54:36: warning: Member variable 'InvertNChannelControllerHebbHHand::number_all_sensors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbHHand::InvertNChannelControllerHebbHHand(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                                   ^
simulations/hand/invertnchannelcontrollerhebbhhand.cpp:54:36: warning: Member variable 'InvertNChannelControllerHebbHHand::all_sensors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbHHand::InvertNChannelControllerHebbHHand(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                                   ^
simulations/hand/invertnchannelcontrollerhebbhhand.cpp:54:36: warning: Member variable 'InvertNChannelControllerHebbHHand::number_hebb_sensors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbHHand::InvertNChannelControllerHebbHHand(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                                   ^
simulations/hand/invertnchannelcontrollerhebbhhand.h:70:3: style: Class 'InvertNChannelControllerHebbHHand' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  InvertNChannelControllerHebbHHand(int _buffersize, bool _update_only_1=false, bool inactivate_hebb=false);
  ^
simulations/hand/invertnchannelcontrollerhebbxsi.cpp:41:34: warning: Member variable 'InvertNChannelControllerHebbXsi::number_motors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbXsi::InvertNChannelControllerHebbXsi(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                                 ^
simulations/hand/invertnchannelcontrollerhebbxsi.cpp:41:34: warning: Member variable 'InvertNChannelControllerHebbXsi::number_all_sensors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbXsi::InvertNChannelControllerHebbXsi(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                                 ^
simulations/hand/invertnchannelcontrollerhebbxsi.cpp:41:34: warning: Member variable 'InvertNChannelControllerHebbXsi::all_sensors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbXsi::InvertNChannelControllerHebbXsi(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                                 ^
simulations/hand/invertnchannelcontrollerhebbxsi.h:62:3: style: Class 'InvertNChannelControllerHebbXsi' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  InvertNChannelControllerHebbXsi(int _buffersize, bool _update_only_1=false, bool inactivate_hebb=false);
  ^
126/300 files checked 43% done
Checking simulations/hand/irinvertwiring.cpp ...
127/300 files checked 43% done
simulations/hand/invertnchannelcontrollerhebbxsihand.cpp:51:38: warning: Member variable 'InvertNChannelControllerHebbXsiHand::number_motors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbXsiHand::InvertNChannelControllerHebbXsiHand(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                                     ^
simulations/hand/invertnchannelcontrollerhebbxsihand.cpp:51:38: warning: Member variable 'InvertNChannelControllerHebbXsiHand::number_all_sensors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbXsiHand::InvertNChannelControllerHebbXsiHand(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                                     ^
simulations/hand/irinvertwiring.h:35:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/hand/invertnchannelcontrollerhebbxsihand.cpp:51:38: warning: Member variable 'InvertNChannelControllerHebbXsiHand::all_sensors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbXsiHand::InvertNChannelControllerHebbXsiHand(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                                     ^
Checking simulations/hand/layer2_incc.cpp ...
simulations/hand/invertnchannelcontrollerhebbxsihand.h:67:3: style: Class 'InvertNChannelControllerHebbXsiHand' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  InvertNChannelControllerHebbXsiHand(int _buffersize, bool _update_only_1=false, bool inactivate_hebb=false);
  ^
simulations/hand/invertnchannelcontrollerhebbxsihand.cpp:64:26: style: Variable 'number_hebb_sensors' is assigned a value that is never used. [unreadVariable]
 int number_hebb_sensors = (sensornumber-motornumber); // number of context sensors not used by InvertNChannelController
                         ^
128/300 files checked 43% done
simulations/hand/irinvertwiring.h:48:3: style: Class 'IRInvertWiring' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  IRInvertWiring(NoiseGenerator* noise, bool plotNoise=false, const std::string& name = "IRInvertWiring");
  ^
Checking simulations/hand/main.cpp ...
Checking simulations/hexapod/main.cpp ...
simulations/hand/layer2_incc.h:49:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/hand/layer2_incc.h:50:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/hand/layer2_incc.h:52:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
129/300 files checked 43% done
simulations/hand/main.cpp:137:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/hand/main.cpp:139:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/hand/main.cpp:140:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/hand/main.cpp:141:0: information: Include file: <ode_robots/closedplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/closedplayground.h>
^
simulations/hexapod/main.cpp:25:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/hand/main.cpp:142:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/hexapod/main.cpp:27:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/hand/main.cpp:143:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/hexapod/main.cpp:28:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/hand/main.cpp:144:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/hexapod/main.cpp:29:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/hand/main.cpp:145:0: information: Include file: <ode_robots/passivecapsule.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivecapsule.h>
^
simulations/hexapod/main.cpp:30:0: information: Include file: <ode_robots/complexplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/complexplayground.h>
^
simulations/hand/main.cpp:146:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/hexapod/main.cpp:31:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/hand/main.cpp:147:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/hexapod/main.cpp:32:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/hand/main.cpp:148:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/hexapod/main.cpp:33:0: information: Include file: <ode_robots/operators.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/operators.h>
^
simulations/hand/main.cpp:149:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/hexapod/main.cpp:34:0: information: Include file: <ode_robots/boxpile.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/boxpile.h>
^
simulations/hand/main.cpp:150:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/hexapod/main.cpp:36:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/hand/main.cpp:151:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/hexapod/main.cpp:37:0: information: Include file: <selforg/semox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/semox.h>
^
simulations/hand/main.cpp:152:0: information: Include file: <invertnchannelcontrollerhebbxsi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <invertnchannelcontrollerhebbxsi.h>
^
simulations/hexapod/main.cpp:38:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/hand/main.cpp:153:0: information: Include file: <invertnchannelcontrollerhebbxsihand.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <invertnchannelcontrollerhebbxsihand.h>
^
simulations/hexapod/main.cpp:39:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/hand/main.cpp:154:0: information: Include file: <invertnchannelcontrollerhebbhhand.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <invertnchannelcontrollerhebbhhand.h>
^
simulations/hexapod/main.cpp:40:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/hand/main.cpp:155:0: information: Include file: <invertnchannelcontrollerhebbh.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <invertnchannelcontrollerhebbh.h>
^
simulations/hexapod/main.cpp:41:0: information: Include file: <selforg/feedbackwiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/feedbackwiring.h>
^
simulations/hand/main.cpp:157:0: information: Include file: <ode_robots/hand.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/hand.h>
^
simulations/hexapod/main.cpp:42:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
simulations/hexapod/main.cpp:43:0: information: Include file: <selforg/soml.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/soml.h>
^
simulations/hexapod/main.cpp:45:0: information: Include file: <selforg/derinf.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derinf.h>
^
simulations/hexapod/sox.h:24:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulations/hexapod/sox.h:25:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/hexapod/sox.h:27:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/hexapod/sox.h:28:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/hexapod/sox.h:30:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/hexapod/main.cpp:49:0: information: Include file: <ode_robots/hexapod.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/hexapod.h>
^
simulations/hand/layer2_incc.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/hand/layer2_incc.h:66:3: style: Class 'Layer2_INCC' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Layer2_INCC(int _buffersize, bool _update_only_1=false);
  ^
simulations/hand/layer2_incc.h:70:16: style: The function 'init' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void init(int sensornumber, int motornumber, RandGen* randGen = 0);
               ^
simulations/hand/invertnchannelcontrollerhebbh.h:75:16: note: Virtual function in base class
  virtual void init(int sensornumber, int motornumber, RandGen* randGen = 0);
               ^
simulations/hand/layer2_incc.h:70:16: note: Function in derived class
  virtual void init(int sensornumber, int motornumber, RandGen* randGen = 0);
               ^
simulations/hand/layer2_incc.cpp:168:9: style: Condition 'cutAt0_80' is always false [knownConditionTrueFalse]
    if (cutAt0_80) {
        ^
simulations/hand/layer2_incc.cpp:165:20: note: Assignment 'cutAt0_80=false', assigned value is 0
    bool cutAt0_80=false;
                   ^
simulations/hand/layer2_incc.cpp:168:9: note: Condition 'cutAt0_80' is always false
    if (cutAt0_80) {
        ^
simulations/hand/layer2_incc.cpp:180:9: style: Condition 'useTanhForH' is always true [knownConditionTrueFalse]
    if (useTanhForH){
        ^
simulations/hand/layer2_incc.cpp:166:22: note: Assignment 'useTanhForH=true', assigned value is 1
    bool useTanhForH=true;
                     ^
simulations/hand/layer2_incc.cpp:180:9: note: Condition 'useTanhForH' is always true
    if (useTanhForH){
        ^
simulations/hand/main.cpp:361:38: style: C-style pointer casting [cstyleCast]
        ClosedPlayground* playground=(ClosedPlayground* )globalData.obstacles.back();
                                     ^
simulations/hand/main.cpp:222:20: style: Variable 'matODE[11]' is assigned a value that is never used. [unreadVariable]
        matODE[11] =0.0f;
                   ^
simulations/hand/main.cpp:226:15: style: Variable 'Pos[2]' is assigned a value that is never used. [unreadVariable]
        Pos[2]=5;
              ^
130/300 files checked 44% done
131/300 files checked 44% done
simulations/hexapod/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/hexapod/old/2/hexapod.cpp ...
Checking simulations/hexapod/old/hexapod.cpp ...
simulations/hexapod/old/2/hexapod.cpp:23:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/hexapod/old/2/hexapod.cpp:24:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/hexapod/old/2/hexapod.cpp:27:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/hexapod/old/2/hexapod.cpp:30:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/hexapod/old/2/hexapod.cpp:33:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/hexapod/old/2/hexapod.cpp:34:0: information: Include file: <ode_robots/irsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/irsensor.h>
^
simulations/hexapod/old/2/hexapod.cpp:37:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/hexapod/old/2/hexapod.cpp:38:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/hexapod/old/hexapod.cpp:23:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/hexapod/old/2/hexapod.cpp:39:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
simulations/hexapod/old/hexapod.cpp:24:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/hexapod/old/2/hexapod.cpp:41:0: information: Include file: <ode_robots/mathutils.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/mathutils.h>
^
simulations/hexapod/old/hexapod.cpp:27:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/hexapod/old/2/hexapod.h:27:0: information: Include file: <selforg/inspectable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/inspectable.h>
^
simulations/hexapod/old/hexapod.cpp:30:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/hexapod/old/2/hexapod.h:29:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
simulations/hexapod/old/hexapod.cpp:33:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/hexapod/old/2/hexapod.h:30:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
simulations/hexapod/old/hexapod.cpp:34:0: information: Include file: <ode_robots/irsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/irsensor.h>
^
simulations/hexapod/old/hexapod.cpp:37:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/hexapod/old/hexapod.cpp:38:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/hexapod/old/hexapod.cpp:39:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
simulations/hexapod/old/hexapod.cpp:41:0: information: Include file: <ode_robots/mathutils.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/mathutils.h>
^
simulations/hexapod/old/hexapod.h:27:0: information: Include file: <selforg/inspectable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/inspectable.h>
^
simulations/hexapod/old/hexapod.h:29:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
simulations/hexapod/old/hexapod.h:30:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
simulations/hexapod/old/2/hexapod.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/hexapod/old/hexapod.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/hexapod/sox.h:38:3: style: Class 'Sox' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Sox(double init_feedback_strength = 1.0, bool useExtendedModel=true);
  ^
132/300 files checked 44% done
simulations/hexapod/old/hexapod.h:126:18: style: Boolean value assigned to floating point variable. [assignBoolToFloat]
      c.irSensors=false;
                 ^
Checking simulations/hexapod/sox.cpp ...
simulations/hexapod/old/hexapod.cpp:60:12: warning: Member variable 'Hexapod::countt' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/hexapod/old/hexapod.cpp:60:12: warning: Member variable 'Hexapod::t' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/hexapod/old/hexapod.cpp:60:12: warning: Member variable 'Hexapod::f' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/hexapod/old/hexapod.cpp:60:12: warning: Member variable 'Hexapod::distance' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/hexapod/old/hexapod.cpp:60:12: warning: Member variable 'Hexapod::time' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/hexapod/old/hexapod.cpp:60:12: warning: Member variable 'Hexapod::trunk' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/hexapod/old/hexapod.cpp:60:12: warning: Member variable 'Hexapod::irbox' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/hexapod/old/hexapod.cpp:60:12: warning: Member variable 'Hexapod::bigboxtransform' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/hexapod/old/hexapod.cpp:60:12: warning: Member variable 'Hexapod::headtrans' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/hexapod/old/hexapod.cpp:222:18: style: The scope of the variable 'torques' can be reduced. [variableScope]
    const dReal *torques;
                 ^
simulations/hexapod/old/hexapod.cpp:223:18: style: The scope of the variable 'angularV' can be reduced. [variableScope]
    const dReal *angularV;
                 ^
simulations/hexapod/old/hexapod.cpp:377:19: style: The scope of the variable 'servo' can be reduced. [variableScope]
    TwoAxisServo* servo;
                  ^
simulations/hexapod/old/hexapod.cpp:379:17: style: The scope of the variable 'fixedJoint' can be reduced. [variableScope]
    FixedJoint* fixedJoint;
                ^
simulations/hexapod/old/2/hexapod.h:126:18: style: Boolean value assigned to floating point variable. [assignBoolToFloat]
      c.irSensors=false;
                 ^
simulations/hexapod/old/2/hexapod.cpp:60:12: warning: Member variable 'Hexapod::countt' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/hexapod/old/2/hexapod.cpp:60:12: warning: Member variable 'Hexapod::t' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/hexapod/old/2/hexapod.cpp:60:12: warning: Member variable 'Hexapod::f' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/hexapod/old/2/hexapod.cpp:60:12: warning: Member variable 'Hexapod::distance' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/hexapod/old/2/hexapod.cpp:60:12: warning: Member variable 'Hexapod::time' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/hexapod/old/2/hexapod.cpp:60:12: warning: Member variable 'Hexapod::trunk' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/hexapod/old/2/hexapod.cpp:60:12: warning: Member variable 'Hexapod::irbox' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/hexapod/old/2/hexapod.cpp:60:12: warning: Member variable 'Hexapod::bigboxtransform' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/hexapod/old/2/hexapod.cpp:60:12: warning: Member variable 'Hexapod::headtrans' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/hexapod/old/2/hexapod.cpp:222:18: style: The scope of the variable 'torques' can be reduced. [variableScope]
    const dReal *torques;
                 ^
simulations/hexapod/old/2/hexapod.cpp:223:18: style: The scope of the variable 'angularV' can be reduced. [variableScope]
    const dReal *angularV;
                 ^
simulations/hexapod/old/2/hexapod.cpp:377:19: style: The scope of the variable 'servo' can be reduced. [variableScope]
    TwoAxisServo* servo;
                  ^
simulations/hexapod/old/2/hexapod.cpp:379:17: style: The scope of the variable 'fixedJoint' can be reduced. [variableScope]
    FixedJoint* fixedJoint;
                ^
simulations/hexapod/old/hexapod.cpp:189:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
simulations/hexapod/old/hexapod.cpp:192:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
simulations/hexapod/old/hexapod.cpp:648:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                          ^
simulations/hexapod/old/hexapod.cpp:652:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                                ^
133/300 files checked 45% done
Checking simulations/homeok_vs_static/main.cpp ...
simulations/homeok_vs_static/main.cpp:122:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/homeok_vs_static/main.cpp:125:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/homeok_vs_static/main.cpp:128:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/homeok_vs_static/main.cpp:131:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/homeok_vs_static/main.cpp:134:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/homeok_vs_static/main.cpp:137:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/homeok_vs_static/main.cpp:138:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/homeok_vs_static/main.cpp:141:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/homeok_vs_static/main.cpp:142:0: information: Include file: <ode_robots/nimm4.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm4.h>
^
simulations/homeok_vs_static/main.cpp:146:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/homeok_vs_static/main.cpp:147:0: information: Include file: <ode_robots/complexplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/complexplayground.h>
^
simulations/homeok_vs_static/main.cpp:153:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/homeok_vs_static/main.cpp:156:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/homeok_vs_static/main.cpp:157:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/hexapod/old/2/hexapod.cpp:189:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
simulations/hexapod/old/2/hexapod.cpp:192:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
simulations/hexapod/old/2/hexapod.cpp:648:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                          ^
simulations/hexapod/old/2/hexapod.cpp:652:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                                ^
134/300 files checked 46% done
simulations/homeok_vs_static/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/homeok_vs_static/main_working_invertnchannel.cpp ...
simulations/homeok_vs_static/main_working_invertnchannel.cpp:119:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:122:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:125:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:128:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:131:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:134:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:135:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:138:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:139:0: information: Include file: <ode_robots/nimm4.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm4.h>
^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:143:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:144:0: information: Include file: <ode_robots/complexplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/complexplayground.h>
^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:147:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:150:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:151:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/hexapod/sox.cpp:24:6: warning: Member variable 'Sox::number_sensors' is not initialized in the constructor. [uninitMemberVar]
Sox::Sox(double init_feedback_strength, bool useExtendedModel)
     ^
simulations/hexapod/sox.cpp:24:6: warning: Member variable 'Sox::number_motors' is not initialized in the constructor. [uninitMemberVar]
Sox::Sox(double init_feedback_strength, bool useExtendedModel)
     ^
simulations/hexapod/sox.cpp:24:6: warning: Member variable 'Sox::TLE' is not initialized in the constructor. [uninitMemberVar]
Sox::Sox(double init_feedback_strength, bool useExtendedModel)
     ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/der_zweibeiner/zweibeiner.cpp:71:15: warning: Member variable 'ZweiBeiner::rightfeed' is not initialized in the constructor. [uninitMemberVar]
  ZweiBeiner::ZweiBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
simulations/der_zweibeiner/zweibeiner.cpp:71:15: warning: Member variable 'ZweiBeiner::leftfeed' is not initialized in the constructor. [uninitMemberVar]
  ZweiBeiner::ZweiBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
simulations/der_zweibeiner/zweibeiner.cpp:71:15: warning: Member variable 'ZweiBeiner::rightlowerleg' is not initialized in the constructor. [uninitMemberVar]
  ZweiBeiner::ZweiBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
simulations/hexapod/sox.cpp:236:17: style: Local variable 'x' shadows outer variable [shadowVariable]
  const Matrix& x = x_buffer[(t - max(s4delay,1) + buffersize) % buffersize];
                ^
simulations/hexapod/sox.h:91:18: note: Shadowed declaration
  matrix::Matrix x;        // current sensor value vector
                 ^
simulations/hexapod/sox.cpp:236:17: note: Shadow variable
  const Matrix& x = x_buffer[(t - max(s4delay,1) + buffersize) % buffersize];
                ^
simulations/der_zweibeiner/zweibeiner.cpp:71:15: warning: Member variable 'ZweiBeiner::leftlowerleg' is not initialized in the constructor. [uninitMemberVar]
  ZweiBeiner::ZweiBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
simulations/hexapod/sox.cpp:301:10: style: Local variable 'x' shadows outer variable [shadowVariable]
  Matrix x(number_sensors,1);
         ^
simulations/hexapod/sox.h:91:18: note: Shadowed declaration
  matrix::Matrix x;        // current sensor value vector
                 ^
simulations/hexapod/sox.cpp:301:10: note: Shadow variable
  Matrix x(number_sensors,1);
         ^
simulations/der_zweibeiner/zweibeiner.cpp:305:26: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      double l1 =       n<2 ? conf.legLength*0.45 : conf.legLength*0.5;
                         ^
simulations/der_zweibeiner/zweibeiner.cpp:307:26: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      double hipangle = n<2 ? -M_PI/18 : -M_PI/18;
                         ^
simulations/der_zweibeiner/zweibeiner.cpp:310:26: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      double l2 =       n<2 ? conf.legLength*0.45 : conf.legLength*0.5;
                         ^
simulations/der_zweibeiner/zweibeiner.cpp:312:27: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      double kneeangle = n<2 ? M_PI/5 : -M_PI/5;
                          ^
simulations/der_zweibeiner/zweibeiner.cpp:315:20: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      double l3 = n<2 ? conf.legLength*0.25 : 0;  // front legs have no feet
                   ^
simulations/der_zweibeiner/zweibeiner.cpp:317:28: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      double ankleangle = n<2 ? -M_PI/3 : 0;
                           ^
simulations/der_zweibeiner/zweibeiner.cpp:325:22: style: Condition 'n<2' is always true [knownConditionTrueFalse]
                    n<2 ? conf.legLength  : conf.legLength - theight/3);
                     ^
simulations/der_zweibeiner/zweibeiner.cpp:351:63: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      j = new HingeJoint(p1, p2, Pos(0,0,-l1/2) * m1, Axis(0,n<2 ? -1 : 1,0) * m1);
                                                              ^
simulations/der_zweibeiner/zweibeiner.cpp:364:11: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      if(n<2){
          ^
simulations/hexapod/sox.cpp:70:24: style: Variable 'randGen' is assigned a value that is never used. [unreadVariable]
  if(!randGen) randGen = new RandGen(); // this gives a small memory leak
                       ^
simulations/der_zweibeiner/zweibeiner.cpp:307:40: style: Same value in both branches of ternary operator. [duplicateValueTernary]
      double hipangle = n<2 ? -M_PI/18 : -M_PI/18;
                                       ^
135/300 files checked 46% done
simulations/der_zweibeiner/zweibeiner.cpp:315:14: style: The scope of the variable 'l3' can be reduced. [variableScope]
      double l3 = n<2 ? conf.legLength*0.25 : 0;  // front legs have no feet
             ^
simulations/der_zweibeiner/zweibeiner.cpp:317:14: style: The scope of the variable 'ankleangle' can be reduced. [variableScope]
      double ankleangle = n<2 ? -M_PI/3 : 0;
             ^
simulations/der_zweibeiner/zweibeiner.cpp:318:14: style: The scope of the variable 'anklelowstop' can be reduced. [variableScope]
      double anklelowstop = -M_PI/5;
             ^
simulations/der_zweibeiner/zweibeiner.cpp:319:14: style: The scope of the variable 'anklehighstop' can be reduced. [variableScope]
      double anklehighstop = M_PI/5;
             ^
Checking simulations/homeok_vs_static/main_working_single_staticController.cpp ...
simulations/homeok_vs_static/main.cpp:235:21: style: Condition 'i<0' is always false [knownConditionTrueFalse]
    for (int i=0; i < 0/*2*/; i++){
                    ^
simulations/homeok_vs_static/main.cpp:235:16: note: Assignment 'i=0', assigned value is 0
    for (int i=0; i < 0/*2*/; i++){
               ^
simulations/homeok_vs_static/main.cpp:235:21: note: Condition 'i<0' is always false
    for (int i=0; i < 0/*2*/; i++){
                    ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:122:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/homeok_vs_static/main_working_single_staticController.cpp:125:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/der_zweibeiner/zweibeiner.h:126:14: error: Uninitialized variable: c.onlyPrimaryFunctions [uninitvar]
      return c;
             ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:128:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/homeok_vs_static/main_working_single_staticController.cpp:131:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/der_zweibeiner/zweibeiner.h:126:14: error: Uninitialized struct member: c.onlyPrimaryFunctions [uninitStructMember]
      return c;
             ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:134:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/homeok_vs_static/main_working_single_staticController.cpp:137:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/homeok_vs_static/main_working_single_staticController.cpp:138:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/homeok_vs_static/main_working_single_staticController.cpp:141:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/homeok_vs_static/main_working_single_staticController.cpp:142:0: information: Include file: <ode_robots/nimm4.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm4.h>
^
simulations/homeok_vs_static/main_working_single_staticController.cpp:146:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/homeok_vs_static/main_working_single_staticController.cpp:147:0: information: Include file: <ode_robots/complexplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/complexplayground.h>
^
simulations/homeok_vs_static/main_working_single_staticController.cpp:153:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/homeok_vs_static/main_working_single_staticController.cpp:156:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/homeok_vs_static/main_working_single_staticController.cpp:157:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/der_zweibeiner/zweibeiner.cpp:195:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
simulations/der_zweibeiner/zweibeiner.cpp:198:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
simulations/homeok_vs_static/main.cpp:377:14: warning: If resource allocation fails, then there is a possible null pointer dereference: file [nullPointerOutOfResources]
     fprintf(file,"%g  ", summed_path);
             ^
simulations/homeok_vs_static/main.cpp:376:18: note: Assuming allocation function fails
     file = fopen(filename,"a");
                 ^
simulations/homeok_vs_static/main.cpp:376:18: note: Assignment 'file=fopen(filename,"a")', assigned value is 0
     file = fopen(filename,"a");
                 ^
simulations/homeok_vs_static/main.cpp:377:14: note: Null pointer dereference
     fprintf(file,"%g  ", summed_path);
             ^
simulations/der_zweibeiner/zweibeiner.cpp:402:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                                ^
simulations/homeok_vs_static/main.cpp:480:11: warning: If resource allocation fails, then there is a possible null pointer dereference: filen [nullPointerOutOfResources]
  fprintf(filen,"#c  h  a \n");
          ^
simulations/homeok_vs_static/main.cpp:479:16: note: Assuming allocation function fails
  filen = fopen(filename,"a");
               ^
simulations/homeok_vs_static/main.cpp:479:16: note: Assignment 'filen=fopen(filename,"a")', assigned value is 0
  filen = fopen(filename,"a");
               ^
simulations/homeok_vs_static/main.cpp:480:11: note: Null pointer dereference
  fprintf(filen,"#c  h  a \n");
          ^
simulations/der_zweibeiner/zweibeiner.cpp:406:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                          ^
simulations/homeok_vs_static/main.cpp:506:19: warning: If resource allocation fails, then there is a possible null pointer dereference: filen [nullPointerOutOfResources]
          fprintf(filen,"%g   %g\n", ((double)c)/10.0, ((double)h)/10.0);
                  ^
simulations/homeok_vs_static/main.cpp:504:24: note: Assuming allocation function fails
          filen = fopen(filename,"a");
                       ^
simulations/homeok_vs_static/main.cpp:504:24: note: Assignment 'filen=fopen(filename,"a")', assigned value is 0
          filen = fopen(filename,"a");
                       ^
simulations/homeok_vs_static/main.cpp:506:19: note: Null pointer dereference
          fprintf(filen,"%g   %g\n", ((double)c)/10.0, ((double)h)/10.0);
                  ^
simulations/homeok_vs_static/main.cpp:518:13: warning: If resource allocation fails, then there is a possible null pointer dereference: file [nullPointerOutOfResources]
    fprintf(file,"\n");
            ^
simulations/homeok_vs_static/main.cpp:517:17: note: Assuming allocation function fails
    file = fopen(filename,"a");
                ^
simulations/homeok_vs_static/main.cpp:517:17: note: Assignment 'file=fopen(filename,"a")', assigned value is 0
    file = fopen(filename,"a");
                ^
simulations/homeok_vs_static/main.cpp:518:13: note: Null pointer dereference
    fprintf(file,"\n");
            ^
136/300 files checked 46% done
Checking simulations/humanoid/derlininvertmpi.cpp ...
Checking simulations/humanoid/derskeleton.cpp ...
simulations/homeok_vs_static/main.cpp:515:10: style: Local variable 'filename' shadows outer variable [shadowVariable]
    char filename[256];
         ^
simulations/homeok_vs_static/main.cpp:477:8: note: Shadowed declaration
  char filename[256];
       ^
simulations/homeok_vs_static/main.cpp:515:10: note: Shadow variable
    char filename[256];
         ^
simulations/homeok_vs_static/main.cpp:501:17: style: Local variable 'filen' shadows outer variable [shadowVariable]
          FILE* filen;
                ^
simulations/homeok_vs_static/main.cpp:476:9: note: Shadowed declaration
  FILE* filen;
        ^
simulations/homeok_vs_static/main.cpp:501:17: note: Shadow variable
          FILE* filen;
                ^
simulations/homeok_vs_static/main.cpp:502:16: style: Local variable 'filename' shadows outer variable [shadowVariable]
          char filename[256];
               ^
simulations/homeok_vs_static/main.cpp:477:8: note: Shadowed declaration
  char filename[256];
       ^
simulations/homeok_vs_static/main.cpp:502:16: note: Shadow variable
          char filename[256];
               ^
Checking simulations/humanoid/main.cpp ...
simulations/homeok_vs_static/main_working_invertnchannel.cpp:218:21: style: Condition 'i<0' is always false [knownConditionTrueFalse]
    for (int i=0; i < 0/*2*/; i++){
                    ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:218:16: note: Assignment 'i=0', assigned value is 0
    for (int i=0; i < 0/*2*/; i++){
               ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:218:21: note: Condition 'i<0' is always false
    for (int i=0; i < 0/*2*/; i++){
                    ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:360:14: warning: If resource allocation fails, then there is a possible null pointer dereference: file [nullPointerOutOfResources]
     fprintf(file,"%g  ", summed_path);
             ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:359:18: note: Assuming allocation function fails
     file = fopen(filename,"a");
                 ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:359:18: note: Assignment 'file=fopen(filename,"a")', assigned value is 0
     file = fopen(filename,"a");
                 ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:360:14: note: Null pointer dereference
     fprintf(file,"%g  ", summed_path);
             ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:438:11: warning: If resource allocation fails, then there is a possible null pointer dereference: filen [nullPointerOutOfResources]
  fprintf(filen,"#c  h  a \n");
          ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:437:16: note: Assuming allocation function fails
  filen = fopen(filename,"a");
               ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:437:16: note: Assignment 'filen=fopen(filename,"a")', assigned value is 0
  filen = fopen(filename,"a");
               ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:438:11: note: Null pointer dereference
  fprintf(filen,"#c  h  a \n");
          ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:461:19: warning: If resource allocation fails, then there is a possible null pointer dereference: filen [nullPointerOutOfResources]
          fprintf(filen,"%g   %g  %g\n", ((double)c)/10.0, ((double)h)/10.0, ((double)a)/10.0 );
                  ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:460:24: note: Assuming allocation function fails
          filen = fopen(filename,"a");
                       ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:460:24: note: Assignment 'filen=fopen(filename,"a")', assigned value is 0
          filen = fopen(filename,"a");
                       ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:461:19: note: Null pointer dereference
          fprintf(filen,"%g   %g  %g\n", ((double)c)/10.0, ((double)h)/10.0, ((double)a)/10.0 );
                  ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:471:13: warning: If resource allocation fails, then there is a possible null pointer dereference: file [nullPointerOutOfResources]
    fprintf(file,"\n");
            ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:470:17: note: Assuming allocation function fails
    file = fopen(filename,"a");
                ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:470:17: note: Assignment 'file=fopen(filename,"a")', assigned value is 0
    file = fopen(filename,"a");
                ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:471:13: note: Null pointer dereference
    fprintf(file,"\n");
            ^
simulations/humanoid/derlininvertmpi.h:70:0: information: Include file: <selforg/invertmotorcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorcontroller.h>
^
simulations/humanoid/derlininvertmpi.h:72:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/humanoid/derlininvertmpi.h:73:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
simulations/humanoid/derlininvertmpi.h:75:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/humanoid/derlininvertmpi.h:76:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/humanoid/derlininvertmpi.h:77:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/humanoid/derlininvertmpi.h:78:0: information: Include file: <selforg/invertablemodel.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertablemodel.h>
^
simulations/humanoid/derlininvertmpi.cpp:81:0: information: Include file: <selforg/regularisation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/regularisation.h>
^
simulations/humanoid/derlininvertmpi.cpp:82:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
137/300 files checked 47% done
simulations/homeok_vs_static/main_working_invertnchannel.cpp:468:10: style: Local variable 'filename' shadows outer variable [shadowVariable]
    char filename[256];
         ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:435:8: note: Shadowed declaration
  char filename[256];
       ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:468:10: note: Shadow variable
    char filename[256];
         ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:457:17: style: Local variable 'filen' shadows outer variable [shadowVariable]
          FILE* filen;
                ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:434:9: note: Shadowed declaration
  FILE* filen;
        ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:457:17: note: Shadow variable
          FILE* filen;
                ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:458:16: style: Local variable 'filename' shadows outer variable [shadowVariable]
          char filename[256];
               ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:435:8: note: Shadowed declaration
  char filename[256];
       ^
simulations/homeok_vs_static/main_working_invertnchannel.cpp:458:16: note: Shadow variable
          char filename[256];
               ^
simulations/humanoid/derskeleton.cpp:50:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/humanoid/derskeleton.cpp:51:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/humanoid/derskeleton.cpp:54:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/humanoid/derskeleton.cpp:57:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/humanoid/derskeleton.cpp:58:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/humanoid/derskeleton.cpp:59:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
138/300 files checked 47% done
simulations/humanoid/main.cpp:144:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/humanoid/main.cpp:147:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/humanoid/main.cpp:150:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/humanoid/main.cpp:154:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/humanoid/main.cpp:157:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/humanoid/main.cpp:160:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/humanoid/main.cpp:161:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/humanoid/skeleton.h:97:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
simulations/humanoid/skeleton.h:98:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
simulations/humanoid/skeleton.h:99:0: information: Include file: <selforg/inspectable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/inspectable.h>
^
simulations/humanoid/main.cpp:168:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/humanoid/main.cpp:170:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/humanoid/main.cpp:171:0: information: Include file: <ode_robots/passivemesh.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivemesh.h>
^
simulations/humanoid/main.cpp:172:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/humanoid/main.cpp:173:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/humanoid/main.cpp:177:0: information: Include file: <selforg/derbigcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derbigcontroller.h>
^
simulations/humanoid/main.cpp:178:0: information: Include file: <selforg/dercontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/dercontroller.h>
^
simulations/humanoid/main.cpp:179:0: information: Include file: <selforg/invertmotorbigmodel.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorbigmodel.h>
^
simulations/humanoid/main.cpp:180:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/humanoid/main.cpp:181:0: information: Include file: <selforg/elman.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/elman.h>
^
simulations/humanoid/main.cpp:182:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/humanoid/main.cpp:183:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/humanoid/main.cpp:184:0: information: Include file: <selforg/derpseudosensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derpseudosensor.h>
^
simulations/humanoid/main.cpp:186:0: information: Include file: <selforg/derlinunivers.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derlinunivers.h>
^
simulations/humanoid/main.cpp:189:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/humanoid/main.cpp:190:0: information: Include file: <ode_robots/terrainground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/terrainground.h>
^
simulations/humanoid/main.cpp:191:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/humanoid/main.cpp:192:0: information: Include file: <ode_robots/sliderwheelie.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sliderwheelie.h>
^
simulations/humanoid/main.cpp:193:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/humanoid/main.cpp:194:0: information: Include file: <ode_robots/plattfussschlange.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/plattfussschlange.h>
^
simulations/humanoid/main.cpp:195:0: information: Include file: <ode_robots/addsensors2robotadapter.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/addsensors2robotadapter.h>
^
simulations/humanoid/main.cpp:197:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/humanoid/main.cpp:199:0: information: Include file: <ode_robots/sliderwheelie.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sliderwheelie.h>
^
simulations/humanoid/main.cpp:200:0: information: Include file: <ode_robots/schlangeservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo.h>
^
simulations/humanoid/main.cpp:201:0: information: Include file: <ode_robots/schlangeservo2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo2.h>
^
simulations/humanoid/main.cpp:202:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/humanoid/derlininvertmpi.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/homeok_vs_static/main_working_single_staticController.cpp:235:21: style: Condition 'i<0' is always false [knownConditionTrueFalse]
    for (int i=0; i < 0/*2*/; i++){
                    ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:235:16: note: Assignment 'i=0', assigned value is 0
    for (int i=0; i < 0/*2*/; i++){
               ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:235:21: note: Condition 'i<0' is always false
    for (int i=0; i < 0/*2*/; i++){
                    ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:377:14: warning: If resource allocation fails, then there is a possible null pointer dereference: file [nullPointerOutOfResources]
     fprintf(file,"%g  ", summed_path);
             ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:376:18: note: Assuming allocation function fails
     file = fopen(filename,"a");
                 ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:376:18: note: Assignment 'file=fopen(filename,"a")', assigned value is 0
     file = fopen(filename,"a");
                 ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:377:14: note: Null pointer dereference
     fprintf(file,"%g  ", summed_path);
             ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:480:11: warning: If resource allocation fails, then there is a possible null pointer dereference: filen [nullPointerOutOfResources]
  fprintf(filen,"#c  h  a \n");
          ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:479:16: note: Assuming allocation function fails
  filen = fopen(filename,"a");
               ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:479:16: note: Assignment 'filen=fopen(filename,"a")', assigned value is 0
  filen = fopen(filename,"a");
               ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:480:11: note: Null pointer dereference
  fprintf(filen,"#c  h  a \n");
          ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:506:19: warning: If resource allocation fails, then there is a possible null pointer dereference: filen [nullPointerOutOfResources]
          fprintf(filen,"%g   %g\n", ((double)c)/10.0, ((double)h)/10.0);
                  ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:504:24: note: Assuming allocation function fails
          filen = fopen(filename,"a");
                       ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:504:24: note: Assignment 'filen=fopen(filename,"a")', assigned value is 0
          filen = fopen(filename,"a");
                       ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:506:19: note: Null pointer dereference
          fprintf(filen,"%g   %g\n", ((double)c)/10.0, ((double)h)/10.0);
                  ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:518:13: warning: If resource allocation fails, then there is a possible null pointer dereference: file [nullPointerOutOfResources]
    fprintf(file,"\n");
            ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:517:17: note: Assuming allocation function fails
    file = fopen(filename,"a");
                ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:517:17: note: Assignment 'file=fopen(filename,"a")', assigned value is 0
    file = fopen(filename,"a");
                ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:518:13: note: Null pointer dereference
    fprintf(file,"\n");
            ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:515:10: style: Local variable 'filename' shadows outer variable [shadowVariable]
    char filename[256];
         ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:477:8: note: Shadowed declaration
  char filename[256];
       ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:515:10: note: Shadow variable
    char filename[256];
         ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:501:17: style: Local variable 'filen' shadows outer variable [shadowVariable]
          FILE* filen;
                ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:476:9: note: Shadowed declaration
  FILE* filen;
        ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:501:17: note: Shadow variable
          FILE* filen;
                ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:502:16: style: Local variable 'filename' shadows outer variable [shadowVariable]
          char filename[256];
               ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:477:8: note: Shadowed declaration
  char filename[256];
       ^
simulations/homeok_vs_static/main_working_single_staticController.cpp:502:16: note: Shadow variable
          char filename[256];
               ^
139/300 files checked 48% done
simulations/humanoid/derlininvertmpi.h:107:3: style: Class 'DerLinInvertMPI' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  DerLinInvertMPI(const DerLinInvertMPIConf& conf = getDefaultConf());
  ^
simulations/humanoid/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/humanoid/skeleton.cpp ...
simulations/humanoid/derskeleton.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/humanoid/derlininvertmpi.cpp:132:11: style: Variable 'randg' is assigned a value that is never used. [unreadVariable]
    randg = new RandGen();
          ^
140/300 files checked 48% done
simulations/humanoid/skeleton.cpp:107:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/humanoid/skeleton.cpp:108:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/humanoid/skeleton.cpp:111:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/humanoid/skeleton.cpp:114:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/humanoid/skeleton.cpp:115:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/humanoid/skeleton.cpp:116:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
simulations/humanoid/skeleton.cpp:117:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
simulations/humanoid/skeleton.cpp:118:0: information: Include file: <ode_robots/irsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/irsensor.h>
^
Checking simulations/humanoid/zweibeiner.cpp ...
simulations/humanoid/derskeleton.cpp:71:13: warning: Member variable 'Skeleton::pelvisservo' is not initialized in the constructor. [uninitMemberVar]
  Skeleton::Skeleton(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
            ^
simulations/humanoid/derskeleton.h:129:24: style: Variable 'c.hip2JointLimit' is reassigned a value before the old one has been used. [redundantAssignment]
      c.hip2JointLimit = M_PI/30; // +- 6 degree
                       ^
simulations/humanoid/derskeleton.h:109:23: note: c.hip2JointLimit is assigned
      c.hip2JointLimit=0.05;
                      ^
simulations/humanoid/derskeleton.h:129:24: note: c.hip2JointLimit is overwritten
      c.hip2JointLimit = M_PI/30; // +- 6 degree
                       ^
simulations/humanoid/zweibeiner.cpp:53:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/humanoid/zweibeiner.cpp:54:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/humanoid/zweibeiner.cpp:57:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/humanoid/zweibeiner.cpp:60:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/humanoid/zweibeiner.cpp:61:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/humanoid/zweibeiner.cpp:62:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
simulations/humanoid/derskeleton.cpp:220:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
simulations/humanoid/derskeleton.cpp:223:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
simulations/humanoid/derskeleton.cpp:537:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                          ^
simulations/humanoid/derskeleton.cpp:542:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                                ^
141/300 files checked 49% done
simulations/humanoid/skeleton.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/humanoid_DEP/main.cpp ...
simulations/humanoid_DEP/main.cpp:64:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/humanoid_DEP/main.cpp:66:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/humanoid_DEP/main.cpp:67:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/humanoid_DEP/main.cpp:68:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/humanoid_DEP/main.cpp:69:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/humanoid_DEP/main.cpp:72:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/humanoid_DEP/main.cpp:73:0: information: Include file: <selforg/forceboostwiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/forceboostwiring.h>
^
simulations/humanoid_DEP/main.cpp:74:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/humanoid_DEP/main.cpp:75:0: information: Include file: <selforg/motornoisewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/motornoisewiring.h>
^
simulations/humanoid_DEP/main.cpp:76:0: information: Include file: <selforg/copywiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/copywiring.h>
^
simulations/humanoid_DEP/main.cpp:77:0: information: Include file: <selforg/ringbuffer.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/ringbuffer.h>
^
simulations/humanoid_DEP/main.cpp:78:0: information: Include file: <selforg/motorbabbler.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/motorbabbler.h>
^
simulations/humanoid_DEP/skeleton.h:27:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
simulations/humanoid_DEP/skeleton.h:28:0: information: Include file: <ode_robots/gripper.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/gripper.h>
^
simulations/humanoid_DEP/main.cpp:83:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/humanoid_DEP/main.cpp:84:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/humanoid_DEP/main.cpp:85:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/humanoid_DEP/main.cpp:86:0: information: Include file: <ode_robots/delaysensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/delaysensor.h>
^
simulations/humanoid_DEP/main.cpp:87:0: information: Include file: <ode_robots/relativepositionsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/relativepositionsensor.h>
^
simulations/humanoid_DEP/main.cpp:89:0: information: Include file: <ode_robots/operators.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/operators.h>
^
simulations/humanoid_DEP/main.cpp:90:0: information: Include file: <ode_robots/tmpprimitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/tmpprimitive.h>
^
simulations/humanoid_DEP/main.cpp:93:0: information: Include file: <selforg/soml.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/soml.h>
^
simulations/humanoid_DEP/main.cpp:94:0: information: Include file: <selforg/sox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sox.h>
^
simulations/humanoid_DEP/main.cpp:95:0: information: Include file: <selforg/dep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/dep.h>
^
simulations/humanoid_DEP/randomdyn.h:22:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulations/humanoid_DEP/randomdyn.h:23:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/humanoid_DEP/randomdyn.h:25:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/humanoid_DEP/randomdyn.h:26:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/humanoid_DEP/randomdyn.h:28:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/humanoid_DEP/main.cpp:97:0: information: Include file: <selforg/remotecontrolled.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/remotecontrolled.h>
^
simulations/humanoid_DEP/environment.h:27:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/humanoid_DEP/environment.h:28:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/humanoid_DEP/environment.h:30:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/humanoid_DEP/environment.h:31:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/humanoid_DEP/environment.h:32:0: information: Include file: <ode_robots/passivecapsule.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivecapsule.h>
^
simulations/humanoid_DEP/environment.h:33:0: information: Include file: <ode_robots/seesaw.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/seesaw.h>
^
simulations/humanoid_DEP/environment.h:34:0: information: Include file: <ode_robots/boxpile.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/boxpile.h>
^
simulations/humanoid/main.cpp:713:11: warning: Opposite inner 'if' condition leads to a dead code block. [oppositeInnerCondition]
     if (i==0) {
          ^
simulations/humanoid/main.cpp:245:19: note: 'snakes' is assigned value '0' here.
     int snakes = 0;
                  ^
simulations/humanoid/main.cpp:640:18: note: outer condition: i<snakes
   for(int i=0; i<snakes; i++){
                 ^
simulations/humanoid/main.cpp:713:11: note: opposite inner condition: i==0
     if (i==0) {
          ^
simulations/humanoid/main.cpp:730:11: warning: Opposite inner 'if' condition leads to a dead code block. [oppositeInnerCondition]
     if (i==0) {
          ^
simulations/humanoid/main.cpp:245:19: note: 'snakes' is assigned value '0' here.
     int snakes = 0;
                  ^
simulations/humanoid/main.cpp:640:18: note: outer condition: i<snakes
   for(int i=0; i<snakes; i++){
                 ^
simulations/humanoid/main.cpp:730:11: note: opposite inner condition: i==0
     if (i==0) {
          ^
simulations/humanoid/main.cpp:847:11: warning: Opposite inner 'if' condition leads to a dead code block. [oppositeInnerCondition]
     if (i==0) {
          ^
simulations/humanoid/main.cpp:244:24: note: 'flatsnakes' is assigned value '0' here.
     int flatsnakes  = 0;
                       ^
simulations/humanoid/main.cpp:833:18: note: outer condition: i<flatsnakes
   for(int i=0; i<flatsnakes; i++){
                 ^
simulations/humanoid/main.cpp:847:11: note: opposite inner condition: i==0
     if (i==0) {
          ^
simulations/humanoid/main.cpp:863:11: warning: Opposite inner 'if' condition leads to a dead code block. [oppositeInnerCondition]
     if (i==0) {
          ^
simulations/humanoid/main.cpp:244:24: note: 'flatsnakes' is assigned value '0' here.
     int flatsnakes  = 0;
                       ^
simulations/humanoid/main.cpp:833:18: note: outer condition: i<flatsnakes
   for(int i=0; i<flatsnakes; i++){
                 ^
simulations/humanoid/main.cpp:863:11: note: opposite inner condition: i==0
     if (i==0) {
          ^
simulations/humanoid/main.cpp:349:7: style: Condition 'narrow' is always false [knownConditionTrueFalse]
   if(narrow){
      ^
simulations/humanoid/main.cpp:262:19: note: Assignment 'narrow=false', assigned value is 0
    bool narrow = false;
                  ^
simulations/humanoid/main.cpp:349:7: note: Condition 'narrow' is always false
   if(narrow){
      ^
simulations/humanoid/main.cpp:446:9: style: Condition 'reckturner' is always false [knownConditionTrueFalse]
     if(reckturner)      conf.armPower = 30;
        ^
simulations/humanoid/main.cpp:260:18: note: Assignment 'reckturner=false', assigned value is 0
    reckturner = false;
                 ^
simulations/humanoid/main.cpp:446:9: note: Condition 'reckturner' is always false
     if(reckturner)      conf.armPower = 30;
        ^
simulations/humanoid/main.cpp:449:11: style: Condition 'i==0' is always true [knownConditionTrueFalse]
     if (i==0)
          ^
simulations/humanoid/main.cpp:415:15: note: Assignment 'i=0', assigned value is 0
   for (int i=0; i< humanoids; i++){ //Several humans
              ^
simulations/humanoid/main.cpp:251:19: note: Assignment 'humanoids=1', assigned value is 1
    int humanoids=1;
                  ^
simulations/humanoid/main.cpp:415:19: note: Assuming that condition 'i<humanoids' is not redundant
   for (int i=0; i< humanoids; i++){ //Several humans
                  ^
simulations/humanoid/main.cpp:449:11: note: Condition 'i==0' is always true
     if (i==0)
          ^
simulations/humanoid/skeleton.h:261:24: style: Variable 'c.hip2JointLimit' is reassigned a value before the old one has been used. [redundantAssignment]
      c.hip2JointLimit = M_PI/30; // +- 6 degree
                       ^
simulations/humanoid/skeleton.h:254:23: note: c.hip2JointLimit is assigned
      c.hip2JointLimit=0.05;
                      ^
simulations/humanoid/skeleton.h:261:24: note: c.hip2JointLimit is overwritten
      c.hip2JointLimit = M_PI/30; // +- 6 degree
                       ^
simulations/humanoid/main.cpp:300:23: style: Local variable 'playground' shadows outer variable [shadowVariable]
      OctaPlayground* playground =
                      ^
simulations/humanoid/main.cpp:223:15: note: Shadowed declaration
  Playground* playground;
              ^
simulations/humanoid/main.cpp:300:23: note: Shadow variable
      OctaPlayground* playground =
                      ^
simulations/humanoid/main.cpp:934:13: style: Local variable 'height' shadows outer variable [shadowVariable]
     double height = 2;
            ^
simulations/humanoid/main.cpp:832:11: note: Shadowed declaration
   double height =.1;
          ^
simulations/humanoid/main.cpp:934:13: note: Shadow variable
     double height = 2;
            ^
142/300 files checked 50% done
simulations/humanoid_DEP/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/humanoid_DEP/randomdyn.cpp ...
simulations/humanoid_DEP/randomdyn.cpp:25:12: warning: Member variable 'RandomDyn::number_sensors' is not initialized in the constructor. [uninitMemberVar]
RandomDyn::RandomDyn(const RandomDynConf& conf_)
           ^
simulations/humanoid_DEP/randomdyn.cpp:25:12: warning: Member variable 'RandomDyn::number_motors' is not initialized in the constructor. [uninitMemberVar]
RandomDyn::RandomDyn(const RandomDynConf& conf_)
           ^
simulations/humanoid_DEP/randomdyn.cpp:25:12: warning: Member variable 'RandomDyn::randGenC' is not initialized in the constructor. [uninitMemberVar]
RandomDyn::RandomDyn(const RandomDynConf& conf_)
           ^
simulations/humanoid_DEP/randomdyn.cpp:25:12: warning: Member variable 'RandomDyn::randGenh' is not initialized in the constructor. [uninitMemberVar]
RandomDyn::RandomDyn(const RandomDynConf& conf_)
           ^
simulations/humanoid_DEP/randomdyn.h:47:3: style: Class 'RandomDyn' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  RandomDyn(const RandomDynConf& conf = getDefaultConf());
  ^
143/300 files checked 50% done
simulations/humanoid/zweibeiner.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/humanoid_DEP/skeleton.cpp ...
simulations/humanoid_DEP/skeleton.cpp:24:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/humanoid_DEP/skeleton.cpp:25:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/humanoid_DEP/skeleton.cpp:28:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/humanoid_DEP/skeleton.cpp:31:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/humanoid_DEP/skeleton.cpp:32:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/humanoid_DEP/skeleton.cpp:33:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
simulations/humanoid_DEP/skeleton.cpp:34:0: information: Include file: <ode_robots/angularmotor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/angularmotor.h>
^
simulations/humanoid_DEP/skeleton.cpp:35:0: information: Include file: <ode_robots/irsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/irsensor.h>
^
simulations/humanoid_DEP/skeleton.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/humanoid_DEP/skeleton.cpp:47:13: warning: Member variable 'Skeleton::pelvisservo' is not initialized in the constructor. [uninitMemberVar]
  Skeleton::Skeleton(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
            ^
simulations/humanoid_DEP/skeleton.cpp:47:13: warning: Member variable 'Skeleton::backbendindex' is not initialized in the constructor. [uninitMemberVar]
  Skeleton::Skeleton(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
            ^
simulations/humanoid_DEP/skeleton.h:291:18: style: Virtual function 'destroy' is called from destructor '~Skeleton()' at line 146. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void destroy() override;
                 ^
simulations/humanoid_DEP/skeleton.h:146:26: note: Calling destroy
    virtual ~Skeleton(){ destroy(); };
                         ^
simulations/humanoid_DEP/skeleton.h:291:18: note: destroy is a virtual function
    virtual void destroy() override;
                 ^
simulations/humanoid_DEP/skeleton.cpp:1123:13: warning: Either the condition 'o' is redundant or there is possible null pointer dereference: o. [nullPointerRedundantCheck]
    else if(o->getBody())
            ^
simulations/humanoid_DEP/skeleton.cpp:1121:9: note: Assuming that condition 'o' is not redundant
    if (o && o->getGeom())
        ^
simulations/humanoid_DEP/skeleton.cpp:1123:13: note: Null pointer dereference
    else if(o->getBody())
            ^
simulations/humanoid_DEP/skeleton.cpp:1134:13: warning: Either the condition 'o' is redundant or there is possible null pointer dereference: o. [nullPointerRedundantCheck]
    else if(o->getBody())
            ^
simulations/humanoid_DEP/skeleton.cpp:1132:9: note: Assuming that condition 'o' is not redundant
    if (o && o->getGeom())
        ^
simulations/humanoid_DEP/skeleton.cpp:1134:13: note: Null pointer dereference
    else if(o->getBody())
            ^
simulations/humanoid_DEP/skeleton.cpp:369:17: style: The scope of the variable 'bj' can be reduced. [variableScope]
    BallJoint*  bj;
                ^
simulations/humanoid_DEP/skeleton.cpp:360:15: style: Local variable 'ignoreColSpace' shadows outer variable [shadowVariable]
    OdeHandle ignoreColSpace(odeHandle);
              ^
simulations/humanoid_DEP/skeleton.h:297:15: note: Shadowed declaration
    OdeHandle ignoreColSpace; // odehandle with space within collisions are ignored
              ^
simulations/humanoid_DEP/skeleton.cpp:360:15: note: Shadow variable
    OdeHandle ignoreColSpace(odeHandle);
              ^
144/300 files checked 51% done
Checking simulations/hunde/main.cpp ...
simulations/humanoid_DEP/environment.h:41:3: warning: Member variable 'WheelTrainer::wheel' is not initialized in the constructor. [uninitMemberVar]
  WheelTrainer(bool forTwo=false, bool upperWheel=true)
  ^
simulations/humanoid_DEP/environment.h:41:3: warning: Member variable 'WheelTrainer::stand' is not initialized in the constructor. [uninitMemberVar]
  WheelTrainer(bool forTwo=false, bool upperWheel=true)
  ^
simulations/humanoid_DEP/environment.h:41:3: warning: Member variable 'WheelTrainer::joint' is not initialized in the constructor. [uninitMemberVar]
  WheelTrainer(bool forTwo=false, bool upperWheel=true)
  ^
simulations/humanoid_DEP/environment.h:182:3: warning: Member variable 'Env::heightground' is not initialized in the constructor. [uninitMemberVar]
  Env(EnvType t = None) : Configurable("Environment","1.0") {
  ^
simulations/humanoid_DEP/environment.h:182:3: warning: Member variable 'Env::wheelmass' is not initialized in the constructor. [uninitMemberVar]
  Env(EnvType t = None) : Configurable("Environment","1.0") {
  ^
simulations/humanoid_DEP/environment.h:182:3: warning: Member variable 'Env::global' is not initialized in the constructor. [uninitMemberVar]
  Env(EnvType t = None) : Configurable("Environment","1.0") {
  ^
simulations/humanoid_DEP/main.cpp:243:3: warning: Member variable 'ThisSim::fixedSegm' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(SimType type)
  ^
simulations/humanoid_DEP/main.cpp:243:3: warning: Member variable 'ThisSim::fixator' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(SimType type)
  ^
simulations/humanoid_DEP/main.cpp:243:3: warning: Member variable 'ThisSim::leftHandJoint' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(SimType type)
  ^
simulations/humanoid_DEP/main.cpp:243:3: warning: Member variable 'ThisSim::rightHandJoint' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(SimType type)
  ^
simulations/humanoid_DEP/main.cpp:243:3: warning: Member variable 'ThisSim::reck' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(SimType type)
  ^
simulations/humanoid_DEP/main.cpp:243:3: warning: Member variable 'ThisSim::playground' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(SimType type)
  ^
simulations/humanoid_DEP/main.cpp:243:3: warning: Member variable 'ThisSim::hardness' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(SimType type)
  ^
simulations/humanoid_DEP/main.cpp:243:3: warning: Member variable 'ThisSim::connector' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(SimType type)
  ^
simulations/humanoid_DEP/main.cpp:243:3: warning: Member variable 'ThisSim::reckX' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(SimType type)
  ^
simulations/humanoid_DEP/main.cpp:243:3: warning: Member variable 'ThisSim::reckY' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(SimType type)
  ^
simulations/humanoid_DEP/main.cpp:243:3: warning: Member variable 'ThisSim::reckZ' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(SimType type)
  ^
simulations/humanoid_DEP/main.cpp:243:3: warning: Member variable 'ThisSim::tableForce' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(SimType type)
  ^
simulations/humanoid_DEP/environment.h:187:5: performance: Variable 'pitPosition' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    pitPosition  = Pos(0,0,0);
    ^
simulations/humanoid_DEP/environment.h:41:3: style: Class 'WheelTrainer' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  WheelTrainer(bool forTwo=false, bool upperWheel=true)
  ^
simulations/humanoid_DEP/environment.h:182:3: style: Class 'Env' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Env(EnvType t = None) : Configurable("Environment","1.0") {
  ^
simulations/humanoid_DEP/main.cpp:110:3: style: Class 'SensorsOther' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SensorsOther(int number)
  ^
simulations/humanoid_DEP/main.cpp:243:3: style: Class 'ThisSim' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ThisSim(SimType type)
  ^
simulations/hunde/main.cpp:77:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/hunde/main.cpp:80:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/hunde/main.cpp:83:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/hunde/main.cpp:86:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/hunde/main.cpp:89:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/hunde/main.cpp:92:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/hunde/main.cpp:93:0: information: Include file: <selforg/feedbackwiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/feedbackwiring.h>
^
simulations/hunde/main.cpp:94:0: information: Include file: <selforg/wiringsequence.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/wiringsequence.h>
^
simulations/hunde/main.cpp:101:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/hunde/main.cpp:103:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/hunde/main.cpp:104:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/hunde/main.cpp:108:0: information: Include file: <selforg/derpseudosensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derpseudosensor.h>
^
simulations/hunde/main.cpp:109:0: information: Include file: <selforg/derbigcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derbigcontroller.h>
^
simulations/hunde/main.cpp:111:0: information: Include file: <selforg/dercontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/dercontroller.h>
^
simulations/hunde/main.cpp:112:0: information: Include file: <selforg/invertmotorbigmodel.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorbigmodel.h>
^
simulations/hunde/main.cpp:113:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/hunde/main.cpp:114:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/hunde/main.cpp:115:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/hunde/main.cpp:116:0: information: Include file: <selforg/universalcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/universalcontroller.h>
^
simulations/hunde/walkcontroller.h:36:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/hunde/walkcontroller.h:37:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulations/hunde/main.cpp:120:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/hunde/main.cpp:121:0: information: Include file: <ode_robots/terrainground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/terrainground.h>
^
simulations/hunde/main.cpp:122:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/hunde/main.cpp:123:0: information: Include file: <ode_robots/sliderwheelie.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sliderwheelie.h>
^
simulations/hunde/main.cpp:124:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/hunde/main.cpp:185:5: error: syntax error [syntaxError]
    for (int i=0; i< anzgrounds; i++){
    ^
145/300 files checked 52% done
Checking simulations/hunde/vierbeiner.cpp ...
simulations/humanoid_DEP/environment.h:92:16: style: The scope of the variable 'p' can be reduced. [variableScope]
    Primitive* p;
               ^
simulations/humanoid_DEP/environment.h:459:16: style: Local variable 'thickness' shadows outer variable [shadowVariable]
        double thickness = 0.4;
               ^
simulations/humanoid_DEP/environment.h:260:10: note: Shadowed declaration
  double thickness;
         ^
simulations/humanoid_DEP/environment.h:459:16: note: Shadow variable
        double thickness = 0.4;
               ^
simulations/humanoid_DEP/environment.h:467:23: style: Local variable 'playground' shadows outer variable [shadowVariable]
          Playground* playground = new Playground(myHandle, osgHandle,
                      ^
simulations/humanoid_DEP/environment.h:314:21: note: Shadowed declaration
    AbstractGround* playground;
                    ^
simulations/humanoid_DEP/environment.h:467:23: note: Shadow variable
          Playground* playground = new Playground(myHandle, osgHandle,
                      ^
simulations/humanoid_DEP/main.cpp:480:14: style: Local variable 's' shadows outer variable [shadowVariable]
        auto s = std::make_shared<SensorsOther>(18);
             ^
simulations/humanoid_DEP/main.cpp:231:13: note: Shadowed declaration
  Substance s;
            ^
simulations/humanoid_DEP/main.cpp:480:14: note: Shadow variable
        auto s = std::make_shared<SensorsOther>(18);
             ^
simulations/hunde/vierbeiner.cpp:79:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/humanoid_DEP/main.cpp:554:17: style: Local variable 'i' shadows outer variable [shadowVariable]
        for(int i=0; i<18;i++){
                ^
simulations/humanoid_DEP/main.cpp:386:14: note: Shadowed declaration
    for (int i=0; i< humanoids; i++){ //Several humans
             ^
simulations/humanoid_DEP/main.cpp:554:17: note: Shadow variable
        for(int i=0; i<18;i++){
                ^
simulations/hunde/vierbeiner.cpp:80:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/humanoid_DEP/main.cpp:600:25: style: Local variable 'conf' shadows outer variable [shadowVariable]
          RandomDynConf conf = RandomDyn::getDefaultConf();
                        ^
simulations/humanoid_DEP/main.cpp:394:20: note: Shadowed declaration
      SkeletonConf conf = Skeleton::getDefaultConfVelServos();
                   ^
simulations/humanoid_DEP/main.cpp:600:25: note: Shadow variable
          RandomDynConf conf = RandomDyn::getDefaultConf();
                        ^
simulations/hunde/vierbeiner.cpp:83:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/hunde/vierbeiner.cpp:86:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/hunde/vierbeiner.cpp:87:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/humanoid_DEP/main.cpp:821:13: style: Variable 'index' can be declared as const array [constVariable]
        int index[2] = {Skeleton::Right_Hand, Skeleton::Left_Hand};
            ^
146/300 files checked 53% done
simulations/hunde/vierbeiner.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/hunde/walkcontroller.cpp ...
simulations/hunde/walkcontroller.cpp:32:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/hunde/walkcontroller.cpp:33:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
simulations/hunde/walkcontroller.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/hunde/walkcontroller.cpp:72:10: style: Variable 'phases' can be declared as const array [constVariable]
  double phases[4]= { w + 2*(M_PI/2),
         ^
147/300 files checked 53% done
Checking simulations/hurling_snake/main.cpp ...
simulations/humanoid/zweibeiner.cpp:74:15: warning: Member variable 'ZweiBeiner::rightfeed' is not initialized in the constructor. [uninitMemberVar]
  ZweiBeiner::ZweiBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
simulations/humanoid/zweibeiner.cpp:74:15: warning: Member variable 'ZweiBeiner::leftfeed' is not initialized in the constructor. [uninitMemberVar]
  ZweiBeiner::ZweiBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
simulations/humanoid/zweibeiner.cpp:74:15: warning: Member variable 'ZweiBeiner::rightlowerleg' is not initialized in the constructor. [uninitMemberVar]
  ZweiBeiner::ZweiBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
simulations/humanoid/zweibeiner.cpp:74:15: warning: Member variable 'ZweiBeiner::leftlowerleg' is not initialized in the constructor. [uninitMemberVar]
  ZweiBeiner::ZweiBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
simulations/humanoid/zweibeiner.cpp:308:26: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      double l1 =       n<2 ? conf.legLength*0.45 : conf.legLength*0.5;
                         ^
simulations/humanoid/zweibeiner.cpp:310:26: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      double hipangle = n<2 ? -M_PI/18 : -M_PI/18;
                         ^
simulations/humanoid/zweibeiner.cpp:313:26: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      double l2 =       n<2 ? conf.legLength*0.45 : conf.legLength*0.5;
                         ^
simulations/humanoid/zweibeiner.cpp:315:27: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      double kneeangle = n<2 ? M_PI/5 : -M_PI/5;
                          ^
simulations/humanoid/zweibeiner.cpp:318:20: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      double l3 = n<2 ? conf.legLength*0.25 : 0;  // front legs have no feet
                   ^
simulations/humanoid/zweibeiner.cpp:320:28: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      double ankleangle = n<2 ? -M_PI/3 : 0;
                           ^
simulations/humanoid/zweibeiner.cpp:328:22: style: Condition 'n<2' is always true [knownConditionTrueFalse]
                    n<2 ? conf.legLength  : conf.legLength - theight/3);
                     ^
simulations/humanoid/zweibeiner.cpp:354:63: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      j = new HingeJoint(p1, p2, Pos(0,0,-l1/2) * m1, Axis(0,n<2 ? -1 : 1,0) * m1);
                                                              ^
simulations/humanoid/zweibeiner.cpp:367:11: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      if(n<2){
          ^
simulations/humanoid/zweibeiner.cpp:310:40: style: Same value in both branches of ternary operator. [duplicateValueTernary]
      double hipangle = n<2 ? -M_PI/18 : -M_PI/18;
                                       ^
simulations/hurling_snake/main.cpp:77:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/hurling_snake/main.cpp:79:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/hurling_snake/main.cpp:80:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/hurling_snake/main.cpp:81:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/hurling_snake/main.cpp:82:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/hurling_snake/main.cpp:83:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/hurling_snake/main.cpp:84:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/hurling_snake/main.cpp:85:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/hurling_snake/main.cpp:87:0: information: Include file: <ode_robots/hurlingsnake.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/hurlingsnake.h>
^
simulations/hurling_snake/main.cpp:89:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/hurling_snake/main.cpp:90:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/hurling_snake/main.cpp:91:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/hurling_snake/main.cpp:92:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/humanoid/zweibeiner.cpp:318:14: style: The scope of the variable 'l3' can be reduced. [variableScope]
      double l3 = n<2 ? conf.legLength*0.25 : 0;  // front legs have no feet
             ^
simulations/humanoid/zweibeiner.cpp:320:14: style: The scope of the variable 'ankleangle' can be reduced. [variableScope]
      double ankleangle = n<2 ? -M_PI/3 : 0;
             ^
simulations/humanoid/zweibeiner.cpp:321:14: style: The scope of the variable 'anklelowstop' can be reduced. [variableScope]
      double anklelowstop = -M_PI/5;
             ^
simulations/humanoid/zweibeiner.cpp:322:14: style: The scope of the variable 'anklehighstop' can be reduced. [variableScope]
      double anklehighstop = M_PI/5;
             ^
simulations/hurling_snake/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/humanoid/zweibeiner.h:129:14: error: Uninitialized variable: c.onlyPrimaryFunctions [uninitvar]
      return c;
             ^
simulations/humanoid/zweibeiner.h:129:14: error: Uninitialized struct member: c.onlyPrimaryFunctions [uninitStructMember]
      return c;
             ^
simulations/humanoid/zweibeiner.cpp:198:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
simulations/humanoid/zweibeiner.cpp:201:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
simulations/humanoid/zweibeiner.cpp:405:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                                ^
simulations/humanoid/zweibeiner.cpp:409:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                          ^
148/300 files checked 53% done
Checking simulations/iafsim/main.cpp ...
simulations/hurling_snake/main.cpp:135:12: warning: Opposite inner 'if' condition leads to a dead code block. [oppositeInnerCondition]
      if (i==1) col=Color(0,2,0);
           ^
simulations/hurling_snake/main.cpp:131:20: note: outer condition: i<1
    for (int i=0; i<1; i++){
                   ^
simulations/hurling_snake/main.cpp:135:12: note: opposite inner condition: i==1
      if (i==1) col=Color(0,2,0);
           ^
simulations/hurling_snake/main.cpp:136:12: warning: Opposite inner 'if' condition leads to a dead code block. [oppositeInnerCondition]
      if (i==2) col=Color(0,2,2);
           ^
simulations/hurling_snake/main.cpp:131:20: note: outer condition: i<1
    for (int i=0; i<1; i++){
                   ^
simulations/hurling_snake/main.cpp:136:12: note: opposite inner condition: i==2
      if (i==2) col=Color(0,2,2);
           ^
simulations/hurling_snake/main.cpp:134:12: style: Condition 'i==0' is always true [knownConditionTrueFalse]
      if (i==0) col=Color(2,2,0);
           ^
simulations/hurling_snake/main.cpp:131:16: note: Assignment 'i=0', assigned value is 0
    for (int i=0; i<1; i++){
               ^
simulations/hurling_snake/main.cpp:131:20: note: Assuming that condition 'i<1' is not redundant
    for (int i=0; i<1; i++){
                   ^
simulations/hurling_snake/main.cpp:134:12: note: Condition 'i==0' is always true
      if (i==0) col=Color(2,2,0);
           ^
simulations/hurling_snake/main.cpp:160:12: style: Condition 'i==0' is always true [knownConditionTrueFalse]
      if (i==0) agent = new OdeAgent(global);
           ^
simulations/hurling_snake/main.cpp:131:16: note: Assignment 'i=0', assigned value is 0
    for (int i=0; i<1; i++){
               ^
simulations/hurling_snake/main.cpp:131:20: note: Assuming that condition 'i<1' is not redundant
    for (int i=0; i<1; i++){
                   ^
simulations/hurling_snake/main.cpp:160:12: note: Condition 'i==0' is always true
      if (i==0) agent = new OdeAgent(global);
           ^
simulations/hurling_snake/main.cpp:137:8: style: C-style pointer casting [cstyleCast]
      ((OdeRobot* )hs)->place(Pos(-5,(i-1)*5,0.0));
       ^
simulations/hurling_snake/main.cpp:126:19: style: The scope of the variable 'hs' can be reduced. [variableScope]
    HurlingSnake* hs;
                  ^
simulations/hurling_snake/main.cpp:127:25: style: The scope of the variable 'controller' can be reduced. [variableScope]
    AbstractController *controller;
                        ^
simulations/hurling_snake/main.cpp:128:21: style: The scope of the variable 'wiring' can be reduced. [variableScope]
    AbstractWiring* wiring;
                    ^
149/300 files checked 54% done
Checking simulations/iafsim/tristateiafcontroller.cpp ...
simulations/iafsim/main.cpp:53:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/iafsim/main.cpp:56:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/iafsim/main.cpp:62:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/iafsim/main.cpp:65:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/iafsim/main.cpp:68:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/iafsim/main.cpp:72:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/iafsim/main.cpp:77:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/iafsim/tristateiafcontroller.h:62:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulations/iafsim/tristateiafcontroller.h:64:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/iafsim/tristateiafcontroller.h:65:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/iafsim/tristateiafcontroller.h:66:0: information: Include file: <selforg/configurable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/configurable.h>
^
simulations/iafsim/main.cpp:83:0: information: Include file: <selforg/abstractiafcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractiafcontroller.h>
^
simulations/iafsim/tristateiafcontroller.cpp:40:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/iafsim/tristateiafcontroller.cpp:41:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/iafsim/tristateiafcontroller.h:69:3: warning: Member variable 'TristateIAFControllerConf::numberIAFNeuronsPerInput' is not initialized in the constructor. [uninitMemberVar]
  TristateIAFControllerConf() {
  ^
simulations/iafsim/tristateiafcontroller.h:69:3: warning: Member variable 'TristateIAFControllerConf::numberIAFNeuronsPerOutput' is not initialized in the constructor. [uninitMemberVar]
  TristateIAFControllerConf() {
  ^
simulations/iafsim/tristateiafcontroller.h:69:3: warning: Member variable 'TristateIAFControllerConf::wIInitScale' is not initialized in the constructor. [uninitMemberVar]
  TristateIAFControllerConf() {
  ^
simulations/iafsim/tristateiafcontroller.h:69:3: warning: Member variable 'TristateIAFControllerConf::wOInitScale' is not initialized in the constructor. [uninitMemberVar]
  TristateIAFControllerConf() {
  ^
simulations/iafsim/tristateiafcontroller.h:104:3: style: Class 'TristateIAFController' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  TristateIAFController(const TristateIAFControllerConf& conf = getDefaultConf());
  ^
simulations/iafsim/tristateiafcontroller.h:70:16: style: C-style pointer casting [cstyleCast]
    thresholdI=(Configurable::paramval*) malloc(sizeof(Configurable::paramval));
               ^
simulations/iafsim/tristateiafcontroller.h:71:16: style: C-style pointer casting [cstyleCast]
    thresholdO=(Configurable::paramval*) malloc(sizeof(Configurable::paramval));
               ^
simulations/iafsim/tristateiafcontroller.h:72:11: style: C-style pointer casting [cstyleCast]
    leakI=(Configurable::paramval*) malloc(sizeof(Configurable::paramval));
          ^
simulations/iafsim/tristateiafcontroller.h:73:11: style: C-style pointer casting [cstyleCast]
    leakO=(Configurable::paramval*) malloc(sizeof(Configurable::paramval));
          ^
simulations/iafsim/tristateiafcontroller.h:169:18: style: C-style pointer casting [cstyleCast]
    RandGen* g = (RandGen*) r;
                 ^
simulations/iafsim/tristateiafcontroller.h:185:20: style: C-style pointer casting [cstyleCast]
    double damp = *(double*)r;
                   ^
150/300 files checked 54% done
Checking simulations/life_vs_copy/main.cpp ...
simulations/iafsim/tristateiafcontroller.cpp:43:24: warning: Member variable 'TristateIAFController::randG' is not initialized in the constructor. [uninitMemberVar]
TristateIAFController::TristateIAFController(const TristateIAFControllerConf& conf)
                       ^
simulations/iafsim/tristateiafcontroller.cpp:43:24: warning: Member variable 'TristateIAFController::sensorNumber' is not initialized in the constructor. [uninitMemberVar]
TristateIAFController::TristateIAFController(const TristateIAFControllerConf& conf)
                       ^
simulations/iafsim/tristateiafcontroller.cpp:43:24: warning: Member variable 'TristateIAFController::motorNumber' is not initialized in the constructor. [uninitMemberVar]
TristateIAFController::TristateIAFController(const TristateIAFControllerConf& conf)
                       ^
151/300 files checked 54% done
simulations/life_vs_copy/main.cpp:22:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/life_vs_copy/main.cpp:24:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/life_vs_copy/main.cpp:25:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/life_vs_copy/main.cpp:26:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
Checking simulations/life_vs_copy/pimax.cpp ...
simulations/life_vs_copy/main.cpp:27:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/life_vs_copy/main.cpp:30:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/life_vs_copy/main.cpp:31:0: information: Include file: <selforg/forceboostwiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/forceboostwiring.h>
^
simulations/life_vs_copy/main.cpp:32:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/life_vs_copy/main.cpp:34:0: information: Include file: <ode_robots/skeleton.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/skeleton.h>
^
simulations/life_vs_copy/main.cpp:36:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/life_vs_copy/main.cpp:37:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/life_vs_copy/main.cpp:38:0: information: Include file: <ode_robots/addsensors2robotadapter.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/addsensors2robotadapter.h>
^
simulations/life_vs_copy/main.cpp:40:0: information: Include file: <ode_robots/operators.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/operators.h>
^
simulations/life_vs_copy/main.cpp:41:0: information: Include file: <ode_robots/tmpprimitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/tmpprimitive.h>
^
simulations/life_vs_copy/main.cpp:44:0: information: Include file: <selforg/soml.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/soml.h>
^
simulations/life_vs_copy/main.cpp:45:0: information: Include file: <selforg/sox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sox.h>
^
simulations/life_vs_copy/main.cpp:47:0: information: Include file: <selforg/remotecontrolled.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/remotecontrolled.h>
^
simulations/life_vs_copy/pimax.h:22:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulations/life_vs_copy/pimax.h:23:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/life_vs_copy/pimax.h:25:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/life_vs_copy/pimax.h:26:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/life_vs_copy/pimax.h:28:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/life_vs_copy/pimax.h:29:0: information: Include file: <selforg/teachable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/teachable.h>
^
simulations/life_vs_copy/environment.h:27:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/life_vs_copy/environment.h:28:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/life_vs_copy/environment.h:30:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/life_vs_copy/environment.h:31:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/life_vs_copy/environment.h:32:0: information: Include file: <ode_robots/passivecapsule.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivecapsule.h>
^
simulations/life_vs_copy/environment.h:33:0: information: Include file: <ode_robots/seesaw.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/seesaw.h>
^
simulations/life_vs_copy/environment.h:34:0: information: Include file: <ode_robots/boxpile.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/boxpile.h>
^
simulations/life_vs_copy/pimax.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/life_vs_copy/pimax.cpp:24:8: warning: Member variable 'PiMax::number_sensors' is not initialized in the constructor. [uninitMemberVar]
PiMax::PiMax(const PiMaxConf& conf_)
       ^
simulations/life_vs_copy/pimax.cpp:24:8: warning: Member variable 'PiMax::number_motors' is not initialized in the constructor. [uninitMemberVar]
PiMax::PiMax(const PiMaxConf& conf_)
       ^
simulations/life_vs_copy/pimax.h:56:3: style: Class 'PiMax' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  PiMax(const PiMaxConf& conf = getDefaultConf());
  ^
simulations/life_vs_copy/pimax.cpp:238:17: style: Local variable 's' shadows outer variable [shadowVariable]
  const Matrix& s       =  s_buffer[(t - 1) % buffersize];
                ^
simulations/life_vs_copy/pimax.h:136:18: note: Shadowed declaration
  matrix::Matrix s;        // current sensor value vector
                 ^
simulations/life_vs_copy/pimax.cpp:238:17: note: Shadow variable
  const Matrix& s       =  s_buffer[(t - 1) % buffersize];
                ^
simulations/life_vs_copy/pimax.cpp:80:24: style: Variable 'randGen' is assigned a value that is never used. [unreadVariable]
  if(!randGen) randGen = new RandGen(); // this gives a small memory leak
                       ^
152/300 files checked 54% done
Checking simulations/meshsim/main.cpp ...
simulations/life_vs_copy/environment.h:44:3: warning: Member variable 'Env::heightground' is not initialized in the constructor. [uninitMemberVar]
  Env(EnvType t = None) : Configurable("Environment","1.0") {
  ^
simulations/life_vs_copy/environment.h:44:3: warning: Member variable 'Env::global' is not initialized in the constructor. [uninitMemberVar]
  Env(EnvType t = None) : Configurable("Environment","1.0") {
  ^
simulations/life_vs_copy/main.cpp:94:3: warning: Member variable 'ThisSim::fixator' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(SimType type)
  ^
simulations/life_vs_copy/main.cpp:94:3: warning: Member variable 'ThisSim::reckLeft' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(SimType type)
  ^
simulations/life_vs_copy/main.cpp:94:3: warning: Member variable 'ThisSim::reckRight' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(SimType type)
  ^
simulations/life_vs_copy/main.cpp:94:3: warning: Member variable 'ThisSim::reck' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(SimType type)
  ^
simulations/life_vs_copy/main.cpp:94:3: warning: Member variable 'ThisSim::playground' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(SimType type)
  ^
simulations/life_vs_copy/main.cpp:94:3: warning: Member variable 'ThisSim::hardness' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(SimType type)
  ^
simulations/life_vs_copy/environment.h:49:5: performance: Variable 'pitPosition' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    pitPosition  = Pos(0,0,0);
    ^
simulations/life_vs_copy/environment.h:44:3: style: Class 'Env' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Env(EnvType t = None) : Configurable("Environment","1.0") {
  ^
simulations/life_vs_copy/main.cpp:94:3: style: Class 'ThisSim' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ThisSim(SimType type)
  ^
simulations/meshsim/main.cpp:132:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/meshsim/main.cpp:135:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/meshsim/main.cpp:138:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/meshsim/main.cpp:141:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/meshsim/main.cpp:144:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/meshsim/main.cpp:147:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/meshsim/main.cpp:150:0: information: Include file: <ode_robots/truckmesh.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/truckmesh.h>
^
simulations/meshsim/main.cpp:154:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/meshsim/main.cpp:156:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/meshsim/main.cpp:158:0: information: Include file: <ode_robots/passivemesh.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivemesh.h>
^
simulations/meshsim/main.cpp:162:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/life_vs_copy/main.cpp:111:10: style: The scope of the variable 'useExtendedModel' can be reduced. [variableScope]
    bool useExtendedModel = false;
         ^
simulations/life_vs_copy/environment.h:218:16: style: Local variable 'thickness' shadows outer variable [shadowVariable]
        double thickness = 0.4;
               ^
simulations/life_vs_copy/environment.h:98:10: note: Shadowed declaration
  double thickness;
         ^
simulations/life_vs_copy/environment.h:218:16: note: Shadow variable
        double thickness = 0.4;
               ^
simulations/life_vs_copy/environment.h:226:23: style: Local variable 'playground' shadows outer variable [shadowVariable]
          Playground* playground = new Playground(myHandle, osgHandle,
                      ^
simulations/life_vs_copy/environment.h:138:21: note: Shadowed declaration
    AbstractGround* playground;
                    ^
simulations/life_vs_copy/environment.h:226:23: note: Shadow variable
          Playground* playground = new Playground(myHandle, osgHandle,
                      ^
simulations/meshsim/main.cpp:220:21: style: Local variable 'myMesh' shadows outer variable [shadowVariable]
       PassiveMesh* myMesh = new PassiveMesh(odeHandle,osgHandle,
                    ^
simulations/meshsim/main.cpp:203:19: note: Shadowed declaration
     PassiveMesh* myMesh = new PassiveMesh(odeHandle,osgHandle,
                  ^
simulations/meshsim/main.cpp:220:21: note: Shadow variable
       PassiveMesh* myMesh = new PassiveMesh(odeHandle,osgHandle,
                    ^
153/300 files checked 55% done
Checking simulations/multiarm/main.cpp ...
154/300 files checked 55% done
simulations/multiarm/main.cpp:29:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/multiarm/main.cpp:30:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
simulations/multiarm/main.cpp:33:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/multiarm/main.cpp:36:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
Checking simulations/multiarm/multisat.cpp ...
simulations/multiarm/main.cpp:39:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/multiarm/main.cpp:42:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/multiarm/main.cpp:43:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/multiarm/main.cpp:46:0: information: Include file: <ode_robots/arm.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/arm.h>
^
simulations/multiarm/main.cpp:47:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/multiarm/main.cpp:50:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/multiarm/main.cpp:53:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/multiarm/main.cpp:56:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/multiarm/main.cpp:57:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/multiarm/main.cpp:58:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/multiarm/main.cpp:59:0: information: Include file: <selforg/invertmotorbigmodel.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorbigmodel.h>
^
simulations/multiarm/main.cpp:60:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/multiarm/main.cpp:61:0: information: Include file: <selforg/derbigcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derbigcontroller.h>
^
simulations/multiarm/main.cpp:62:0: information: Include file: <selforg/replaycontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/replaycontroller.h>
^
simulations/multiarm/multisat.h:72:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulations/multiarm/multisat.h:73:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/multiarm/multisat.h:75:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/multiarm/multisat.h:76:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
simulations/multiarm/multisat.h:78:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/multiarm/multisat.h:79:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/multiarm/multisat.h:80:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/hunde/vierbeiner.cpp:99:15: warning: Member variable 'VierBeiner::trunk' is not initialized in the constructor. [uninitMemberVar]
  VierBeiner::VierBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
simulations/hunde/vierbeiner.cpp:99:15: warning: Member variable 'VierBeiner::headtrans' is not initialized in the constructor. [uninitMemberVar]
  VierBeiner::VierBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
simulations/hunde/vierbeiner.cpp:99:15: warning: Member variable 'VierBeiner::bigboxtransform' is not initialized in the constructor. [uninitMemberVar]
  VierBeiner::VierBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
simulations/hunde/vierbeiner.cpp:99:15: warning: Member variable 'VierBeiner::neck' is not initialized in the constructor. [uninitMemberVar]
  VierBeiner::VierBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
simulations/hunde/vierbeiner.cpp:99:15: warning: Member variable 'VierBeiner::tail' is not initialized in the constructor. [uninitMemberVar]
  VierBeiner::VierBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
simulations/hunde/vierbeiner.cpp:322:14: style: The scope of the variable 'l3' can be reduced. [variableScope]
      double l3 = n<2 ? conf.legLength*0.25 : 0;  // front legs have no feet
             ^
simulations/hunde/vierbeiner.cpp:324:14: style: The scope of the variable 'ankleangle' can be reduced. [variableScope]
      double ankleangle = n<2 ? -M_PI/3 : 0;
             ^
simulations/hunde/vierbeiner.cpp:325:14: style: The scope of the variable 'anklelowstop' can be reduced. [variableScope]
      double anklelowstop = -M_PI/5;
             ^
simulations/hunde/vierbeiner.cpp:326:14: style: The scope of the variable 'anklehighstop' can be reduced. [variableScope]
      double anklehighstop = M_PI/3;
             ^
simulations/multiarm/multisat.h:114:3: style: Class 'MultiSat' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  MultiSat(const MultiSatConf& conf = getDefaultConf());
  ^
simulations/hunde/vierbeiner.cpp:205:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
simulations/hunde/vierbeiner.cpp:208:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
simulations/hunde/vierbeiner.cpp:426:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                          ^
simulations/hunde/vierbeiner.cpp:430:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                                ^
simulations/multiarm/main.cpp:138:6: style: C-style pointer casting [cstyleCast]
    ((OdeRobot*)arm)->place(Position(-0.7,0.9,0.0));
     ^
simulations/multiarm/main.cpp:228:10: style: The scope of the variable 'filename' can be reduced. [variableScope]
    char filename[1024];
         ^
155/300 files checked 56% done
simulations/multiarm/multisat.h:171:12: error: Uninitialized variable: c.controller [uninitvar]
    return c;
           ^
simulations/multiarm/multisat.h:171:12: error: Uninitialized struct member: c.controller [uninitStructMember]
    return c;
           ^
Checking simulations/multiarm/multisat_rl.cpp ...
Checking simulations/multiarm/main.cpp: REPLAY...
simulations/multiarm/multisat.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
156/300 files checked 56% done
Checking simulations/multiexperts/create_sphere_ir_sats/main.cpp ...
simulations/multiarm/multisat.cpp:72:11: warning: Member variable 'MultiSat::number_sensors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiarm/multisat.cpp:72:11: warning: Member variable 'MultiSat::number_motors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiarm/multisat.cpp:72:11: warning: Member variable 'MultiSat::x_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiarm/multisat.cpp:72:11: warning: Member variable 'MultiSat::xp_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiarm/multisat.cpp:72:11: warning: Member variable 'MultiSat::y_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiarm/multisat.cpp:72:11: warning: Member variable 'MultiSat::x_context_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiarm/multisat.cpp:72:11: warning: Member variable 'MultiSat::t' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiarm/multisat.cpp:399:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiarm/multisat.cpp:401:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiarm/multisat.cpp:403:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiarm/multisat.cpp:240:21: style: C-style pointer casting [cstyleCast]
  double faktor = *((double*)fak);
                    ^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:46:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:48:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:49:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:50:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:51:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:53:0: information: Include file: <selforg/ffnncontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/ffnncontroller.h>
^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:54:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:55:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:56:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:57:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:58:0: information: Include file: <selforg/replaycontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/replaycontroller.h>
^
simulations/multiexperts/create_sphere_ir_sats/multisat.h:73:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulations/multiexperts/create_sphere_ir_sats/multisat.h:74:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/multiexperts/create_sphere_ir_sats/multisat.h:76:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/multiexperts/create_sphere_ir_sats/multisat.h:77:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
simulations/multiexperts/create_sphere_ir_sats/multisat.h:79:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/multiexperts/create_sphere_ir_sats/multisat.h:80:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/multiexperts/create_sphere_ir_sats/multisat.h:81:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:61:0: information: Include file: <ode_robots/sphererobot3masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sphererobot3masses.h>
^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:62:0: information: Include file: <ode_robots/barrel2masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/barrel2masses.h>
^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:63:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:64:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
157/300 files checked 56% done
Checking simulations/multiexperts/create_sphere_ir_sats/multisat.cpp ...
simulations/multiarm/multisat_rl.cpp:65:11: warning: Member variable 'MultiSat::number_sensors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiarm/multisat_rl.cpp:65:11: warning: Member variable 'MultiSat::number_motors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiarm/multisat_rl.cpp:65:11: warning: Member variable 'MultiSat::x_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiarm/multisat_rl.cpp:65:11: warning: Member variable 'MultiSat::xp_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiarm/multisat_rl.cpp:65:11: warning: Member variable 'MultiSat::y_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiarm/multisat_rl.cpp:65:11: warning: Member variable 'MultiSat::x_context_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiarm/multisat_rl.cpp:65:11: warning: Member variable 'MultiSat::t' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:83:3: warning: Member variable 'ThisSim::controller' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(const char* replayname) : replayfilename(replayname) {}
  ^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:83:3: warning: Member variable 'ThisSim::multisat' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(const char* replayname) : replayfilename(replayname) {}
  ^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:83:3: warning: Member variable 'ThisSim::wiring' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(const char* replayname) : replayfilename(replayname) {}
  ^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:83:3: warning: Member variable 'ThisSim::agent' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(const char* replayname) : replayfilename(replayname) {}
  ^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:83:3: warning: Member variable 'ThisSim::sphere' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(const char* replayname) : replayfilename(replayname) {}
  ^
simulations/multiexperts/create_sphere_ir_sats/multisat.h:116:3: style: Class 'MultiSat' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  MultiSat(const MultiSatConf& conf = getDefaultConf());
  ^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:83:3: style: Class 'ThisSim' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ThisSim(const char* replayname) : replayfilename(replayname) {}
  ^
simulations/multiarm/multisat_rl.cpp:465:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiarm/multisat_rl.cpp:467:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiarm/multisat_rl.cpp:469:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiarm/multisat_rl.cpp:471:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiarm/multisat_rl.cpp:474:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiarm/multisat_rl.cpp:264:21: style: C-style pointer casting [cstyleCast]
  double faktor = *((double*)fak);
                    ^
simulations/multiexperts/create_sphere_ir_sats/main.cpp:151:10: style: The scope of the variable 'filename' can be reduced. [variableScope]
    char filename[256];
         ^
simulations/multiexperts/create_sphere_ir_sats/multisat.h:174:12: error: Uninitialized variable: c.controller [uninitvar]
    return c;
           ^
simulations/multiexperts/create_sphere_ir_sats/multisat.h:174:12: error: Uninitialized struct member: c.controller [uninitStructMember]
    return c;
           ^
158/300 files checked 56% done
Checking simulations/multiexperts/main.cpp ...
simulations/multiarm/multisat_rl.cpp:278:16: style: Variable 'winner' is assigned a value that is never used. [unreadVariable]
    int winner = argmin(satPredErrors);
               ^
159/300 files checked 57% done
simulations/multiexperts/main.cpp:30:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/multiexperts/main.cpp:32:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/multiexperts/main.cpp:33:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/multiexperts/main.cpp:34:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/multiexperts/main.cpp:35:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
Checking simulations/multiexperts/multisat.cpp ...
simulations/multiexperts/main.cpp:37:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/multiexperts/main.cpp:38:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/multiexperts/main.cpp:39:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/multiexperts/main.cpp:40:0: information: Include file: <selforg/ffnncontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/ffnncontroller.h>
^
simulations/multiexperts/multisat.h:77:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulations/multiexperts/multisat.h:78:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/multiexperts/multisat.h:80:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/multiexperts/multisat.h:81:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
simulations/multiexperts/multisat.h:83:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/multiexperts/multisat.h:84:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/multiexperts/multisat.h:85:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/multiexperts/main.cpp:42:0: information: Include file: <selforg/replaycontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/replaycontroller.h>
^
simulations/multiexperts/main.cpp:44:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/multiexperts/main.cpp:45:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/multiexperts/main.cpp:46:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/multiexperts/main.cpp:47:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/multiexperts/main.cpp:50:0: information: Include file: <ode_robots/sphererobot3masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sphererobot3masses.h>
^
simulations/multiexperts/main.cpp:51:0: information: Include file: <ode_robots/barrel2masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/barrel2masses.h>
^
simulations/multiexperts/main.cpp:52:0: information: Include file: <ode_robots/fourwheeled.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/fourwheeled.h>
^
simulations/multiexperts/main.cpp:54:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/multiexperts/main.cpp:55:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/multiexperts/main.cpp:56:0: information: Include file: <ode_robots/replayrobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/replayrobot.h>
^
simulations/multiexperts/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/multiexperts/create_sphere_ir_sats/multisat.cpp:74:11: warning: Member variable 'MultiSat::number_sensors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/create_sphere_ir_sats/multisat.cpp:74:11: warning: Member variable 'MultiSat::number_motors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/create_sphere_ir_sats/multisat.cpp:74:11: warning: Member variable 'MultiSat::x_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/create_sphere_ir_sats/multisat.cpp:74:11: warning: Member variable 'MultiSat::xp_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/create_sphere_ir_sats/multisat.cpp:74:11: warning: Member variable 'MultiSat::y_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/create_sphere_ir_sats/multisat.cpp:74:11: warning: Member variable 'MultiSat::x_context_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/create_sphere_ir_sats/multisat.cpp:74:11: warning: Member variable 'MultiSat::t' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/multiexperts/create_sphere_ir_sats/multisat.cpp:414:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/create_sphere_ir_sats/multisat.cpp:416:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/create_sphere_ir_sats/multisat.cpp:418:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/create_sphere_ir_sats/multisat.cpp:246:21: style: C-style pointer casting [cstyleCast]
  double faktor = *((double*)fak);
                    ^
simulations/multiexperts/create_sphere_ir_sats/multisat.cpp:340:15: style: C-style pointer casting [cstyleCast]
  return min(*(double*)m,d);
              ^
simulations/multiexperts/create_sphere_ir_sats/multisat.cpp:339:27: style: Parameter 'm' can be declared as pointer to const [constParameterPointer]
double multisat_min(void* m, double d){
                          ^
160/300 files checked 57% done
Checking simulations/multiexperts/multisat_2.cpp ...
simulations/multiexperts/multisat.cpp:81:11: warning: Member variable 'MultiSat::number_sensors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat.cpp:81:11: warning: Member variable 'MultiSat::number_motors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat.cpp:81:11: warning: Member variable 'MultiSat::x_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat.cpp:81:11: warning: Member variable 'MultiSat::xp_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat.cpp:81:11: warning: Member variable 'MultiSat::y_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat.cpp:81:11: warning: Member variable 'MultiSat::x_context_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat.cpp:81:11: warning: Member variable 'MultiSat::t' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat.h:119:3: style: Class 'MultiSat' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  MultiSat(const MultiSatConf& conf = getDefaultConf());
  ^
simulations/multiexperts/multisat.cpp:480:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat.cpp:482:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat.cpp:484:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat.cpp:300:21: style: C-style pointer casting [cstyleCast]
  double faktor = *((double*)fak);
                    ^
simulations/multiexperts/multisat.cpp:406:15: style: C-style pointer casting [cstyleCast]
  return min(*(double*)m,d);
              ^
simulations/multiexperts/multisat.cpp:405:27: style: Parameter 'm' can be declared as pointer to const [constParameterPointer]
double multisat_min(void* m, double d){
                          ^
simulations/multiexperts/multisat.h:178:12: error: Uninitialized variables: c.controller, c.lambda_w [uninitvar]
    return c;
           ^
simulations/multiexperts/multisat.h:178:12: error: Uninitialized struct member: c.controller [uninitStructMember]
    return c;
           ^
simulations/multiexperts/multisat.h:178:12: error: Uninitialized struct member: c.lambda_w [uninitStructMember]
    return c;
           ^
161/300 files checked 58% done
Checking simulations/multiexperts/multisat_2b.cpp ...
simulations/multiexperts/main.cpp:95:8: style: Condition 'longsquarecorridor' is always false [knownConditionTrueFalse]
    if(longsquarecorridor){
       ^
simulations/multiexperts/main.cpp:92:29: note: Assignment 'longsquarecorridor=false', assigned value is 0
    bool longsquarecorridor=false;
                            ^
simulations/multiexperts/main.cpp:95:8: note: Condition 'longsquarecorridor' is always false
    if(longsquarecorridor){
       ^
simulations/multiexperts/main.cpp:107:19: style: Condition 'i<num_barrels' is always false [knownConditionTrueFalse]
    for(int i=0; i< num_barrels; i++){
                  ^
simulations/multiexperts/main.cpp:107:15: note: Assignment 'i=0', assigned value is 0
    for(int i=0; i< num_barrels; i++){
              ^
simulations/multiexperts/main.cpp:75:21: note: Assignment 'num_barrels=0', assigned value is 0
    int num_barrels=0;
                    ^
simulations/multiexperts/main.cpp:107:19: note: Condition 'i<num_barrels' is always false
    for(int i=0; i< num_barrels; i++){
                  ^
simulations/multiexperts/main.cpp:167:42: style: Condition 'replay' is always true [knownConditionTrueFalse]
      global.odeConfig.setParam("noise", replay ? 0 : 0.05);
                                         ^
simulations/multiexperts/main.cpp:166:19: note: Assignment 'replay=true', assigned value is 1
      bool replay=true;
                  ^
simulations/multiexperts/main.cpp:167:42: note: Condition 'replay' is always true
      global.odeConfig.setParam("noise", replay ? 0 : 0.05);
                                         ^
simulations/multiexperts/main.cpp:190:10: style: Condition '!replay' is always false [knownConditionTrueFalse]
      if(!replay){
         ^
simulations/multiexperts/main.cpp:166:19: note: Assignment 'replay=true', assigned value is 1
      bool replay=true;
                  ^
simulations/multiexperts/main.cpp:190:10: note: Condition '!replay' is always false
      if(!replay){
         ^
simulations/multiexperts/main.cpp:246:42: style: Condition 'replay' is always false [knownConditionTrueFalse]
      global.odeConfig.setParam("noise", replay ? 0 : 0.05);
                                         ^
simulations/multiexperts/main.cpp:245:19: note: Assignment 'replay=false', assigned value is 0
      bool replay=false;
                  ^
simulations/multiexperts/main.cpp:246:42: note: Condition 'replay' is always false
      global.odeConfig.setParam("noise", replay ? 0 : 0.05);
                                         ^
simulations/multiexperts/main.cpp:260:10: style: Condition '!replay' is always true [knownConditionTrueFalse]
      if(!replay){
         ^
simulations/multiexperts/main.cpp:245:19: note: Assignment 'replay=false', assigned value is 0
      bool replay=false;
                  ^
simulations/multiexperts/main.cpp:260:10: note: Condition '!replay' is always true
      if(!replay){
         ^
simulations/multiexperts/main.cpp:170:19: style: The scope of the variable 'replayfilename' can be reduced. [variableScope]
      const char* replayfilename="Sphere_slow_07-07-18.sel.log";
                  ^
simulations/multiexperts/main.cpp:248:19: style: The scope of the variable 'replayfilename' can be reduced. [variableScope]
      const char* replayfilename="4Wheel_1.sel.log";
                  ^
simulations/multiexperts/main.cpp:126:27: style: Local variable 'controller' shadows outer variable [shadowVariable]
      AbstractController* controller = new InvertMotorNStep(cc); // selforg controller
                          ^
simulations/multiexperts/main.cpp:67:23: note: Shadowed declaration
  AbstractController *controller;
                      ^
simulations/multiexperts/main.cpp:126:27: note: Shadow variable
      AbstractController* controller = new InvertMotorNStep(cc); // selforg controller
                          ^
162/300 files checked 58% done
Checking simulations/multiexperts/multisat_2c.cpp ...
simulations/multiexperts/multisat_2.cpp:49:6: warning: Member variable 'Sat::lifetime' is not initialized in the constructor. [uninitMemberVar]
Sat::Sat(MultiLayerFFNN* _net, double _eps){
     ^
simulations/multiexperts/multisat_2.cpp:55:11: warning: Member variable 'MultiSat::number_sensors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2.cpp:55:11: warning: Member variable 'MultiSat::number_motors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2.cpp:55:11: warning: Member variable 'MultiSat::x_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2.cpp:55:11: warning: Member variable 'MultiSat::xp_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2.cpp:55:11: warning: Member variable 'MultiSat::y_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2.cpp:55:11: warning: Member variable 'MultiSat::x_context_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2.cpp:55:11: warning: Member variable 'MultiSat::companion' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2.cpp:55:11: warning: Member variable 'MultiSat::satControl' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2.cpp:55:11: warning: Member variable 'MultiSat::t' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2.cpp:370:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_2.cpp:372:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_2.cpp:374:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_2.cpp:376:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_2.cpp:379:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
163/300 files checked 59% done
simulations/multiexperts/multisat_2b.cpp:59:11: warning: Member variable 'MultiSat::number_sensors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2b.cpp:59:11: warning: Member variable 'MultiSat::number_motors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
Checking simulations/multiexperts/multisat_2d.cpp ...
simulations/multiexperts/multisat_2b.cpp:59:11: warning: Member variable 'MultiSat::x_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2b.cpp:59:11: warning: Member variable 'MultiSat::xp_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2b.cpp:59:11: warning: Member variable 'MultiSat::y_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2b.cpp:59:11: warning: Member variable 'MultiSat::x_context_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2b.cpp:59:11: warning: Member variable 'MultiSat::companion' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2b.cpp:59:11: warning: Member variable 'MultiSat::satControl' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2b.cpp:59:11: warning: Member variable 'MultiSat::t' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2b.cpp:381:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_2b.cpp:383:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_2b.cpp:385:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_2b.cpp:387:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_2b.cpp:390:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_2b.cpp:234:21: style: C-style pointer casting [cstyleCast]
  double faktor = *((double*)fak);
                    ^
164/300 files checked 59% done
Checking simulations/multiexperts/multisat_3a.cpp ...
simulations/multiexperts/multisat_2c.cpp:59:11: warning: Member variable 'MultiSat::number_sensors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2c.cpp:59:11: warning: Member variable 'MultiSat::number_motors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2c.cpp:59:11: warning: Member variable 'MultiSat::x_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2c.cpp:59:11: warning: Member variable 'MultiSat::xp_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2c.cpp:59:11: warning: Member variable 'MultiSat::y_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2c.cpp:59:11: warning: Member variable 'MultiSat::x_context_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2c.cpp:59:11: warning: Member variable 'MultiSat::companion' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2c.cpp:59:11: warning: Member variable 'MultiSat::satControl' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2c.cpp:59:11: warning: Member variable 'MultiSat::t' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2c.cpp:395:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_2c.cpp:397:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_2c.cpp:399:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_2c.cpp:401:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_2c.cpp:404:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/humanoid/skeleton.cpp:130:13: warning: Member variable 'Skeleton::pelvisservo' is not initialized in the constructor. [uninitMemberVar]
  Skeleton::Skeleton(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
            ^
simulations/humanoid/skeleton.cpp:130:13: warning: Member variable 'Skeleton::backservo' is not initialized in the constructor. [uninitMemberVar]
  Skeleton::Skeleton(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
            ^
simulations/multiexperts/multisat_2c.cpp:235:21: style: C-style pointer casting [cstyleCast]
  double faktor = *((double*)fak);
                    ^
simulations/humanoid/skeleton.cpp:1105:13: warning: Either the condition 'o' is redundant or there is possible null pointer dereference: o. [nullPointerRedundantCheck]
    else if(o->getBody())
            ^
simulations/humanoid/skeleton.cpp:1103:9: note: Assuming that condition 'o' is not redundant
    if (o && o->getGeom())
        ^
simulations/humanoid/skeleton.cpp:1100:33: note: Assignment to 'o=objects[Head_comp]'
    const Primitive* o = objects[Head_comp];
                                ^
simulations/humanoid/skeleton.cpp:1100:24: note: o is assigned 'objects[Head_comp]' here.
    const Primitive* o = objects[Head_comp];
                       ^
simulations/humanoid/skeleton.cpp:1105:13: note: Null pointer dereference
    else if(o->getBody())
            ^
simulations/humanoid/skeleton.cpp:1116:13: warning: Either the condition 'o' is redundant or there is possible null pointer dereference: o. [nullPointerRedundantCheck]
    else if(o->getBody())
            ^
simulations/humanoid/skeleton.cpp:1114:9: note: Assuming that condition 'o' is not redundant
    if (o && o->getGeom())
        ^
simulations/humanoid/skeleton.cpp:1111:33: note: Assignment to 'o=objects[Trunk_comp]'
    const Primitive* o = objects[Trunk_comp];
                                ^
simulations/humanoid/skeleton.cpp:1111:24: note: o is assigned 'objects[Trunk_comp]' here.
    const Primitive* o = objects[Trunk_comp];
                       ^
simulations/humanoid/skeleton.cpp:1116:13: note: Null pointer dereference
    else if(o->getBody())
            ^
simulations/humanoid/skeleton.cpp:474:17: style: The scope of the variable 'bj' can be reduced. [variableScope]
    BallJoint*  bj;
                ^
165/300 files checked 59% done
Checking simulations/multiexperts/multisat_3b.cpp ...
simulations/multiexperts/multisat_2d.cpp:68:11: warning: Member variable 'MultiSat::number_sensors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2d.cpp:68:11: warning: Member variable 'MultiSat::number_motors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2d.cpp:68:11: warning: Member variable 'MultiSat::x_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2d.cpp:68:11: warning: Member variable 'MultiSat::xp_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2d.cpp:68:11: warning: Member variable 'MultiSat::y_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2d.cpp:68:11: warning: Member variable 'MultiSat::x_context_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2d.cpp:68:11: warning: Member variable 'MultiSat::companion' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2d.cpp:68:11: warning: Member variable 'MultiSat::t' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_2d.cpp:433:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_2d.cpp:435:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_2d.cpp:437:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_2d.cpp:439:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_2d.cpp:256:21: style: C-style pointer casting [cstyleCast]
  double faktor = *((double*)fak);
                    ^
166/300 files checked 60% done
Checking simulations/multiexperts/multisat_3c.cpp ...
simulations/multiexperts/multisat_3a.cpp:74:11: warning: Member variable 'MultiSat::number_sensors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3a.cpp:74:11: warning: Member variable 'MultiSat::number_motors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3a.cpp:74:11: warning: Member variable 'MultiSat::x_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3a.cpp:74:11: warning: Member variable 'MultiSat::xp_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3a.cpp:74:11: warning: Member variable 'MultiSat::y_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3a.cpp:74:11: warning: Member variable 'MultiSat::x_context_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3a.cpp:74:11: warning: Member variable 'MultiSat::companion' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3a.cpp:74:11: warning: Member variable 'MultiSat::t' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3a.cpp:400:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_3a.cpp:402:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_3a.cpp:404:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_3a.cpp:241:21: style: C-style pointer casting [cstyleCast]
  double faktor = *((double*)fak);
                    ^
167/300 files checked 60% done
simulations/multiexperts/multisat_3b.cpp:74:11: warning: Member variable 'MultiSat::number_sensors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3b.cpp:74:11: warning: Member variable 'MultiSat::number_motors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
Checking simulations/multiexperts/multisat_5a.cpp ...
simulations/multiexperts/multisat_3b.cpp:74:11: warning: Member variable 'MultiSat::x_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3b.cpp:74:11: warning: Member variable 'MultiSat::xp_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3b.cpp:74:11: warning: Member variable 'MultiSat::y_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3b.cpp:74:11: warning: Member variable 'MultiSat::x_context_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3b.cpp:74:11: warning: Member variable 'MultiSat::companion' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3b.cpp:74:11: warning: Member variable 'MultiSat::t' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3b.cpp:414:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_3b.cpp:416:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_3b.cpp:418:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_3b.cpp:246:21: style: C-style pointer casting [cstyleCast]
  double faktor = *((double*)fak);
                    ^
simulations/multiexperts/multisat_3b.cpp:340:15: style: C-style pointer casting [cstyleCast]
  return min(*(double*)m,d);
              ^
simulations/multiexperts/multisat_3b.cpp:339:27: style: Parameter 'm' can be declared as pointer to const [constParameterPointer]
double multisat_min(void* m, double d){
                          ^
168/300 files checked 61% done
Checking simulations/multiexperts/multisat_5b.cpp ...
simulations/humanoid/skeleton.cpp:441:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
simulations/humanoid/skeleton.cpp:444:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
simulations/humanoid/skeleton.cpp:1009:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                          ^
simulations/humanoid/skeleton.cpp:1014:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                                ^
169/300 files checked 62% done
Checking simulations/multiexperts/multisat_epscomp.cpp ...
simulations/multiexperts/multisat_3c.cpp:77:11: warning: Member variable 'MultiSat::number_sensors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3c.cpp:77:11: warning: Member variable 'MultiSat::number_motors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3c.cpp:77:11: warning: Member variable 'MultiSat::x_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3c.cpp:77:11: warning: Member variable 'MultiSat::xp_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3c.cpp:77:11: warning: Member variable 'MultiSat::y_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3c.cpp:77:11: warning: Member variable 'MultiSat::x_context_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3c.cpp:77:11: warning: Member variable 'MultiSat::companion' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3c.cpp:77:11: warning: Member variable 'MultiSat::t' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_3c.cpp:426:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_3c.cpp:428:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_3c.cpp:430:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_3c.cpp:250:21: style: C-style pointer casting [cstyleCast]
  double faktor = *((double*)fak);
                    ^
simulations/multiexperts/multisat_3c.cpp:352:15: style: C-style pointer casting [cstyleCast]
  return min(*(double*)m,d);
              ^
simulations/multiexperts/multisat_3c.cpp:351:27: style: Parameter 'm' can be declared as pointer to const [constParameterPointer]
double multisat_min(void* m, double d){
                          ^
170/300 files checked 62% done
simulations/multiexperts/multisat_5a.cpp:77:11: warning: Member variable 'MultiSat::number_sensors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_5a.cpp:77:11: warning: Member variable 'MultiSat::number_motors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
Checking simulations/multiexperts/networkcontrol/main.cpp ...
simulations/multiexperts/multisat_5a.cpp:77:11: warning: Member variable 'MultiSat::x_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_5a.cpp:77:11: warning: Member variable 'MultiSat::xp_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_5a.cpp:77:11: warning: Member variable 'MultiSat::y_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_5a.cpp:77:11: warning: Member variable 'MultiSat::x_context_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_5b.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/multiexperts/multisat_5a.cpp:77:11: warning: Member variable 'MultiSat::t' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_epscomp.cpp:33:6: warning: Member variable 'Sat::lifetime' is not initialized in the constructor. [uninitMemberVar]
Sat::Sat(MultiLayerFFNN* _net, double _eps){
     ^
simulations/multiexperts/multisat_epscomp.cpp:42:11: warning: Member variable 'MultiSat::number_sensors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_epscomp.cpp:42:11: warning: Member variable 'MultiSat::number_motors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_epscomp.cpp:42:11: warning: Member variable 'MultiSat::x_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_epscomp.cpp:42:11: warning: Member variable 'MultiSat::xp_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_epscomp.cpp:42:11: warning: Member variable 'MultiSat::y_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_epscomp.cpp:42:11: warning: Member variable 'MultiSat::x_context_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_epscomp.cpp:42:11: warning: Member variable 'MultiSat::winner' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_epscomp.cpp:42:11: warning: Member variable 'MultiSat::companion' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_epscomp.cpp:42:11: warning: Member variable 'MultiSat::satControl' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_epscomp.cpp:42:11: warning: Member variable 'MultiSat::runcompetefirsttime' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_epscomp.cpp:42:11: warning: Member variable 'MultiSat::t' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_epscomp.cpp:42:11: warning: Member variable 'MultiSat::managementInterval' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_5a.cpp:462:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_5a.cpp:464:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_5a.cpp:466:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_5a.cpp:287:21: style: C-style pointer casting [cstyleCast]
  double faktor = *((double*)fak);
                    ^
simulations/multiexperts/multisat_5a.cpp:388:15: style: C-style pointer casting [cstyleCast]
  return min(*(double*)m,d);
              ^
simulations/multiexperts/networkcontrol/main.cpp:46:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/multiexperts/networkcontrol/main.cpp:48:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/multiexperts/networkcontrol/main.cpp:49:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/multiexperts/networkcontrol/main.cpp:50:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/multiexperts/networkcontrol/main.cpp:51:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/multiexperts/networkcontrol/main.cpp:53:0: information: Include file: <selforg/ffnncontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/ffnncontroller.h>
^
simulations/multiexperts/networkcontrol/main.cpp:54:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/multiexperts/networkcontrol/main.cpp:55:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/multiexperts/networkcontrol/main.cpp:56:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/multiexperts/networkcontrol/main.cpp:57:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/multiexperts/networkcontrol/main.cpp:59:0: information: Include file: <ode_robots/sphererobot3masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sphererobot3masses.h>
^
simulations/multiexperts/networkcontrol/main.cpp:60:0: information: Include file: <ode_robots/barrel2masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/barrel2masses.h>
^
simulations/multiexperts/networkcontrol/main.cpp:61:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/multiexperts/networkcontrol/main.cpp:62:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/multiexperts/multisat_epscomp.cpp:157:7: style: Local variable 'winner' shadows outer variable [shadowVariable]
  int winner=0;
      ^
simulations/multiexperts/multisat.h:194:7: note: Shadowed declaration
  int winner;    ///< index of winner network
      ^
simulations/multiexperts/multisat_epscomp.cpp:157:7: note: Shadow variable
  int winner=0;
      ^
simulations/multiexperts/multisat_5a.cpp:387:27: style: Parameter 'm' can be declared as pointer to const [constParameterPointer]
double multisat_min(void* m, double d){
                          ^
171/300 files checked 62% done
Checking simulations/multiexperts/printnetworkweights/main.cpp ...
172/300 files checked 63% done
simulations/multiexperts/printnetworkweights/main.cpp:34:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/multiexperts/printnetworkweights/main.cpp:35:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
Checking simulations/multiexperts/reinforcement/irsensor_wall.cpp ...
173/300 files checked 63% done
simulations/multiexperts/multisat_5b.cpp:81:11: warning: Member variable 'MultiSat::number_sensors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/multisat_5b.cpp:81:11: warning: Member variable 'MultiSat::number_motors' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/reinforcement/irsensor_wall.cpp:36:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
Checking simulations/multiexperts/reinforcement/main.cpp ...
simulations/multiexperts/multisat_5b.cpp:81:11: warning: Member variable 'MultiSat::x_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/reinforcement/irsensor_wall.cpp:37:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
simulations/multiexperts/multisat_5b.cpp:81:11: warning: Member variable 'MultiSat::xp_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/reinforcement/irsensor_wall.cpp:38:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/multiexperts/multisat_5b.cpp:81:11: warning: Member variable 'MultiSat::y_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/reinforcement/irsensor_wall.cpp:39:0: information: Include file: <selforg/position.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/position.h>
^
simulations/multiexperts/multisat_5b.cpp:81:11: warning: Member variable 'MultiSat::x_context_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/reinforcement/irsensor_wall.cpp:40:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
simulations/multiexperts/multisat_5b.cpp:81:11: warning: Member variable 'MultiSat::t' is not initialized in the constructor. [uninitMemberVar]
MultiSat::MultiSat( const MultiSatConf& _conf)
          ^
simulations/multiexperts/reinforcement/irsensor_wall.cpp:41:0: information: Include file: <osg/Vec3> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Vec3>
^
simulations/multiexperts/reinforcement/irsensor_wall.cpp:42:0: information: Include file: <list> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <list>
^
simulations/multiexperts/reinforcement/irsensor_wall.cpp:44:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/multiexperts/reinforcement/irsensor_wall.cpp:45:0: information: Include file: <ode_robots/osgprimitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/osgprimitive.h>
^
simulations/multiexperts/reinforcement/irsensor_wall.h:31:0: information: Include file: <ode_robots/irsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/irsensor.h>
^
simulations/multiexperts/networkcontrol/main.cpp:137:3: warning: Member variable 'ThisSim::controller' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(const char* netname) : networkfilename(netname) {}
  ^
simulations/multiexperts/networkcontrol/main.cpp:137:3: warning: Member variable 'ThisSim::sphere1' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(const char* netname) : networkfilename(netname) {}
  ^
simulations/multiexperts/multisat_5b.cpp:479:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_5b.cpp:481:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/multisat_5b.cpp:483:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/networkcontrol/main.cpp:70:3: style: Class 'BarrelNetControl' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  BarrelNetControl(const std::string& networkfilename):
  ^
simulations/multiexperts/networkcontrol/main.cpp:90:3: style: Class 'SatNetControl' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SatNetControl(const std::string& networkfilename):
  ^
simulations/multiexperts/networkcontrol/main.cpp:110:3: style: Class 'SatNetControl_NoY' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SatNetControl_NoY(const std::string& networkfilename):
  ^
simulations/multiexperts/networkcontrol/main.cpp:137:3: style: Class 'ThisSim' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ThisSim(const char* netname) : networkfilename(netname) {}
  ^
simulations/multiexperts/multisat_5b.cpp:300:21: style: C-style pointer casting [cstyleCast]
  double faktor = *((double*)fak);
                    ^
simulations/multiexperts/multisat_5b.cpp:405:15: style: C-style pointer casting [cstyleCast]
  return min(*(double*)m,d);
              ^
simulations/multiexperts/networkcontrol/main.cpp:152:19: style: Condition 'i<num_barrels' is always false [knownConditionTrueFalse]
    for(int i=0; i< num_barrels; i++){
                  ^
simulations/multiexperts/networkcontrol/main.cpp:152:15: note: Assignment 'i=0', assigned value is 0
    for(int i=0; i< num_barrels; i++){
              ^
simulations/multiexperts/networkcontrol/main.cpp:142:21: note: Assignment 'num_barrels=0', assigned value is 0
    int num_barrels=0;
                    ^
simulations/multiexperts/networkcontrol/main.cpp:152:19: note: Condition 'i<num_barrels' is always false
    for(int i=0; i< num_barrels; i++){
                  ^
simulations/multiexperts/multisat_5b.cpp:404:27: style: Parameter 'm' can be declared as pointer to const [constParameterPointer]
double multisat_min(void* m, double d){
                          ^
simulations/multiexperts/reinforcement/irsensor_wall.cpp:58:28: style: C-style pointer casting [cstyleCast]
    IRSensorWall* sensor = (IRSensorWall*)userdata;
                           ^
simulations/multiexperts/reinforcement/irsensor_wall.cpp:54:46: style: Parameter 'params' can be declared as reference to const. However it seems that 'irwallCollCallback' is a callback function, if 'params' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
  int irwallCollCallback(dSurfaceParameters& params, GlobalData& globaldata, void *userdata,
                                             ^
simulations/multiexperts/reinforcement/irsensor_wall.cpp:81:47: note: You might need to cast the function pointer here
    transform->substance.setCollisionCallback(irwallCollCallback,this);
                                              ^
simulations/multiexperts/reinforcement/irsensor_wall.cpp:54:46: note: Parameter 'params' can be declared as reference to const
  int irwallCollCallback(dSurfaceParameters& params, GlobalData& globaldata, void *userdata,
                                             ^
simulations/multiexperts/reinforcement/irsensor_wall.cpp:54:66: style: Parameter 'globaldata' can be declared as reference to const. However it seems that 'irwallCollCallback' is a callback function, if 'globaldata' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
  int irwallCollCallback(dSurfaceParameters& params, GlobalData& globaldata, void *userdata,
                                                                 ^
simulations/multiexperts/reinforcement/irsensor_wall.cpp:81:47: note: You might need to cast the function pointer here
    transform->substance.setCollisionCallback(irwallCollCallback,this);
                                              ^
simulations/multiexperts/reinforcement/irsensor_wall.cpp:54:66: note: Parameter 'globaldata' can be declared as reference to const
  int irwallCollCallback(dSurfaceParameters& params, GlobalData& globaldata, void *userdata,
                                                                 ^
174/300 files checked 63% done
175/300 files checked 63% done
simulations/multiexperts/reinforcement/main.cpp:49:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/multiexperts/reinforcement/main.cpp:51:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
Checking simulations/multiexperts/reinforcement/multireinforce.cpp ...
simulations/multiexperts/reinforcement/main.cpp:52:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
Checking simulations/multiexperts/reinforcement_nimm4/main.cpp ...
simulations/multiexperts/reinforcement/main.cpp:53:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/multiexperts/reinforcement/main.cpp:54:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/multiexperts/reinforcement/main.cpp:55:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/multiexperts/reinforcement/main.cpp:56:0: information: Include file: <ode_robots/complexplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/complexplayground.h>
^
176/300 files checked 64% done
simulations/multiexperts/reinforcement/main.cpp:58:0: information: Include file: <selforg/ffnncontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/ffnncontroller.h>
^
simulations/multiexperts/reinforcement/main.cpp:59:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/multiexperts/reinforcement/main.cpp:60:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/multiexperts/reinforcement/main.cpp:61:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/multiexperts/reinforcement/main.cpp:62:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/multiexperts/reinforcement/main.cpp:63:0: information: Include file: <selforg/replaycontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/replaycontroller.h>
^
Checking simulations/multiexperts/reinforcement_nimm4/multireinforce.cpp ...
simulations/multiexperts/reinforcement/main.cpp:64:0: information: Include file: <selforg/classicreinforce.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/classicreinforce.h>
^
simulations/multiexperts/reinforcement/multireinforce.h:43:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulations/multiexperts/reinforcement/multireinforce.h:44:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/multiexperts/reinforcement/multireinforce.h:46:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/multiexperts/reinforcement/multireinforce.h:47:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
simulations/multiexperts/reinforcement/multireinforce.h:49:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/multiexperts/reinforcement/multireinforce.h:50:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/multiexperts/reinforcement/multireinforce.h:51:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/multiexperts/reinforcement/multireinforce.h:52:0: information: Include file: <selforg/qlearning.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/qlearning.h>
^
simulations/multiexperts/reinforcement/main.cpp:67:0: information: Include file: <ode_robots/sphererobot3masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sphererobot3masses.h>
^
simulations/multiexperts/reinforcement/main.cpp:68:0: information: Include file: <ode_robots/barrel2masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/barrel2masses.h>
^
simulations/multiexperts/reinforcement/main.cpp:69:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/multiexperts/reinforcement/main.cpp:70:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/multiexperts/reinforcement_nimm4/multireinforce.h:47:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulations/multiexperts/reinforcement_nimm4/multireinforce.h:48:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/multiexperts/reinforcement_nimm4/multireinforce.h:50:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/multiexperts/reinforcement_nimm4/multireinforce.h:51:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
simulations/multiexperts/reinforcement_nimm4/multireinforce.h:53:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:59:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/multiexperts/reinforcement_nimm4/multireinforce.h:54:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:61:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/multiexperts/reinforcement_nimm4/multireinforce.h:55:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:62:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/multiexperts/reinforcement_nimm4/multireinforce.h:56:0: information: Include file: <selforg/qlearning.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/qlearning.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:63:0: information: Include file: <ode_robots/complexplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/complexplayground.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:64:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:65:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:66:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:67:0: information: Include file: <ode_robots/passivecapsule.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivecapsule.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:69:0: information: Include file: <selforg/ffnncontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/ffnncontroller.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:70:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:71:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:72:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:73:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:74:0: information: Include file: <selforg/replaycontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/replaycontroller.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:76:0: information: Include file: <selforg/classicreinforce.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/classicreinforce.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:78:0: information: Include file: <ode_robots/fourwheeled.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/fourwheeled.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:79:0: information: Include file: <ode_robots/addsensors2robotadapter.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/addsensors2robotadapter.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:80:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:81:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/multiexperts/reinforcement/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/multiexperts/reinforcement_nimm4/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/multiexperts/reinforcement/multireinforce.cpp:47:17: warning: Member variable 'MultiReinforce::number_sensors' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement/multireinforce.cpp:47:17: warning: Member variable 'MultiReinforce::number_motors' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement/multireinforce.cpp:47:17: warning: Member variable 'MultiReinforce::x_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement/multireinforce.cpp:47:17: warning: Member variable 'MultiReinforce::xp_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement/multireinforce.cpp:47:17: warning: Member variable 'MultiReinforce::y_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement/multireinforce.cpp:47:17: warning: Member variable 'MultiReinforce::x_context_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement/multireinforce.cpp:47:17: warning: Member variable 'MultiReinforce::action' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement/multireinforce.cpp:47:17: warning: Member variable 'MultiReinforce::newaction' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement/multireinforce.cpp:47:17: warning: Member variable 'MultiReinforce::oldaction' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement/multireinforce.cpp:47:17: warning: Member variable 'MultiReinforce::state' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement/multireinforce.cpp:47:17: warning: Member variable 'MultiReinforce::reward' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement/multireinforce.cpp:47:17: warning: Member variable 'MultiReinforce::oldreward' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement/multireinforce.cpp:47:17: warning: Member variable 'MultiReinforce::phase' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement/multireinforce.cpp:47:17: warning: Member variable 'MultiReinforce::phasecnt' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement/multireinforce.cpp:47:17: warning: Member variable 'MultiReinforce::t' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement/multireinforce.cpp:394:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.cpp:51:17: warning: Member variable 'MultiReinforce::number_sensors' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.cpp:51:17: warning: Member variable 'MultiReinforce::number_motors' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.cpp:51:17: warning: Member variable 'MultiReinforce::x_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.cpp:51:17: warning: Member variable 'MultiReinforce::xp_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.cpp:51:17: warning: Member variable 'MultiReinforce::y_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.cpp:51:17: warning: Member variable 'MultiReinforce::x_context_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.cpp:51:17: warning: Member variable 'MultiReinforce::action' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.cpp:51:17: warning: Member variable 'MultiReinforce::newaction' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.cpp:51:17: warning: Member variable 'MultiReinforce::oldaction' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.cpp:51:17: warning: Member variable 'MultiReinforce::state' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.cpp:51:17: warning: Member variable 'MultiReinforce::reward' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.cpp:51:17: warning: Member variable 'MultiReinforce::oldreward' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.cpp:51:17: warning: Member variable 'MultiReinforce::phase' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.cpp:51:17: warning: Member variable 'MultiReinforce::phasecnt' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.cpp:51:17: warning: Member variable 'MultiReinforce::t' is not initialized in the constructor. [uninitMemberVar]
MultiReinforce::MultiReinforce( const MultiReinforceConf& _conf)
                ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.cpp:399:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/reinforcement/multireinforce.cpp:429:9: style: The scope of the variable 'file' can be reduced. [variableScope]
  FILE* file;
        ^
simulations/multiexperts/reinforcement/multireinforce.cpp:447:9: style: The scope of the variable 'file' can be reduced. [variableScope]
  FILE* file;
        ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.cpp:434:9: style: The scope of the variable 'file' can be reduced. [variableScope]
  FILE* file;
        ^
177/300 files checked 64% done
178/300 files checked 65% done
Checking simulations/multiexperts/sat_initialcond/main.cpp ...
Checking simulations/multiexperts/sats_analyse/main.cpp ...
simulations/multiexperts/sat_initialcond/main.cpp:46:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/multiexperts/sat_initialcond/main.cpp:48:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/multiexperts/sat_initialcond/main.cpp:49:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/multiexperts/sat_initialcond/main.cpp:50:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/multiexperts/sat_initialcond/main.cpp:51:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/multiexperts/sat_initialcond/main.cpp:53:0: information: Include file: <selforg/ffnncontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/ffnncontroller.h>
^
simulations/multiexperts/sat_initialcond/main.cpp:54:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/multiexperts/sat_initialcond/main.cpp:55:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/multiexperts/sat_initialcond/main.cpp:56:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/multiexperts/sat_initialcond/main.cpp:57:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/multiexperts/sat_initialcond/main.cpp:59:0: information: Include file: <ode_robots/sphererobot3masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sphererobot3masses.h>
^
simulations/multiexperts/sat_initialcond/main.cpp:60:0: information: Include file: <ode_robots/barrel2masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/barrel2masses.h>
^
simulations/multiexperts/sat_initialcond/main.cpp:61:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/multiexperts/sat_initialcond/main.cpp:62:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/multiexperts/sats_analyse/main.cpp:113:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/multiexperts/sats_analyse/main.cpp:115:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/multiexperts/sats_analyse/main.cpp:116:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/multiexperts/sats_analyse/main.cpp:117:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/multiexperts/sats_analyse/main.cpp:118:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/multiexperts/sats_analyse/main.cpp:120:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/multiexperts/sats_analyse/main.cpp:121:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/multiexperts/sats_analyse/main.cpp:122:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/multiexperts/sats_analyse/main.cpp:123:0: information: Include file: <selforg/ffnncontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/ffnncontroller.h>
^
simulations/multiexperts/sats_analyse/multisat_checksats.h:70:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulations/multiexperts/sats_analyse/multisat_checksats.h:71:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/multiexperts/sats_analyse/multisat_checksats.h:73:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/multiexperts/sats_analyse/multisat_checksats.h:74:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
simulations/multiexperts/sats_analyse/multisat_checksats.h:76:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/multiexperts/sats_analyse/multisat_checksats.h:77:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/multiexperts/sats_analyse/multisat_checksats.h:78:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/multiexperts/sats_analyse/main.cpp:125:0: information: Include file: <selforg/replaycontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/replaycontroller.h>
^
simulations/multiexperts/sats_analyse/main.cpp:127:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/multiexperts/sats_analyse/main.cpp:128:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/multiexperts/sats_analyse/main.cpp:129:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/multiexperts/sats_analyse/main.cpp:130:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/multiexperts/sats_analyse/main.cpp:132:0: information: Include file: <ode_robots/forcedsphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/forcedsphere.h>
^
simulations/multiexperts/sats_analyse/main.cpp:133:0: information: Include file: <ode_robots/sphererobot3masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sphererobot3masses.h>
^
simulations/multiexperts/sats_analyse/main.cpp:134:0: information: Include file: <ode_robots/barrel2masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/barrel2masses.h>
^
simulations/multiexperts/sats_analyse/main.cpp:135:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/multiexperts/sats_analyse/main.cpp:136:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/multiexperts/sats_analyse/main.cpp:137:0: information: Include file: <ode_robots/replayrobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/replayrobot.h>
^
simulations/multiexperts/sat_initialcond/main.cpp:148:3: warning: Member variable 'ThisSim::controller' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(const char* netname) : networkfilename(netname) {}
  ^
simulations/multiexperts/sat_initialcond/main.cpp:148:3: warning: Member variable 'ThisSim::wiring' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(const char* netname) : networkfilename(netname) {}
  ^
simulations/multiexperts/sat_initialcond/main.cpp:148:3: warning: Member variable 'ThisSim::agent' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(const char* netname) : networkfilename(netname) {}
  ^
simulations/multiexperts/sat_initialcond/main.cpp:148:3: warning: Member variable 'ThisSim::sphere' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(const char* netname) : networkfilename(netname) {}
  ^
simulations/multiexperts/sat_initialcond/main.cpp:148:3: warning: Member variable 'ThisSim::speedsensor' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(const char* netname) : networkfilename(netname) {}
  ^
simulations/multiexperts/sat_initialcond/main.cpp:148:3: warning: Member variable 'ThisSim::runcounter' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(const char* netname) : networkfilename(netname) {}
  ^
simulations/multiexperts/sat_initialcond/main.cpp:148:3: warning: Member variable 'ThisSim::counter' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(const char* netname) : networkfilename(netname) {}
  ^
simulations/multiexperts/sat_initialcond/main.cpp:148:3: warning: Member variable 'ThisSim::maxCounter' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(const char* netname) : networkfilename(netname) {}
  ^
simulations/multiexperts/sat_initialcond/main.cpp:73:3: style: Class 'BarrelNetControl' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  BarrelNetControl(const std::string& networkfilename):
  ^
simulations/multiexperts/sat_initialcond/main.cpp:93:3: style: Class 'SatNetControl' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SatNetControl(const std::string& networkfilename):
  ^
simulations/multiexperts/sat_initialcond/main.cpp:113:3: style: Class 'SatNetControl_NoY' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SatNetControl_NoY(const std::string& networkfilename):
  ^
simulations/multiexperts/sat_initialcond/main.cpp:148:3: style: Class 'ThisSim' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ThisSim(const char* netname) : networkfilename(netname) {}
  ^
simulations/multiexperts/sat_initialcond/main.cpp:177:12: style: The scope of the variable 'stepsize' can be reduced. [variableScope]
    double stepsize;
           ^
simulations/multiexperts/sat_initialcond/main.cpp:178:12: style: Variable 'powers' can be declared as const array [constVariable]
    double powers[3] = {5,10,15};
           ^
simulations/multiexperts/sats_analyse/multisat_checksats.h:113:3: style: Class 'MultiSatCheck' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  MultiSatCheck(const MultiSatCheckConf& conf = getDefaultConf());
  ^
simulations/multiexperts/sats_analyse/main.cpp:167:19: style: Condition 'i<num_barrels' is always false [knownConditionTrueFalse]
    for(int i=0; i< num_barrels; i++){
                  ^
simulations/multiexperts/sats_analyse/main.cpp:167:15: note: Assignment 'i=0', assigned value is 0
    for(int i=0; i< num_barrels; i++){
              ^
simulations/multiexperts/sats_analyse/main.cpp:153:21: note: Assignment 'num_barrels=0', assigned value is 0
    int num_barrels=0;
                    ^
simulations/multiexperts/sats_analyse/main.cpp:167:19: note: Condition 'i<num_barrels' is always false
    for(int i=0; i< num_barrels; i++){
                  ^
simulations/multiexperts/sats_analyse/main.cpp:227:42: style: Condition 'replay' is always true [knownConditionTrueFalse]
      global.odeConfig.setParam("noise", replay ? 0 : 0.1);
                                         ^
simulations/multiexperts/sats_analyse/main.cpp:226:19: note: Assignment 'replay=true', assigned value is 1
      bool replay=true;
                  ^
simulations/multiexperts/sats_analyse/main.cpp:227:42: note: Condition 'replay' is always true
      global.odeConfig.setParam("noise", replay ? 0 : 0.1);
                                         ^
simulations/multiexperts/sats_analyse/main.cpp:246:10: style: Condition '!replay' is always false [knownConditionTrueFalse]
      if(!replay){
         ^
simulations/multiexperts/sats_analyse/main.cpp:226:19: note: Assignment 'replay=true', assigned value is 1
      bool replay=true;
                  ^
simulations/multiexperts/sats_analyse/main.cpp:246:10: note: Condition '!replay' is always false
      if(!replay){
         ^
simulations/multiexperts/sats_analyse/main.cpp:271:14: warning: If resource allocation fails, then there is a possible null pointer dereference: f [nullPointerOutOfResources]
      fclose(f);
             ^
simulations/multiexperts/sats_analyse/main.cpp:269:23: note: Assuming allocation function fails
      FILE* f =  fopen(file,"rb");
                      ^
simulations/multiexperts/sats_analyse/main.cpp:269:23: note: Assignment 'f=fopen(file,"rb")', assigned value is 0
      FILE* f =  fopen(file,"rb");
                      ^
simulations/multiexperts/sats_analyse/main.cpp:271:14: note: Null pointer dereference
      fclose(f);
             ^
simulations/multiexperts/sats_analyse/main.cpp:229:19: style: The scope of the variable 'replayfilename' can be reduced. [variableScope]
      const char* replayfilename="../Sphere_reinforce_axis_rot.sel.log";
                  ^
simulations/multiexperts/sats_analyse/main.cpp:186:27: style: Local variable 'controller' shadows outer variable [shadowVariable]
      AbstractController* controller = new InvertMotorNStep(cc); // selforg controller
                          ^
simulations/multiexperts/sats_analyse/main.cpp:147:23: note: Shadowed declaration
  AbstractController *controller;
                      ^
simulations/multiexperts/sats_analyse/main.cpp:186:27: note: Shadow variable
      AbstractController* controller = new InvertMotorNStep(cc); // selforg controller
                          ^
179/300 files checked 65% done
simulations/multiexperts/sats_analyse/multisat_checksats.h:171:12: error: Uninitialized variable: c.controller [uninitvar]
    return c;
           ^
simulations/multiexperts/sats_analyse/multisat_checksats.h:171:12: error: Uninitialized struct member: c.controller [uninitStructMember]
    return c;
           ^
Checking simulations/multiexperts/sats_analyse/multisat_checksats.cpp ...
180/300 files checked 65% done
Checking simulations/multischlange/main.cpp ...
simulations/multiexperts/reinforcement_nimm4/main.cpp:327:3: warning: Member variable 'ThisSim::controller' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(QLearning* qlearning):
  ^
simulations/multiexperts/reinforcement_nimm4/main.cpp:327:3: warning: Member variable 'ThisSim::wiring' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(QLearning* qlearning):
  ^
simulations/multischlange/main.cpp:87:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:327:3: warning: Member variable 'ThisSim::agent' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(QLearning* qlearning):
  ^
simulations/multischlange/main.cpp:89:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:327:3: warning: Member variable 'ThisSim::robot' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(QLearning* qlearning):
  ^
simulations/multischlange/main.cpp:90:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:327:3: warning: Member variable 'ThisSim::playground' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(QLearning* qlearning):
  ^
simulations/multischlange/main.cpp:91:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:327:3: warning: Member variable 'ThisSim::playgroundsize' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(QLearning* qlearning):
  ^
simulations/multischlange/main.cpp:92:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/multischlange/main.cpp:93:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/multischlange/main.cpp:94:0: information: Include file: <ode_robots/terrainground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/terrainground.h>
^
simulations/multischlange/main.cpp:95:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/multischlange/main.cpp:96:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/multischlange/main.cpp:97:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/multischlange/main.cpp:100:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/multischlange/main.cpp:102:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/multischlange/main.cpp:103:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/multischlange/main.cpp:104:0: information: Include file: <selforg/derbigcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derbigcontroller.h>
^
simulations/multischlange/main.cpp:106:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/multischlange/main.cpp:107:0: information: Include file: <ode_robots/sliderwheelie.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sliderwheelie.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:101:3: style: Class 'ReinforceCmpStateIRController' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ReinforceCmpStateIRController(const MultiReinforceConf& conf)
  ^
simulations/multischlange/main.cpp:108:0: information: Include file: <ode_robots/schlangeservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:197:3: style: Class 'ReinforceIRController' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ReinforceIRController(const MultiReinforceConf& conf)
  ^
simulations/multischlange/main.cpp:109:0: information: Include file: <ode_robots/schlangeservo2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo2.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:246:3: style: Class 'ReinforceNimm4Controller' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ReinforceNimm4Controller(const ClassicReinforceConf& conf)
  ^
simulations/multischlange/main.cpp:110:0: information: Include file: <ode_robots/sphererobot3masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sphererobot3masses.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:327:3: style: Class 'ThisSim' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ThisSim(QLearning* qlearning):
  ^
simulations/multischlange/main.cpp:111:0: information: Include file: <ode_robots/plattfussschlange.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/plattfussschlange.h>
^
simulations/multischlange/main.cpp:112:0: information: Include file: <ode_robots/hurlingsnake.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/hurlingsnake.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:124:18: style: The function 'calcReinforcement' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual double calcReinforcement(){
                 ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.h:197:18: note: Virtual function in base class
  virtual double calcReinforcement()  override = 0;
                 ^
simulations/multiexperts/reinforcement_nimm4/main.cpp:124:18: note: Function in derived class
  virtual double calcReinforcement(){
                 ^
simulations/multischlange/main.cpp:114:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:134:15: style: The function 'getStateNumber' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int getStateNumber(){
              ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.h:191:15: note: Virtual function in base class
  virtual int getStateNumber()  override = 0;
              ^
simulations/multiexperts/reinforcement_nimm4/main.cpp:134:15: note: Function in derived class
  virtual int getStateNumber(){
              ^
simulations/multischlange/main.cpp:115:0: information: Include file: <ode_robots/schlangeservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo.h>
^
simulations/multiexperts/reinforcement_nimm4/main.cpp:138:15: style: The function 'calcState' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int calcState() {
              ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.h:194:15: note: Virtual function in base class
  virtual int calcState()  override = 0;
              ^
simulations/multiexperts/reinforcement_nimm4/main.cpp:138:15: note: Function in derived class
  virtual int calcState() {
              ^
simulations/multiexperts/reinforcement_nimm4/main.cpp:201:18: style: The function 'calcReinforcement' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual double calcReinforcement(){
                 ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.h:197:18: note: Virtual function in base class
  virtual double calcReinforcement()  override = 0;
                 ^
simulations/multiexperts/reinforcement_nimm4/main.cpp:201:18: note: Function in derived class
  virtual double calcReinforcement(){
                 ^
simulations/multiexperts/reinforcement_nimm4/main.cpp:214:15: style: The function 'getStateNumber' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int getStateNumber(){
              ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.h:191:15: note: Virtual function in base class
  virtual int getStateNumber()  override = 0;
              ^
simulations/multiexperts/reinforcement_nimm4/main.cpp:214:15: note: Function in derived class
  virtual int getStateNumber(){
              ^
simulations/multiexperts/reinforcement_nimm4/main.cpp:218:15: style: The function 'calcState' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int calcState() {
              ^
simulations/multiexperts/reinforcement_nimm4/multireinforce.h:194:15: note: Virtual function in base class
  virtual int calcState()  override = 0;
              ^
simulations/multiexperts/reinforcement_nimm4/main.cpp:218:15: note: Function in derived class
  virtual int calcState() {
              ^
simulations/multiexperts/reinforcement_nimm4/main.cpp:574:11: style: The scope of the variable 'f' can be reduced. [variableScope]
    FILE* f;
          ^
simulations/multiexperts/reinforcement_nimm4/main.cpp:548:11: style: Variable 'times' can be declared as const array [constVariable]
      int times[8]={600,1200,2400,4800,9600,19200,38400,76800}; // 10 20 40 80 160 320 640 1280 minutes
          ^
181/300 files checked 66% done
simulations/multischlange/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/muscled_arm/main.cpp ...
simulations/multiexperts/sats_analyse/multisat_checksats.cpp:71:16: warning: Member variable 'MultiSatCheck::number_sensors' is not initialized in the constructor. [uninitMemberVar]
MultiSatCheck::MultiSatCheck( const MultiSatCheckConf& _conf)
               ^
simulations/multiexperts/sats_analyse/multisat_checksats.cpp:71:16: warning: Member variable 'MultiSatCheck::number_motors' is not initialized in the constructor. [uninitMemberVar]
MultiSatCheck::MultiSatCheck( const MultiSatCheckConf& _conf)
               ^
simulations/multiexperts/sats_analyse/multisat_checksats.cpp:71:16: warning: Member variable 'MultiSatCheck::x_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSatCheck::MultiSatCheck( const MultiSatCheckConf& _conf)
               ^
simulations/multiexperts/sats_analyse/multisat_checksats.cpp:71:16: warning: Member variable 'MultiSatCheck::xp_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSatCheck::MultiSatCheck( const MultiSatCheckConf& _conf)
               ^
simulations/multiexperts/sats_analyse/multisat_checksats.cpp:71:16: warning: Member variable 'MultiSatCheck::y_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSatCheck::MultiSatCheck( const MultiSatCheckConf& _conf)
               ^
simulations/multiexperts/sats_analyse/multisat_checksats.cpp:71:16: warning: Member variable 'MultiSatCheck::x_context_buffer' is not initialized in the constructor. [uninitMemberVar]
MultiSatCheck::MultiSatCheck( const MultiSatCheckConf& _conf)
               ^
simulations/multiexperts/sats_analyse/multisat_checksats.cpp:71:16: warning: Member variable 'MultiSatCheck::t' is not initialized in the constructor. [uninitMemberVar]
MultiSatCheck::MultiSatCheck( const MultiSatCheckConf& _conf)
               ^
simulations/multiexperts/sats_analyse/multisat_checksats.cpp:361:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/sats_analyse/multisat_checksats.cpp:363:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/sats_analyse/multisat_checksats.cpp:365:6: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
  if(fscanf(f,"%s\n", buffer) != 1) return false;
     ^
simulations/multiexperts/sats_analyse/multisat_checksats.cpp:213:21: style: C-style pointer casting [cstyleCast]
  double faktor = *((double*)fak);
                    ^
simulations/multiexperts/sats_analyse/multisat_checksats.cpp:302:15: style: C-style pointer casting [cstyleCast]
  return min(*(double*)m,d);
              ^
simulations/muscled_arm/main.cpp:75:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/muscled_arm/main.cpp:76:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
simulations/muscled_arm/main.cpp:79:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/muscled_arm/main.cpp:82:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/muscled_arm/main.cpp:85:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/muscled_arm/main.cpp:88:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/muscled_arm/main.cpp:91:0: information: Include file: <ode_robots/nimm4.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm4.h>
^
simulations/muscled_arm/main.cpp:92:0: information: Include file: <ode_robots/arm2segm.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/arm2segm.h>
^
simulations/muscled_arm/main.cpp:93:0: information: Include file: <ode_robots/muscledarm.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/muscledarm.h>
^
simulations/muscled_arm/main.cpp:97:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/muscled_arm/main.cpp:100:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/muscled_arm/main.cpp:101:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/muscled_arm/main.cpp:102:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/muscled_arm/main.cpp:103:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/muscled_arm/main.cpp:104:0: information: Include file: <selforg/sox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sox.h>
^
simulations/multiexperts/sats_analyse/multisat_checksats.cpp:301:32: style: Parameter 'm' can be declared as pointer to const [constParameterPointer]
double MultiSatCheck_min(void* m, double d){
                               ^
simulations/muscled_arm/main.cpp:145:6: style: C-style pointer casting [cstyleCast]
    ((OdeRobot*)arm)->place(Position(0,0,0));
     ^
simulations/muscled_arm/main.cpp:210:47: style: Parameter 'globalData' can be declared as reference to const [constParameterReference]
  void command (const OdeHandle&, GlobalData& globalData, int cmd)
                                              ^
182/300 files checked 66% done
183/300 files checked 66% done
Checking simulations/nimm2_arena/main.cpp ...
Checking simulations/nimm2_eating/main.cpp ...
simulations/nimm2_arena/main.cpp:72:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/nimm2_arena/main.cpp:74:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/nimm2_arena/main.cpp:75:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/nimm2_arena/main.cpp:76:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/nimm2_arena/main.cpp:78:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/nimm2_arena/main.cpp:79:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/nimm2_arena/main.cpp:80:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/nimm2_arena/main.cpp:81:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/nimm2_eating/main.cpp:39:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/nimm2_arena/main.cpp:82:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/nimm2_eating/main.cpp:41:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/nimm2_arena/main.cpp:83:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
simulations/nimm2_eating/main.cpp:42:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/nimm2_arena/main.cpp:85:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
simulations/nimm2_eating/main.cpp:43:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/nimm2_arena/main.cpp:87:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/nimm2_eating/main.cpp:45:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/nimm2_eating/main.cpp:46:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/nimm2_eating/main.cpp:47:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/nimm2_eating/main.cpp:48:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/nimm2_eating/main.cpp:49:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/nimm2_eating/main.cpp:50:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
simulations/nimm2_eating/main.cpp:52:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/nimm2_eating/main.cpp:148:9: style: Statements following 'break' will never be executed. [unreachableCode]
        fclose(f);
        ^
184/300 files checked 67% done
Checking simulations/nimm2_hebb/invertnchannelcontrollerhebbh.cpp ...
simulations/multiexperts/reinforcement/main.cpp:473:3: warning: Member variable 'ThisSim::controller' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(QLearning* qlearning):
  ^
simulations/multiexperts/reinforcement/main.cpp:473:3: warning: Member variable 'ThisSim::multirein' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(QLearning* qlearning):
  ^
simulations/multiexperts/reinforcement/main.cpp:473:3: warning: Member variable 'ThisSim::wiring' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(QLearning* qlearning):
  ^
simulations/multiexperts/reinforcement/main.cpp:473:3: warning: Member variable 'ThisSim::agent' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(QLearning* qlearning):
  ^
simulations/multiexperts/reinforcement/main.cpp:473:3: warning: Member variable 'ThisSim::sphere' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(QLearning* qlearning):
  ^
simulations/multiexperts/reinforcement/main.cpp:473:3: warning: Member variable 'ThisSim::playground' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(QLearning* qlearning):
  ^
simulations/multiexperts/reinforcement/main.cpp:473:3: warning: Member variable 'ThisSim::playgroundsize' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(QLearning* qlearning):
  ^
simulations/multiexperts/reinforcement/main.cpp:473:3: warning: Member variable 'ThisSim::playgroundheight' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(QLearning* qlearning):
  ^
simulations/multiexperts/reinforcement/main.cpp:102:3: style: Class 'ReinforceCmpStateController' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ReinforceCmpStateController(const MultiReinforceConf& conf)
  ^
simulations/multiexperts/reinforcement/main.cpp:203:3: style: Class 'ReinforceRedCmpStateController' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ReinforceRedCmpStateController(const MultiReinforceConf& conf)
  ^
simulations/multiexperts/reinforcement/main.cpp:281:3: style: Class 'ReinforceIRSphereController' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ReinforceIRSphereController(const MultiReinforceConf& conf)
  ^
simulations/multiexperts/reinforcement/main.cpp:335:3: style: Class 'ReinforceSphereController' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ReinforceSphereController(const MultiReinforceConf& conf)
  ^
simulations/multiexperts/reinforcement/main.cpp:393:3: style: Class 'ReinforceCPController' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ReinforceCPController(const ClassicReinforceConf& conf)
  ^
simulations/multiexperts/reinforcement/main.cpp:473:3: style: Class 'ThisSim' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ThisSim(QLearning* qlearning):
  ^
simulations/multiexperts/reinforcement/main.cpp:106:18: style: The function 'calcReinforcement' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual double calcReinforcement(){
                 ^
simulations/multiexperts/reinforcement/multireinforce.h:195:18: note: Virtual function in base class
  virtual double calcReinforcement()  override = 0;
                 ^
simulations/multiexperts/reinforcement/main.cpp:106:18: note: Function in derived class
  virtual double calcReinforcement(){
                 ^
simulations/multiexperts/reinforcement/main.cpp:148:15: style: The function 'getStateNumber' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int getStateNumber(){
              ^
simulations/multiexperts/reinforcement/multireinforce.h:189:15: note: Virtual function in base class
  virtual int getStateNumber()  override = 0;
              ^
simulations/multiexperts/reinforcement/main.cpp:148:15: note: Function in derived class
  virtual int getStateNumber(){
              ^
simulations/multiexperts/reinforcement/main.cpp:152:15: style: The function 'calcState' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int calcState() {
              ^
simulations/multiexperts/reinforcement/multireinforce.h:192:15: note: Virtual function in base class
  virtual int calcState()  override = 0;
              ^
simulations/multiexperts/reinforcement/main.cpp:152:15: note: Function in derived class
  virtual int calcState() {
              ^
simulations/multiexperts/reinforcement/main.cpp:207:18: style: The function 'calcReinforcement' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual double calcReinforcement(){
                 ^
simulations/multiexperts/reinforcement/multireinforce.h:195:18: note: Virtual function in base class
  virtual double calcReinforcement()  override = 0;
                 ^
simulations/multiexperts/reinforcement/main.cpp:207:18: note: Function in derived class
  virtual double calcReinforcement(){
                 ^
simulations/multiexperts/reinforcement/main.cpp:226:15: style: The function 'getStateNumber' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int getStateNumber(){
              ^
simulations/multiexperts/reinforcement/multireinforce.h:189:15: note: Virtual function in base class
  virtual int getStateNumber()  override = 0;
              ^
simulations/multiexperts/reinforcement/main.cpp:226:15: note: Function in derived class
  virtual int getStateNumber(){
              ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbh.cpp:54:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/multiexperts/reinforcement/main.cpp:230:15: style: The function 'calcState' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int calcState() {
              ^
simulations/multiexperts/reinforcement/multireinforce.h:192:15: note: Virtual function in base class
  virtual int calcState()  override = 0;
              ^
simulations/multiexperts/reinforcement/main.cpp:230:15: note: Function in derived class
  virtual int calcState() {
              ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbh.h:55:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/multiexperts/reinforcement/main.cpp:285:18: style: The function 'calcReinforcement' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual double calcReinforcement(){
                 ^
simulations/multiexperts/reinforcement/multireinforce.h:195:18: note: Virtual function in base class
  virtual double calcReinforcement()  override = 0;
                 ^
simulations/multiexperts/reinforcement/main.cpp:285:18: note: Function in derived class
  virtual double calcReinforcement(){
                 ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbh.h:57:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/multiexperts/reinforcement/main.cpp:299:15: style: The function 'getStateNumber' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int getStateNumber(){
              ^
simulations/multiexperts/reinforcement/multireinforce.h:189:15: note: Virtual function in base class
  virtual int getStateNumber()  override = 0;
              ^
simulations/multiexperts/reinforcement/main.cpp:299:15: note: Function in derived class
  virtual int getStateNumber(){
              ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbh.h:58:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/multiexperts/reinforcement/main.cpp:303:15: style: The function 'calcState' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int calcState() {
              ^
simulations/multiexperts/reinforcement/multireinforce.h:192:15: note: Virtual function in base class
  virtual int calcState()  override = 0;
              ^
simulations/multiexperts/reinforcement/main.cpp:303:15: note: Function in derived class
  virtual int calcState() {
              ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbh.h:60:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/multiexperts/reinforcement/main.cpp:339:18: style: The function 'calcReinforcement' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual double calcReinforcement(){
                 ^
simulations/multiexperts/reinforcement/multireinforce.h:195:18: note: Virtual function in base class
  virtual double calcReinforcement()  override = 0;
                 ^
simulations/multiexperts/reinforcement/main.cpp:339:18: note: Function in derived class
  virtual double calcReinforcement(){
                 ^
simulations/multiexperts/reinforcement/main.cpp:356:15: style: The function 'getStateNumber' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int getStateNumber(){
              ^
simulations/multiexperts/reinforcement/multireinforce.h:189:15: note: Virtual function in base class
  virtual int getStateNumber()  override = 0;
              ^
simulations/multiexperts/reinforcement/main.cpp:356:15: note: Function in derived class
  virtual int getStateNumber(){
              ^
simulations/multiexperts/reinforcement/main.cpp:360:15: style: The function 'calcState' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int calcState() {
              ^
simulations/multiexperts/reinforcement/multireinforce.h:192:15: note: Virtual function in base class
  virtual int calcState()  override = 0;
              ^
simulations/multiexperts/reinforcement/main.cpp:360:15: note: Function in derived class
  virtual int calcState() {
              ^
simulations/multiexperts/reinforcement/main.cpp:744:21: style: The scope of the variable 'c' can be reduced. [variableScope]
    MultiReinforce* c;
                    ^
simulations/multiexperts/reinforcement/main.cpp:745:30: style: The scope of the variable 'f' can be reduced. [variableScope]
    char file[256];    FILE* f;
                             ^
simulations/multiexperts/reinforcement/main.cpp:817:11: style: Variable 'times' can be declared as const array [constVariable]
      int times[8]={600,1200,2400,4800,9600,19200,38400,76800}; // 10 20 40 80 160 320 640 1280 minutes
          ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbh.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/multiexperts/reinforcement/main.cpp:460:23: style: class member 'ThisSim::controller' is never used. [unusedStructMember]
  AbstractController *controller;
                      ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbh.cpp:59:32: warning: Member variable 'InvertNChannelControllerHebbH::number_hom_sensors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbH::InvertNChannelControllerHebbH(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                               ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbh.cpp:59:32: warning: Member variable 'InvertNChannelControllerHebbH::number_context_sensors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbH::InvertNChannelControllerHebbH(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                               ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbh.cpp:59:32: warning: Member variable 'InvertNChannelControllerHebbH::number_motors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbH::InvertNChannelControllerHebbH(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                               ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbh.cpp:59:32: warning: Member variable 'InvertNChannelControllerHebbH::number_all_sensors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbH::InvertNChannelControllerHebbH(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                               ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbh.cpp:59:32: warning: Member variable 'InvertNChannelControllerHebbH::all_sensors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbH::InvertNChannelControllerHebbH(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                               ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbh.h:74:3: style: Class 'InvertNChannelControllerHebbH' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  InvertNChannelControllerHebbH(int _buffersize, bool _update_only_1=false, bool inactivate_hebb=false);
  ^
simulations/multiexperts/reinforcement/main.cpp:183:9: style: Variable 'agent' is assigned a value that is never used. [unreadVariable]
    int agent=argmin(satErrors);
        ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbh.cpp:413:9: style: Condition 'cutAt0_80' is always false [knownConditionTrueFalse]
    if (cutAt0_80) {
        ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbh.cpp:410:20: note: Assignment 'cutAt0_80=false', assigned value is 0
    bool cutAt0_80=false;
                   ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbh.cpp:413:9: note: Condition 'cutAt0_80' is always false
    if (cutAt0_80) {
        ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbh.cpp:425:9: style: Condition 'useTanhForH' is always true [knownConditionTrueFalse]
    if (useTanhForH){
        ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbh.cpp:411:22: note: Assignment 'useTanhForH=true', assigned value is 1
    bool useTanhForH=true;
                     ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbh.cpp:425:9: note: Condition 'useTanhForH' is always true
    if (useTanhForH){
        ^
simulations/nimm2_arena/main.cpp:219:0: style: Statements following 'break' will never be executed. [unreachableCode]
        fclose(f);
^
185/300 files checked 67% done
186/300 files checked 68% done
187/300 files checked 68% done
Checking simulations/nimm2_hebb/invertnchannelcontrollerhebbxsi.cpp ...
Checking simulations/nimm2_hebb/main.cpp ...
Checking simulations/nimm2_layered/layer1_incc.cpp ...
simulations/multischlange/main.cpp:215:19: style: Condition 'i<0' is always false [knownConditionTrueFalse]
    for(int i=0; i<0; i++){
                  ^
simulations/multischlange/main.cpp:215:15: note: Assignment 'i=0', assigned value is 0
    for(int i=0; i<0; i++){
              ^
simulations/multischlange/main.cpp:215:19: note: Condition 'i<0' is always false
    for(int i=0; i<0; i++){
                  ^
simulations/multischlange/main.cpp:227:18: style: Condition 'i<0' is always false [knownConditionTrueFalse]
   for(int i=0; i<0; i++){
                 ^
simulations/multischlange/main.cpp:227:14: note: Assignment 'i=0', assigned value is 0
   for(int i=0; i<0; i++){
             ^
simulations/multischlange/main.cpp:227:18: note: Condition 'i<0' is always false
   for(int i=0; i<0; i++){
                 ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbxsi.cpp:36:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/multischlange/main.cpp:240:19: style: Condition 'i<sphericalsIR' is always false [knownConditionTrueFalse]
    for(int i=0; i<sphericalsIR; i++){
                  ^
simulations/multischlange/main.cpp:240:15: note: Assignment 'i=0', assigned value is 0
    for(int i=0; i<sphericalsIR; i++){
              ^
simulations/multischlange/main.cpp:133:24: note: Assignment 'sphericalsIR=0', assigned value is 0
    int sphericalsIR = 0;
                       ^
simulations/multischlange/main.cpp:240:19: note: Condition 'i<sphericalsIR' is always false
    for(int i=0; i<sphericalsIR; i++){
                  ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbxsi.h:43:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/multischlange/main.cpp:287:19: style: Condition 'i<sphericalsXYZ' is always false [knownConditionTrueFalse]
    for(int i=0; i<sphericalsXYZ; i++){
                  ^
simulations/multischlange/main.cpp:287:15: note: Assignment 'i=0', assigned value is 0
    for(int i=0; i<sphericalsXYZ; i++){
              ^
simulations/multischlange/main.cpp:134:25: note: Assignment 'sphericalsXYZ=0', assigned value is 0
    int sphericalsXYZ = 0;
                        ^
simulations/multischlange/main.cpp:287:19: note: Condition 'i<sphericalsXYZ' is always false
    for(int i=0; i<sphericalsXYZ; i++){
                  ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbxsi.h:45:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/nimm2_layered/layer1_incc.cpp:43:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/nimm2_hebb/invertnchannelcontrollerhebbxsi.h:46:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/nimm2_hebb/invertnchannelcontrollerhebbxsi.h:48:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/nimm2_layered/layer1_incc.h:49:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/nimm2_layered/layer1_incc.h:50:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/nimm2_layered/layer1_incc.h:52:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/multischlange/main.cpp:710:8: style: C-style pointer casting [cstyleCast]
      ((OdeRobot*) snake)->place(Pos(r*3+3,r*2-5, height));
       ^
simulations/nimm2_hebb/main.cpp:48:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/nimm2_hebb/main.cpp:51:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/nimm2_hebb/main.cpp:54:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/nimm2_hebb/main.cpp:57:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/nimm2_hebb/main.cpp:60:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/nimm2_hebb/main.cpp:63:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/nimm2_hebb/main.cpp:64:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/nimm2_hebb/main.cpp:67:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/nimm2_hebb/main.cpp:68:0: information: Include file: <ode_robots/nimm4.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm4.h>
^
simulations/nimm2_hebb/main.cpp:72:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/nimm2_hebb/main.cpp:74:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/nimm2_hebb/main.cpp:75:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/nimm2_hebb/main.cpp:82:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/nimm2_layered/layer1_incc.h:66:3: style: Class 'Layer1_INCC' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Layer1_INCC(int _buffersize, bool _update_only_1=false);
  ^
188/300 files checked 68% done
Checking simulations/nimm2_layered/layer2_incc.cpp ...
simulations/nimm2_layered/layer2_incc.cpp:52:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/nimm2_layered/layer2_incc.h:52:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/nimm2_layered/layer2_incc.h:53:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/nimm2_layered/layer2_incc.h:55:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
189/300 files checked 69% done
simulations/nimm2_hebb/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/nimm2_layered/layeredcontroller.cpp ...
simulations/nimm2_layered/layer2_incc.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/nimm2_hebb/invertnchannelcontrollerhebbxsi.cpp:41:34: warning: Member variable 'InvertNChannelControllerHebbXsi::number_motors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbXsi::InvertNChannelControllerHebbXsi(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                                 ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbxsi.cpp:41:34: warning: Member variable 'InvertNChannelControllerHebbXsi::number_all_sensors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbXsi::InvertNChannelControllerHebbXsi(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                                 ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbxsi.cpp:41:34: warning: Member variable 'InvertNChannelControllerHebbXsi::all_sensors' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelControllerHebbXsi::InvertNChannelControllerHebbXsi(int _buffersize, bool _update_only_1/*=false*/, bool inactivate_hebb/*=false*/)
                                 ^
simulations/nimm2_hebb/invertnchannelcontrollerhebbxsi.h:62:3: style: Class 'InvertNChannelControllerHebbXsi' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  InvertNChannelControllerHebbXsi(int _buffersize, bool _update_only_1=false, bool inactivate_hebb=false);
  ^
190/300 files checked 69% done
simulations/nimm2_layered/layer2_incc.h:69:3: style: Class 'Layer2_INCC' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Layer2_INCC(int _buffersize, bool _update_only_1=false);
  ^
simulations/nimm2_layered/layer2_incc.cpp:174:9: style: Condition 'cutAt0_80' is always false [knownConditionTrueFalse]
    if (cutAt0_80) {
        ^
simulations/nimm2_layered/layer2_incc.cpp:171:20: note: Assignment 'cutAt0_80=false', assigned value is 0
    bool cutAt0_80=false;
                   ^
simulations/nimm2_layered/layer2_incc.cpp:174:9: note: Condition 'cutAt0_80' is always false
    if (cutAt0_80) {
        ^
simulations/nimm2_layered/layer2_incc.cpp:186:9: style: Condition 'useTanhForH' is always true [knownConditionTrueFalse]
    if (useTanhForH){
        ^
simulations/nimm2_layered/layer2_incc.cpp:172:22: note: Assignment 'useTanhForH=true', assigned value is 1
    bool useTanhForH=true;
                     ^
simulations/nimm2_layered/layer2_incc.cpp:186:9: note: Condition 'useTanhForH' is always true
    if (useTanhForH){
        ^
simulations/nimm2_layered/layeredcontroller.cpp:50:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/nimm2_layered/layeredcontroller.h:54:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulations/nimm2_layered/layeredcontroller.h:55:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
Checking simulations/nimm2_layered/main.cpp ...
simulations/nimm2_layered/layeredcontroller.h:56:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
simulations/nimm2_layered/layeredcontroller.h:58:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/nimm2_layered/layeredcontroller.h:62:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/nimm2_layered/layeredcontroller.h:63:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
Checking simulations/octopus/main.cpp ...
simulations/nimm2_layered/layeredcontroller.h:65:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
191/300 files checked 69% done
simulations/nimm2_layered/main.cpp:56:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/nimm2_layered/main.cpp:59:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/nimm2_layered/main.cpp:62:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/nimm2_layered/main.cpp:65:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/nimm2_layered/main.cpp:68:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/nimm2_layered/main.cpp:71:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/nimm2_layered/main.cpp:72:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/nimm2_layered/main.cpp:75:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/nimm2_layered/main.cpp:76:0: information: Include file: <ode_robots/nimm4.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm4.h>
^
simulations/nimm2_layered/main.cpp:80:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/nimm2_layered/main.cpp:82:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/nimm2_layered/main.cpp:83:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/octopus/main.cpp:51:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/octopus/main.cpp:54:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/octopus/main.cpp:57:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/octopus/main.cpp:60:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/octopus/main.cpp:63:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/octopus/main.cpp:66:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/octopus/octopus.h:52:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
simulations/octopus/octopus.h:53:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
simulations/octopus/main.cpp:72:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/octopus/main.cpp:74:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/octopus/main.cpp:78:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/octopus/main.cpp:79:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/octopus/octopus.h:104:14: error: Uninitialized variable: c.frictionGround [uninitvar]
      return c;
             ^
simulations/octopus/octopus.h:104:14: error: Uninitialized struct member: c.frictionGround [uninitStructMember]
      return c;
             ^
192/300 files checked 70% done
simulations/nimm2_layered/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/octopus/octopus.cpp ...
simulations/nimm2_layered/layeredcontroller.cpp:56:20: warning: Member variable 'LayeredController::number_channels' is not initialized in the constructor. [uninitMemberVar]
LayeredController::LayeredController(int _buffersize, bool _update_only_1/*=false*/) :  AbstractController("LayeredController", "$Id$") {
                   ^
simulations/nimm2_layered/layeredcontroller.cpp:56:20: warning: Member variable 'LayeredController::buffersize' is not initialized in the constructor. [uninitMemberVar]
LayeredController::LayeredController(int _buffersize, bool _update_only_1/*=false*/) :  AbstractController("LayeredController", "$Id$") {
                   ^
simulations/nimm2_layered/layeredcontroller.cpp:56:20: warning: Member variable 'LayeredController::update_only_1' is not initialized in the constructor. [uninitMemberVar]
LayeredController::LayeredController(int _buffersize, bool _update_only_1/*=false*/) :  AbstractController("LayeredController", "$Id$") {
                   ^
simulations/nimm2_layered/layeredcontroller.cpp:56:20: warning: Member variable 'LayeredController::x_buffer' is not initialized in the constructor. [uninitMemberVar]
LayeredController::LayeredController(int _buffersize, bool _update_only_1/*=false*/) :  AbstractController("LayeredController", "$Id$") {
                   ^
simulations/nimm2_layered/layeredcontroller.cpp:56:20: warning: Member variable 'LayeredController::y_buffer' is not initialized in the constructor. [uninitMemberVar]
LayeredController::LayeredController(int _buffersize, bool _update_only_1/*=false*/) :  AbstractController("LayeredController", "$Id$") {
                   ^
simulations/nimm2_layered/layeredcontroller.cpp:56:20: warning: Member variable 'LayeredController::t' is not initialized in the constructor. [uninitMemberVar]
LayeredController::LayeredController(int _buffersize, bool _update_only_1/*=false*/) :  AbstractController("LayeredController", "$Id$") {
                   ^
simulations/nimm2_layered/layeredcontroller.h:77:3: style: Class 'LayeredController' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  LayeredController(int _buffersize, bool _update_only_1=false);
  ^
simulations/nimm2_hebb/main.cpp:144:8: style: The if condition is the same as the previous if condition [duplicateCondition]
    if(labyrint){
       ^
simulations/nimm2_hebb/main.cpp:116:25: note: 'squarecorridor' is assigned value 'false' here.
    bool squarecorridor=false;
                        ^
simulations/nimm2_hebb/main.cpp:115:19: note: 'labyrint' is assigned value 'false' here.
    bool labyrint=false;
                  ^
simulations/nimm2_hebb/main.cpp:128:8: note: First condition
    if(squarecorridor){
       ^
simulations/nimm2_hebb/main.cpp:144:8: note: Second condition
    if(labyrint){
       ^
simulations/nimm2_hebb/main.cpp:120:8: style: Condition 'normalplayground' is always true [knownConditionTrueFalse]
    if(normalplayground){
       ^
simulations/nimm2_hebb/main.cpp:117:27: note: Assignment 'normalplayground=true', assigned value is 1
    bool normalplayground=true;
                          ^
simulations/nimm2_hebb/main.cpp:120:8: note: Condition 'normalplayground' is always true
    if(normalplayground){
       ^
simulations/nimm2_hebb/main.cpp:210:21: style: Condition 'i<0' is always false [knownConditionTrueFalse]
    for (int i=0; i < 0/*2*/; i++){
                    ^
simulations/nimm2_hebb/main.cpp:210:16: note: Assignment 'i=0', assigned value is 0
    for (int i=0; i < 0/*2*/; i++){
               ^
simulations/nimm2_hebb/main.cpp:210:21: note: Condition 'i<0' is always false
    for (int i=0; i < 0/*2*/; i++){
                    ^
simulations/octopus/octopus.cpp:62:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
193/300 files checked 70% done
simulations/octopus/octopus.cpp:63:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/octopus/octopus.cpp:66:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/octopus/octopus.cpp:69:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/octopus/octopus.cpp:70:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
Checking simulations/pid_test/main.cpp ...
194/300 files checked 70% done
simulations/pid_test/main.cpp:49:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/pid_test/main.cpp:52:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/pid_test/main.cpp:55:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/pid_test/main.cpp:58:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
Checking simulations/pseudosensor_wheelrobot/main.cpp ...
simulations/pid_test/main.cpp:61:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/pid_test/main.cpp:64:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/pid_test/main.cpp:67:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/pid_test/main.cpp:69:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/pid_test/main.cpp:70:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/pid_test/main.cpp:74:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/pid_test/main.cpp:75:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/pseudosensor_wheelrobot/main.cpp:55:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/pseudosensor_wheelrobot/main.cpp:56:0: information: Include file: <drawstuff/drawstuff.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <drawstuff/drawstuff.h>
^
simulations/pseudosensor_wheelrobot/main.cpp:57:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/pseudosensor_wheelrobot/main.cpp:59:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/pseudosensor_wheelrobot/main.cpp:60:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/pseudosensor_wheelrobot/main.cpp:61:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/pseudosensor_wheelrobot/main.cpp:62:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/pseudosensor_wheelrobot/main.cpp:63:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/pseudosensor_wheelrobot/main.cpp:65:0: information: Include file: <ode_robots/nimm4.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm4.h>
^
simulations/pseudosensor_wheelrobot/main.cpp:66:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/pseudosensor_wheelrobot/main.cpp:68:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/pseudosensor_wheelrobot/main.cpp:69:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/pseudosensor_wheelrobot/main.cpp:70:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/pseudosensor_wheelrobot/main.cpp:126:87: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for(ObstacleList::iterator i=global.obstacles.begin(); i != global.obstacles.end(); i++){
                                                                                      ^
simulations/pseudosensor_wheelrobot/main.cpp:130:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for(OdeAgentList::iterator i=global.agents.begin(); i != global.agents.end(); i++){
                                                                                ^
195/300 files checked 70% done
simulations/octopus/octopus.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/reinforcement/main.cpp ...
simulations/pid_test/main.cpp:83:23: style: class member 'ThisSim::controller' is never used. [unusedStructMember]
  AbstractController *controller;
                      ^
simulations/pid_test/main.cpp:105:23: style: Variable 'useVelServos' is assigned a value that is never used. [unreadVariable]
    bool useVelServos = true;
                      ^
simulations/nimm2_layered/main.cpp:153:8: style: The if condition is the same as the previous if condition [duplicateCondition]
    if(labyrint){
       ^
simulations/nimm2_layered/main.cpp:125:25: note: 'squarecorridor' is assigned value 'false' here.
    bool squarecorridor=false;
                        ^
simulations/nimm2_layered/main.cpp:124:19: note: 'labyrint' is assigned value 'false' here.
    bool labyrint=false;
                  ^
simulations/nimm2_layered/main.cpp:137:8: note: First condition
    if(squarecorridor){
       ^
simulations/nimm2_layered/main.cpp:153:8: note: Second condition
    if(labyrint){
       ^
196/300 files checked 71% done
simulations/nimm2_layered/main.cpp:129:8: style: Condition 'normalplayground' is always true [knownConditionTrueFalse]
    if(normalplayground){
       ^
simulations/nimm2_layered/main.cpp:126:27: note: Assignment 'normalplayground=true', assigned value is 1
    bool normalplayground=true;
                          ^
simulations/nimm2_layered/main.cpp:129:8: note: Condition 'normalplayground' is always true
    if(normalplayground){
       ^
simulations/nimm2_layered/main.cpp:219:21: style: Condition 'i<0' is always false [knownConditionTrueFalse]
    for (int i=0; i < 0/*2*/; i++){
                    ^
simulations/nimm2_layered/main.cpp:219:16: note: Assignment 'i=0', assigned value is 0
    for (int i=0; i < 0/*2*/; i++){
               ^
simulations/nimm2_layered/main.cpp:219:21: note: Condition 'i<0' is always false
    for (int i=0; i < 0/*2*/; i++){
                    ^
simulations/reinforcement/main.cpp:104:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/reinforcement/main.cpp:106:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/reinforcement/main.cpp:107:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
Checking simulations/rhoenrad/main.cpp ...
simulations/reinforcement/main.cpp:108:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/reinforcement/main.cpp:109:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/reinforcement/main.cpp:110:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/reinforcement/main.cpp:112:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/reinforcement/main.cpp:113:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/reinforcement/main.cpp:114:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/reinforcement/main.cpp:115:0: information: Include file: <selforg/ffnncontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/ffnncontroller.h>
^
simulations/reinforcement/main.cpp:116:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/reinforcement/main.cpp:117:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/reinforcement/main.cpp:118:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/reinforcement/main.cpp:119:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/reinforcement/main.cpp:121:0: information: Include file: <ode_robots/forcedsphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/forcedsphere.h>
^
simulations/reinforcement/main.cpp:122:0: information: Include file: <ode_robots/sphererobot3masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sphererobot3masses.h>
^
simulations/reinforcement/main.cpp:123:0: information: Include file: <ode_robots/barrel2masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/barrel2masses.h>
^
simulations/reinforcement/main.cpp:124:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/reinforcement/main.cpp:125:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/reinforcement/main.cpp:126:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
197/300 files checked 71% done
simulations/rhoenrad/main.cpp:25:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/rhoenrad/main.cpp:26:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
Checking simulations/rhoenrad/rhoenrad.cpp ...
simulations/rhoenrad/main.cpp:27:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/rhoenrad/main.cpp:28:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/rhoenrad/sox.h:24:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulations/rhoenrad/sox.h:25:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/rhoenrad/sox.h:26:0: information: Include file: <selforg/controllernet.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controllernet.h>
^
simulations/rhoenrad/sox.h:28:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/rhoenrad/sox.h:29:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/rhoenrad/sox.h:31:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/rhoenrad/main.cpp:34:0: information: Include file: <selforg/motorbabbler.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/motorbabbler.h>
^
simulations/rhoenrad/main.cpp:39:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/rhoenrad/main.cpp:40:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/rhoenrad/main.cpp:42:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/rhoenrad/main.cpp:45:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/rhoenrad/main.cpp:46:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/rhoenrad/main.cpp:47:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/rhoenrad/main.cpp:48:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/rhoenrad/main.cpp:49:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/rhoenrad/main.cpp:51:0: information: Include file: <ode_robots/addsensors2robotadapter.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/addsensors2robotadapter.h>
^
simulations/rhoenrad/main.cpp:52:0: information: Include file: <ode_robots/sliderwheelie.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sliderwheelie.h>
^
simulations/rhoenrad/main.cpp:53:0: information: Include file: <ode_robots/plattfussschlange.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/plattfussschlange.h>
^
simulations/rhoenrad/main.cpp:54:0: information: Include file: <ode_robots/schlangeservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo.h>
^
simulations/rhoenrad/main.cpp:55:0: information: Include file: <ode_robots/schlangeservo2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo2.h>
^
simulations/rhoenrad/rhoenrad.h:28:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
simulations/rhoenrad/rhoenrad.h:29:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
simulations/rhoenrad/rhoenrad.h:30:0: information: Include file: <ode_robots/sensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sensor.h>
^
simulations/reinforcement/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/rhoenrad/rhoenrad.cpp:23:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/rhoenrad/rhoenrad.cpp:24:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/rhoenrad/rhoenrad.cpp:27:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/rhoenrad/rhoenrad.cpp:30:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/rhoenrad/rhoenrad.cpp:31:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/rhoenrad/rhoenrad.cpp:32:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
simulations/rhoenrad/rhoenrad.cpp:33:0: information: Include file: <ode_robots/angularmotor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/angularmotor.h>
^
simulations/rhoenrad/rhoenrad.cpp:34:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
simulations/rhoenrad/rhoenrad.cpp:35:0: information: Include file: <ode_robots/irsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/irsensor.h>
^
simulations/rhoenrad/rhoenrad.cpp:37:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/octopus/octopus.cpp:150:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
simulations/octopus/octopus.cpp:153:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
simulations/octopus/octopus.cpp:232:84: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<UniversalServo*>::iterator i = servos.begin(); i!= servos.end(); i++){
                                                                                   ^
simulations/octopus/octopus.cpp:236:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                          ^
simulations/octopus/octopus.cpp:240:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                                ^
198/300 files checked 71% done
Checking simulations/rhoenrad/sox.cpp ...
simulations/reinforcement/main.cpp:158:8: style: Condition 'squarecorridor' is always false [knownConditionTrueFalse]
    if(squarecorridor){
       ^
simulations/reinforcement/main.cpp:148:25: note: Assignment 'squarecorridor=false', assigned value is 0
    bool squarecorridor=false;
                        ^
simulations/reinforcement/main.cpp:158:8: note: Condition 'squarecorridor' is always false
    if(squarecorridor){
       ^
simulations/reinforcement/main.cpp:174:8: style: Condition 'labyrint' is always false [knownConditionTrueFalse]
    if(labyrint){
       ^
simulations/reinforcement/main.cpp:147:19: note: Assignment 'labyrint=false', assigned value is 0
    bool labyrint=false;
                  ^
simulations/reinforcement/main.cpp:174:8: note: Condition 'labyrint' is always false
    if(labyrint){
       ^
simulations/reinforcement/main.cpp:234:19: style: Condition 'i<num_barrels' is always false [knownConditionTrueFalse]
    for(int i=0; i< num_barrels; i++){
                  ^
simulations/reinforcement/main.cpp:234:15: note: Assignment 'i=0', assigned value is 0
    for(int i=0; i< num_barrels; i++){
              ^
simulations/reinforcement/main.cpp:142:21: note: Assignment 'num_barrels=0', assigned value is 0
    int num_barrels=0;
                    ^
simulations/reinforcement/main.cpp:234:19: note: Condition 'i<num_barrels' is always false
    for(int i=0; i< num_barrels; i++){
                  ^
simulations/rhoenrad/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
199/300 files checked 71% done
simulations/rhoenrad/sox.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/robodrom/main.cpp ...
simulations/rhoenrad/sox.cpp:24:6: warning: Member variable 'SoX::number_sensors' is not initialized in the constructor. [uninitMemberVar]
SoX::SoX(const SoXConf& conf)
     ^
simulations/rhoenrad/sox.cpp:24:6: warning: Member variable 'SoX::number_motors' is not initialized in the constructor. [uninitMemberVar]
SoX::SoX(const SoXConf& conf)
     ^
simulations/rhoenrad/sox.cpp:24:6: warning: Member variable 'SoX::numControllerLayer' is not initialized in the constructor. [uninitMemberVar]
SoX::SoX(const SoXConf& conf)
     ^
simulations/rhoenrad/sox.cpp:24:6: warning: Member variable 'SoX::E' is not initialized in the constructor. [uninitMemberVar]
SoX::SoX(const SoXConf& conf)
     ^
simulations/rhoenrad/sox.h:54:3: style: Class 'SoX' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SoX(const SoXConf& conf = getDefaultConf());
  ^
simulations/robodrom/main.cpp:74:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/robodrom/main.cpp:77:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/robodrom/main.cpp:80:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/robodrom/main.cpp:83:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/robodrom/main.cpp:86:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/robodrom/main.cpp:87:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/robodrom/main.cpp:90:0: information: Include file: <ode_robots/sphererobot3masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sphererobot3masses.h>
^
simulations/rhoenrad/sox.cpp:202:19: style: Local variable 'y' shadows outer argument [shadowArgument]
    const Matrix& y     = cNet->getLayerOutput(l);
                  ^
simulations/rhoenrad/sox.cpp:168:48: note: Shadowed declaration
void SoX::learn(const Matrix& x, const Matrix& y){
                                               ^
simulations/rhoenrad/sox.cpp:202:19: note: Shadow variable
    const Matrix& y     = cNet->getLayerOutput(l);
                  ^
simulations/robodrom/main.cpp:91:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/robodrom/main.cpp:92:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/robodrom/main.cpp:97:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/robodrom/main.cpp:98:0: information: Include file: <ode_robots/terrainground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/terrainground.h>
^
simulations/robodrom/main.cpp:100:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/robodrom/main.cpp:101:0: information: Include file: <ode_robots/passivecapsule.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivecapsule.h>
^
simulations/robodrom/main.cpp:104:0: information: Include file: <selforg/sox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sox.h>
^
simulations/robodrom/main.cpp:105:0: information: Include file: <selforg/semox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/semox.h>
^
simulations/robodrom/main.cpp:106:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/robodrom/main.cpp:107:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
200/300 files checked 72% done
simulations/rhoenrad/rhoenrad.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/ros_connection/main.cpp ...
simulations/ros_connection/main.cpp:25:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/ros_connection/main.cpp:27:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/ros_connection/main.cpp:28:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/ros_connection/main.cpp:29:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/ros_connection/main.cpp:30:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/ros_connection/main.cpp:31:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/ros_connection/main.cpp:34:0: information: Include file: <selforg/sox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sox.h>
^
simulations/ros_connection/main.cpp:35:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/ros_connection/main.cpp:36:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/ros_connection/main.cpp:37:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/ros_connection/main.cpp:38:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/ros_connection/main.cpp:39:0: information: Include file: <selforg/ffnncontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/ffnncontroller.h>
^
simulations/ros_connection/main.cpp:40:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/ros_connection/main.cpp:41:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/ros_connection/main.cpp:42:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/ros_connection/main.cpp:43:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/ros_connection/main.cpp:45:0: information: Include file: <ode_robots/barrel2masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/barrel2masses.h>
^
simulations/ros_connection/main.cpp:46:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/ros_connection/main.cpp:47:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/ros_connection/roscontroller.h:26:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/ros_connection/roscontroller.h:27:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulations/ros_connection/roscontroller.h:28:0: information: Include file: <std_msgs/Float64MultiArray.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <std_msgs/Float64MultiArray.h>
^
simulations/ros_connection/roscontroller.h:29:0: information: Include file: <ros/ros.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ros/ros.h>
^
201/300 files checked 72% done
simulations/ros_connection/roscontroller.h:41:3: style: Class 'ROSController' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ROSController(const std::string& name);
  ^
Checking simulations/ros_connection/roscontroller.cpp ...
simulations/ros_connection/main.cpp:89:8: style: Condition 'normalplayground' is always false [knownConditionTrueFalse]
    if(normalplayground){
       ^
simulations/ros_connection/main.cpp:75:27: note: Assignment 'normalplayground=false', assigned value is 0
    bool normalplayground=false;
                          ^
simulations/ros_connection/main.cpp:89:8: note: Condition 'normalplayground' is always false
    if(normalplayground){
       ^
simulations/ros_connection/main.cpp:150:19: style: Condition 'i<num_barrels_test' is always false [knownConditionTrueFalse]
    for(int i=0; i< num_barrels_test; i++){
                  ^
simulations/ros_connection/main.cpp:150:15: note: Assignment 'i=0', assigned value is 0
    for(int i=0; i< num_barrels_test; i++){
              ^
simulations/ros_connection/main.cpp:70:26: note: Assignment 'num_barrels_test=0', assigned value is 0
    int num_barrels_test=0;
                         ^
simulations/ros_connection/main.cpp:150:19: note: Condition 'i<num_barrels_test' is always false
    for(int i=0; i< num_barrels_test; i++){
                  ^
simulations/ros_connection/roscontroller.cpp:26:0: information: Include file: <ros/ros.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ros/ros.h>
^
simulations/ros_connection/roscontroller.cpp:29:0: information: Include file: <std_msgs/Float64MultiArray.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <std_msgs/Float64MultiArray.h>
^
simulations/ros_connection/roscontroller.cpp:31:0: information: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sstream>
^
simulations/ros_connection/roscontroller.cpp:32:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
simulations/ros_connection/main.cpp:61:7: style: class member 'ThisSim::useReinforcement' is never used. [unusedStructMember]
  int useReinforcement;
      ^
202/300 files checked 72% done
simulations/rhoenrad/rhoenrad.h:322:18: style: Virtual function 'destroy' is called from destructor '~Rhoenrad()' at line 147. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void destroy() override;
                 ^
simulations/rhoenrad/rhoenrad.h:147:26: note: Calling destroy
    virtual ~Rhoenrad(){ destroy(); };
                         ^
simulations/rhoenrad/rhoenrad.h:322:18: note: destroy is a virtual function
    virtual void destroy() override;
                 ^
Checking simulations/running_through_limit_cycles/main.cpp ...
simulations/rhoenrad/main.cpp:408:15: style: The if condition is the same as the previous if condition [duplicateCondition]
          if(i==0) this->playground=playground;
              ^
simulations/rhoenrad/main.cpp:405:15: note: First condition
          if(i==0){ // set ground also to the soft substance
              ^
simulations/rhoenrad/main.cpp:408:15: note: Second condition
          if(i==0) this->playground=playground;
              ^
simulations/rhoenrad/main.cpp:141:10: style: Condition 'fixedInAir' is always true [knownConditionTrueFalse]
     if( fixedInAir){
         ^
simulations/rhoenrad/main.cpp:83:23: note: Assignment 'fixedInAir=true', assigned value is 1
    bool fixedInAir = true;
                      ^
simulations/rhoenrad/main.cpp:141:10: note: Condition 'fixedInAir' is always true
     if( fixedInAir){
         ^
simulations/ros_connection/roscontroller.cpp:35:16: warning: Member variable 'ROSController::number_sensors' is not initialized in the constructor. [uninitMemberVar]
ROSController::ROSController(const std::string& name)
               ^
simulations/ros_connection/roscontroller.cpp:35:16: warning: Member variable 'ROSController::number_motors' is not initialized in the constructor. [uninitMemberVar]
ROSController::ROSController(const std::string& name)
               ^
simulations/ros_connection/roscontroller.cpp:35:16: warning: Member variable 'ROSController::gotmotor' is not initialized in the constructor. [uninitMemberVar]
ROSController::ROSController(const std::string& name)
               ^
simulations/ros_connection/roscontroller.cpp:35:16: warning: Member variable 'ROSController::motorValues' is not initialized in the constructor. [uninitMemberVar]
ROSController::ROSController(const std::string& name)
               ^
simulations/running_through_limit_cycles/main.cpp:58:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/running_through_limit_cycles/main.cpp:59:0: information: Include file: <drawstuff/drawstuff.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <drawstuff/drawstuff.h>
^
simulations/running_through_limit_cycles/main.cpp:60:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/running_through_limit_cycles/main.cpp:62:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/running_through_limit_cycles/main.cpp:63:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/running_through_limit_cycles/main.cpp:64:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/running_through_limit_cycles/main.cpp:65:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/running_through_limit_cycles/main.cpp:66:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/running_through_limit_cycles/main.cpp:67:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/running_through_limit_cycles/main.cpp:69:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/ros_connection/roscontroller.cpp:51:10: warning: If memory allocation fails, then there is a possible null pointer dereference: motorValues [nullPointerOutOfMemory]
  memset(motorValues,0,sizeof(double)*motornumber);
         ^
simulations/ros_connection/roscontroller.cpp:50:31: note: Assuming allocation function fails
  motorValues = (motor*)malloc(sizeof(motor)*motornumber);
                              ^
simulations/ros_connection/roscontroller.cpp:50:17: note: Assignment 'motorValues=(motor*)malloc(sizeof(motor)*motornumber)', assigned value is 0
  motorValues = (motor*)malloc(sizeof(motor)*motornumber);
                ^
simulations/ros_connection/roscontroller.cpp:51:10: note: Null pointer dereference
  memset(motorValues,0,sizeof(double)*motornumber);
         ^
simulations/ros_connection/roscontroller.cpp:50:17: style: C-style pointer casting [cstyleCast]
  motorValues = (motor*)malloc(sizeof(motor)*motornumber);
                ^
simulations/rhoenrad/rhoenrad.h:215:24: style: Variable 'c.hip2JointLimit' is reassigned a value before the old one has been used. [redundantAssignment]
      c.hip2JointLimit = M_PI/30; // +- 6 degree
                       ^
simulations/rhoenrad/rhoenrad.h:207:24: note: c.hip2JointLimit is assigned
      c.hip2JointLimit = .8;    //
                       ^
simulations/rhoenrad/rhoenrad.h:215:24: note: c.hip2JointLimit is overwritten
      c.hip2JointLimit = M_PI/30; // +- 6 degree
                       ^
simulations/ros_connection/roscontroller.cpp:72:5: style: Statements following 'return' will never be executed. [unreachableCode]
    std::cerr << "Ros connection error" << std::endl;
    ^
203/300 files checked 72% done
simulations/rhoenrad/main.cpp:370:23: style: Local variable 'playground' shadows outer variable [shadowVariable]
          Playground* playground = new Playground(myHandle, osgHandle,
                      ^
simulations/rhoenrad/main.cpp:439:19: note: Shadowed declaration
  AbstractGround* playground;
                  ^
simulations/rhoenrad/main.cpp:370:23: note: Shadow variable
          Playground* playground = new Playground(myHandle, osgHandle,
                      ^
simulations/rhoenrad/main.cpp:400:23: style: Local variable 'playground' shadows outer variable [shadowVariable]
          Playground* playground = new Playground(myHandle, osgHandle,
                      ^
simulations/rhoenrad/main.cpp:439:19: note: Shadowed declaration
  AbstractGround* playground;
                  ^
simulations/rhoenrad/main.cpp:400:23: note: Shadow variable
          Playground* playground = new Playground(myHandle, osgHandle,
                      ^
Checking simulations/schlangeservo/main.cpp ...
simulations/running_through_limit_cycles/main.cpp:134:25: style: Parameter 'global' can be declared as reference to const. However it seems that 'config' is a callback function, if 'global' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
void config(GlobalData& global){
                        ^
simulations/running_through_limit_cycles/main.cpp:142:34: note: You might need to cast the function pointer here
  simulation_init(&start, &end, &config);
                                 ^
simulations/running_through_limit_cycles/main.cpp:134:25: note: Parameter 'global' can be declared as reference to const
void config(GlobalData& global){
                        ^
simulations/schlangeservo/main.cpp:91:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/schlangeservo/main.cpp:93:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
Checking simulations/short_circuit/invertnchannelcontroller_nobias.cpp ...
simulations/schlangeservo/main.cpp:94:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/schlangeservo/main.cpp:95:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/schlangeservo/main.cpp:96:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/schlangeservo/main.cpp:97:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/schlangeservo/main.cpp:98:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/schlangeservo/main.cpp:101:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/schlangeservo/main.cpp:102:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/schlangeservo/main.cpp:103:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/schlangeservo/main.cpp:104:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/schlangeservo/main.cpp:105:0: information: Include file: <selforg/soml.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/soml.h>
^
simulations/schlangeservo/main.cpp:108:0: information: Include file: <ode_robots/schlangeservo2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo2.h>
^
simulations/schlangeservo/main.cpp:109:0: information: Include file: <ode_robots/schlangeservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo.h>
^
simulations/schlangeservo/main.cpp:111:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/running_through_limit_cycles/main.cpp:120:87: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for(ObstacleList::iterator i=global.obstacles.begin(); i != global.obstacles.end(); i++){
                                                                                      ^
simulations/running_through_limit_cycles/main.cpp:124:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for(OdeAgentList::iterator i=global.agents.begin(); i != global.agents.end(); i++){
                                                                                ^
204/300 files checked 73% done
simulations/short_circuit/invertnchannelcontroller_nobias.h:63:0: information: Include file: <selforg/invertcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertcontroller.h>
^
simulations/short_circuit/invertnchannelcontroller_nobias.h:64:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/short_circuit/invertnchannelcontroller_nobias.h:66:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/short_circuit/invertnchannelcontroller_nobias.h:67:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
simulations/short_circuit/invertnchannelcontroller_nobias.h:69:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
205/300 files checked 73% done
simulations/schlangeservo/main.cpp:130:3: warning: Member variable 'ThisSim::fixator' is not initialized in the constructor. [uninitMemberVar]
  ThisSim()
  ^
simulations/schlangeservo/main.cpp:130:3: warning: Member variable 'ThisSim::controller' is not initialized in the constructor. [uninitMemberVar]
  ThisSim()
  ^
Checking simulations/short_circuit/main.cpp ...
simulations/schlangeservo/main.cpp:130:3: warning: Member variable 'ThisSim::teaching' is not initialized in the constructor. [uninitMemberVar]
  ThisSim()
  ^
simulations/schlangeservo/main.cpp:130:3: warning: Member variable 'ThisSim::dteaching' is not initialized in the constructor. [uninitMemberVar]
  ThisSim()
  ^
simulations/schlangeservo/main.cpp:130:3: warning: Member variable 'ThisSim::teachingSignal' is not initialized in the constructor. [uninitMemberVar]
  ThisSim()
  ^
simulations/schlangeservo/main.cpp:130:3: warning: Member variable 'ThisSim::teachingLen' is not initialized in the constructor. [uninitMemberVar]
  ThisSim()
  ^
simulations/schlangeservo/main.cpp:130:3: warning: Member variable 'ThisSim::dteachingSignal' is not initialized in the constructor. [uninitMemberVar]
  ThisSim()
  ^
simulations/schlangeservo/main.cpp:130:3: warning: Member variable 'ThisSim::dteachingLen' is not initialized in the constructor. [uninitMemberVar]
  ThisSim()
  ^
simulations/schlangeservo/main.cpp:160:6: style: C-style pointer casting [cstyleCast]
    ((OdeRobot*)schlange1)->place(Pos(0,0,3));
     ^
simulations/schlangeservo/main.cpp:186:11: style: Local variable 'controller' shadows outer variable [shadowVariable]
    SoML* controller = new SoML(sc);
          ^
simulations/schlangeservo/main.cpp:120:21: note: Shadowed declaration
  InvertMotorNStep* controller;
                    ^
simulations/schlangeservo/main.cpp:186:11: note: Shadow variable
    SoML* controller = new SoML(sc);
          ^
simulations/schlangeservo/main.cpp:140:18: style: Variable 'schlange' is assigned a value that is never used. [unreadVariable]
    bool schlange=true;
                 ^
simulations/short_circuit/main.cpp:84:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
206/300 files checked 73% done
simulations/short_circuit/main.cpp:86:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/short_circuit/main.cpp:87:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/short_circuit/main.cpp:89:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/short_circuit/main.cpp:90:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/short_circuit/main.cpp:91:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/short_circuit/main.cpp:92:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/short_circuit/main.cpp:94:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/short_circuit/main.cpp:95:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/short_circuit/main.cpp:96:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/short_circuit/main.cpp:97:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/short_circuit/main.cpp:100:0: information: Include file: <ode_robots/shortcircuit.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/shortcircuit.h>
^
Checking simulations/short_circuit_neuronworld/invertnchannelcontroller.cpp ...
simulations/short_circuit/invertnchannelcontroller_nobias.cpp:30:34: warning: Member variable 'InvertNChannelController_NoBias::number_channels' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelController_NoBias::InvertNChannelController_NoBias(int _buffersize, bool _update_only_1/*=false*/)
                                 ^
simulations/short_circuit/invertnchannelcontroller_nobias.h:81:3: style: Class 'InvertNChannelController_NoBias' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  InvertNChannelController_NoBias(int _buffersize, bool _update_only_1=false);
  ^
simulations/short_circuit/main.cpp:176:56: style: Parameter 'global' can be declared as reference to const [constParameterReference]
  void command(const OdeHandle& odeHandle, GlobalData& global, int key){
                                                       ^
207/300 files checked 73% done
Checking simulations/short_circuit_neuronworld/main.cpp ...
208/300 files checked 74% done
simulations/short_circuit_neuronworld/invertnchannelcontroller.cpp:74:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/short_circuit_neuronworld/invertnchannelcontroller.h:81:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/short_circuit_neuronworld/invertnchannelcontroller.h:82:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/short_circuit_neuronworld/invertnchannelcontroller.h:84:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/short_circuit_neuronworld/main.cpp:43:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
simulations/short_circuit_neuronworld/main.cpp:45:0: information: Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fstream>
^
simulations/short_circuit_neuronworld/main.cpp:46:0: information: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include  <sstream>
^
Checking simulations/short_circuit_neuronworld/neuronworld.cpp ...
simulations/short_circuit_neuronworld/main.cpp:47:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
simulations/short_circuit_neuronworld/main.cpp:49:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/short_circuit_neuronworld/main.cpp:51:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/short_circuit_neuronworld/main.cpp:52:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/short_circuit_neuronworld/main.cpp:53:0: information: Include file: <ode_robots/shortcircuit.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/shortcircuit.h>
^
simulations/short_circuit_neuronworld/main.cpp:55:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/short_circuit_neuronworld/main.cpp:56:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/short_circuit_neuronworld/main.cpp:57:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/short_circuit_neuronworld/main.cpp:58:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/short_circuit_neuronworld/main.cpp:66:0: information: Include file: <neuronworld.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <neuronworld.h>
^
simulations/short_circuit_neuronworld/neuronworld.cpp:41:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/short_circuit_neuronworld/neuronworld.h:53:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/short_circuit_neuronworld/neuronworld.cpp:58:14: style: C-style pointer casting [cstyleCast]
    motors = (motor*)malloc(motorno * sizeof(motor));
             ^
209/300 files checked 74% done
simulations/short_circuit_neuronworld/invertnchannelcontroller.cpp:79:27: warning: Member variable 'InvertNChannelController::number_channels' is not initialized in the constructor. [uninitMemberVar]
InvertNChannelController::InvertNChannelController(int _buffersize, bool _update_only_1/*=false*/, ModelNeuronProperties _model_type/*=nobias*/)
                          ^
Checking simulations/simple_barrel/main.cpp ...
simulations/short_circuit_neuronworld/invertnchannelcontroller.h:99:3: style: Class 'InvertNChannelController' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  InvertNChannelController(int _buffersize, bool _update_only_1=false, ModelNeuronProperties _model_type=nobias);
  ^
simulations/short_circuit_neuronworld/main.cpp:201:14: style: Local variable 't' shadows outer variable [shadowVariable]
    for (int t=0;t<49;t++){
             ^
simulations/short_circuit_neuronworld/main.cpp:72:5: note: Shadowed declaration
int t=0;
    ^
simulations/short_circuit_neuronworld/main.cpp:201:14: note: Shadow variable
    for (int t=0;t<49;t++){
             ^
simulations/short_circuit_neuronworld/main.cpp:145:56: style: Parameter 'global' can be declared as reference to const [constParameterReference]
  void command(const OdeHandle& odeHandle, GlobalData& global, int key){
                                                       ^
simulations/simple_barrel/main.cpp:50:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/simple_barrel/main.cpp:53:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/simple_barrel/main.cpp:56:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/simple_barrel/main.cpp:59:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/simple_barrel/main.cpp:62:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/simple_barrel/main.cpp:65:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/simple_barrel/main.cpp:68:0: information: Include file: <ode_robots/barrel2masses2nd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/barrel2masses2nd.h>
^
simulations/simple_barrel/main.cpp:71:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/simple_barrel/main.cpp:72:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
simulations/simple_barrel/main.cpp:73:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
simulations/simple_barrel/main.cpp:74:0: information: Include file: <sys/types.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/types.h>
^
simulations/simple_barrel/main.cpp:75:0: information: Include file: <sys/socket.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/socket.h>
^
simulations/simple_barrel/main.cpp:76:0: information: Include file: <netdb.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <netdb.h>
^
simulations/simple_barrel/main.cpp:77:0: information: Include file: <netinet/in.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <netinet/in.h>
^
simulations/simple_barrel/main.cpp:78:0: information: Include file: <arpa/inet.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <arpa/inet.h>
^
simulations/simple_barrel/main.cpp:79:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
simulations/simple_barrel/main.cpp:83:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/simple_barrel/main.cpp:86:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/simple_barrel/main.cpp:87:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/simple_barrel/main.cpp:88:0: information: Include file: <selforg/use_java_controller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/use_java_controller.h>
^
simulations/short_circuit_neuronworld/invertnchannelcontroller.cpp:97:24: style: Variable 'randGen' is assigned a value that is never used. [unreadVariable]
  if(!randGen) randGen = new RandGen(); // this gives a small memory leak
                       ^
simulations/short_circuit_neuronworld/main.cpp:195:18: style: Variable 'loopcounter' is assigned a value that is never used. [unreadVariable]
  int loopcounter=0;
                 ^
simulations/short_circuit_neuronworld/main.cpp:196:14: style: Variable 'loopmax' is assigned a value that is never used. [unreadVariable]
  int loopmax=1*49*49;
             ^
210/300 files checked 74% done
simulations/short_circuit_neuronworld/main.cpp:206:41: style: Variable 'w' is assigned a value that is never used. [unreadVariable]
        if ( (w<0.001) && (w>-0.001) ) w=0; // sonst Probleme im Dateinamen  (1.11022e-16)
                                        ^
Checking simulations/soxworld/hexapod.cpp ...
211/300 files checked 75% done
Checking simulations/soxworld/main.cpp ...
simulations/simple_barrel/main.cpp:133:6: style: C-style pointer casting [cstyleCast]
    ((OdeRobot*)myBarrel_1)->place (Pos( 1.3,0,0.1));
     ^
212/300 files checked 75% done
simulations/soxworld/hexapod.cpp:26:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/soxworld/hexapod.cpp:27:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/soxworld/hexapod.cpp:30:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/soxworld/hexapod.cpp:33:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
Checking simulations/soxworld/skeleton.cpp ...
simulations/soxworld/hexapod.cpp:36:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/soxworld/hexapod.cpp:37:0: information: Include file: <ode_robots/irsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/irsensor.h>
^
simulations/soxworld/hexapod.cpp:40:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/soxworld/hexapod.cpp:41:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/soxworld/hexapod.cpp:42:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
simulations/soxworld/hexapod.cpp:43:0: information: Include file: <ode_robots/constantmotor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/constantmotor.h>
^
simulations/soxworld/hexapod.cpp:45:0: information: Include file: <ode_robots/mathutils.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/mathutils.h>
^
simulations/soxworld/hexapod.h:30:0: information: Include file: <selforg/inspectable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/inspectable.h>
^
simulations/soxworld/hexapod.h:32:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
simulations/soxworld/hexapod.h:33:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
simulations/soxworld/hexapod.h:34:0: information: Include file: <ode_robots/contactsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/contactsensor.h>
^
simulations/soxworld/main.cpp:25:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/soxworld/main.cpp:26:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/soxworld/main.cpp:27:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/soxworld/main.cpp:28:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/soxworld/soml.h:24:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulations/soxworld/soml.h:25:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/soxworld/soml.h:26:0: information: Include file: <selforg/controllernet.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controllernet.h>
^
simulations/soxworld/soml.h:28:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/soxworld/soml.h:29:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/soxworld/soml.h:31:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/soxworld/main.cpp:34:0: information: Include file: <selforg/motorbabbler.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/motorbabbler.h>
^
simulations/soxworld/main.cpp:35:0: information: Include file: <selforg/derlininvert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derlininvert.h>
^
simulations/soxworld/main.cpp:36:0: information: Include file: <selforg/dercontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/dercontroller.h>
^
simulations/soxworld/main.cpp:37:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/soxworld/main.cpp:40:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/soxworld/main.cpp:41:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/soxworld/main.cpp:43:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/soxworld/main.cpp:46:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/soxworld/main.cpp:47:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/soxworld/main.cpp:48:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/soxworld/main.cpp:49:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/soxworld/main.cpp:50:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/soxworld/main.cpp:52:0: information: Include file: <ode_robots/sliderwheelie.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sliderwheelie.h>
^
simulations/soxworld/main.cpp:53:0: information: Include file: <ode_robots/plattfussschlange.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/plattfussschlange.h>
^
simulations/soxworld/main.cpp:54:0: information: Include file: <ode_robots/schlangeservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo.h>
^
simulations/soxworld/main.cpp:55:0: information: Include file: <ode_robots/schlangeservo2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo2.h>
^
simulations/soxworld/skeleton.h:27:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
simulations/soxworld/skeleton.h:28:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
simulations/soxworld/skeleton.cpp:25:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/soxworld/skeleton.cpp:26:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/soxworld/skeleton.cpp:29:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/soxworld/skeleton.cpp:32:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/soxworld/skeleton.cpp:33:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/soxworld/skeleton.cpp:34:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
simulations/soxworld/skeleton.cpp:35:0: information: Include file: <ode_robots/angularmotor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/angularmotor.h>
^
simulations/soxworld/skeleton.cpp:36:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
simulations/soxworld/skeleton.cpp:37:0: information: Include file: <ode_robots/irsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/irsensor.h>
^
simulations/rhoenrad/rhoenrad.cpp:49:13: warning: Member variable 'Rhoenrad::pelvisservo' is not initialized in the constructor. [uninitMemberVar]
  Rhoenrad::Rhoenrad(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
            ^
simulations/rhoenrad/rhoenrad.cpp:49:13: warning: Member variable 'Rhoenrad::hip_wheel' is not initialized in the constructor. [uninitMemberVar]
  Rhoenrad::Rhoenrad(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
            ^
simulations/rhoenrad/rhoenrad.cpp:49:13: warning: Member variable 'Rhoenrad::realpowerfactor' is not initialized in the constructor. [uninitMemberVar]
  Rhoenrad::Rhoenrad(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
            ^
simulations/rhoenrad/rhoenrad.cpp:1122:13: warning: Either the condition 'o' is redundant or there is possible null pointer dereference: o. [nullPointerRedundantCheck]
    else if(o->getBody())
            ^
simulations/rhoenrad/rhoenrad.cpp:1120:9: note: Assuming that condition 'o' is not redundant
    if (o && o->getGeom())
        ^
simulations/rhoenrad/rhoenrad.cpp:1122:13: note: Null pointer dereference
    else if(o->getBody())
            ^
simulations/rhoenrad/rhoenrad.cpp:1133:13: warning: Either the condition 'o' is redundant or there is possible null pointer dereference: o. [nullPointerRedundantCheck]
    else if(o->getBody())
            ^
simulations/rhoenrad/rhoenrad.cpp:1131:9: note: Assuming that condition 'o' is not redundant
    if (o && o->getGeom())
        ^
simulations/rhoenrad/rhoenrad.cpp:1133:13: note: Null pointer dereference
    else if(o->getBody())
            ^
simulations/rhoenrad/rhoenrad.cpp:1109:51: style: Same expression in both branches of ternary operator. [duplicateExpressionTernary]
        (*i)->setMinMax(fst? -conf.backJointLimit : -conf.backJointLimit,
                                                  ^
simulations/soxworld/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/rhoenrad/rhoenrad.cpp:368:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
simulations/rhoenrad/rhoenrad.cpp:371:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
213/300 files checked 76% done
simulations/soxworld/skeleton.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/soxworld/soml.cpp ...
simulations/soxworld/soml.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/soxworld/soml.cpp:24:7: warning: Member variable 'SoML::number_sensors' is not initialized in the constructor. [uninitMemberVar]
SoML::SoML(const SoMLConf& conf)
      ^
simulations/soxworld/soml.cpp:24:7: warning: Member variable 'SoML::number_motors' is not initialized in the constructor. [uninitMemberVar]
SoML::SoML(const SoMLConf& conf)
      ^
simulations/soxworld/soml.cpp:24:7: warning: Member variable 'SoML::numControllerLayer' is not initialized in the constructor. [uninitMemberVar]
SoML::SoML(const SoMLConf& conf)
      ^
simulations/soxworld/soml.cpp:24:7: warning: Member variable 'SoML::E' is not initialized in the constructor. [uninitMemberVar]
SoML::SoML(const SoMLConf& conf)
      ^
simulations/soxworld/soml.h:54:3: style: Class 'SoML' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SoML(const SoMLConf& conf = getDefaultConf());
  ^
simulations/soxworld/soml.cpp:204:19: style: Local variable 'y' shadows outer argument [shadowArgument]
    const Matrix& y     = cNet->getLayerOutput(l);
                  ^
simulations/soxworld/soml.cpp:168:49: note: Shadowed declaration
void SoML::learn(const Matrix& x, const Matrix& y){
                                                ^
simulations/soxworld/soml.cpp:204:19: note: Shadow variable
    const Matrix& y     = cNet->getLayerOutput(l);
                  ^
214/300 files checked 76% done
simulations/soxworld/hexapod.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/sphericalrobot/freeiteration/main.cpp ...
simulations/sphericalrobot/freeiteration/main.cpp:1:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/sphericalrobot/freeiteration/main.cpp:2:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
simulations/sphericalrobot/freeiteration/main.cpp:3:0: information: Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fstream>
^
simulations/sphericalrobot/freeiteration/main.cpp:4:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
simulations/sphericalrobot/freeiteration/main.cpp:6:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/sphericalrobot/freeiteration/main.cpp:7:0: information: Include file: <selforg/datafunc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/datafunc.h>
^
simulations/sphericalrobot/freeiteration/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/soxworld/hexapod.h:164:28: style: Boolean value assigned to floating point variable. [assignBoolToFloat]
      c.irSensors          = false;
                           ^
simulations/soxworld/skeleton.h:299:18: style: Virtual function 'destroy' is called from destructor '~Skeleton()' at line 135. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void destroy() override;
                 ^
simulations/soxworld/skeleton.h:135:26: note: Calling destroy
    virtual ~Skeleton(){ destroy(); };
                         ^
simulations/soxworld/skeleton.h:299:18: note: destroy is a virtual function
    virtual void destroy() override;
                 ^
simulations/soxworld/hexapod.h:228:18: style: Virtual function 'destroy' is called from destructor '~Hexapod()' at line 120. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void destroy() override;
                 ^
simulations/soxworld/hexapod.h:120:25: note: Calling destroy
    virtual ~Hexapod(){ destroy(); };
                        ^
simulations/soxworld/hexapod.h:228:18: note: destroy is a virtual function
    virtual void destroy() override;
                 ^
simulations/soxworld/main.cpp:261:11: warning: Opposite inner 'if' condition leads to a dead code block. [oppositeInnerCondition]
     if (i==0) {
          ^
simulations/soxworld/main.cpp:90:18: note: 'snakes' is assigned value '0' here.
    int snakes = 0;
                 ^
simulations/soxworld/main.cpp:246:18: note: outer condition: i<snakes
   for(int i=0; i<snakes; i++){
                 ^
simulations/soxworld/main.cpp:261:11: note: opposite inner condition: i==0
     if (i==0) {
          ^
simulations/soxworld/main.cpp:278:11: warning: Opposite inner 'if' condition leads to a dead code block. [oppositeInnerCondition]
     if (i==0) {
          ^
simulations/soxworld/main.cpp:90:18: note: 'snakes' is assigned value '0' here.
    int snakes = 0;
                 ^
simulations/soxworld/main.cpp:246:18: note: outer condition: i<snakes
   for(int i=0; i<snakes; i++){
                 ^
simulations/soxworld/main.cpp:278:11: note: opposite inner condition: i==0
     if (i==0) {
          ^
simulations/soxworld/main.cpp:378:11: warning: Opposite inner 'if' condition leads to a dead code block. [oppositeInnerCondition]
     if (i==0) {
          ^
simulations/soxworld/main.cpp:89:23: note: 'flatsnakes' is assigned value '0' here.
    int flatsnakes  = 0;
                      ^
simulations/soxworld/main.cpp:364:18: note: outer condition: i<flatsnakes
   for(int i=0; i<flatsnakes; i++){
                 ^
simulations/soxworld/main.cpp:378:11: note: opposite inner condition: i==0
     if (i==0) {
          ^
simulations/soxworld/main.cpp:394:11: warning: Opposite inner 'if' condition leads to a dead code block. [oppositeInnerCondition]
     if (i==0) {
          ^
simulations/soxworld/main.cpp:89:23: note: 'flatsnakes' is assigned value '0' here.
    int flatsnakes  = 0;
                      ^
simulations/soxworld/main.cpp:364:18: note: outer condition: i<flatsnakes
   for(int i=0; i<flatsnakes; i++){
                 ^
simulations/soxworld/main.cpp:394:11: note: opposite inner condition: i==0
     if (i==0) {
          ^
simulations/soxworld/main.cpp:775:15: style: The if condition is the same as the previous if condition [duplicateCondition]
          if(i==0) this->playground=playground;
              ^
simulations/soxworld/main.cpp:772:15: note: First condition
          if(i==0){ // set ground also to the soft substance
              ^
simulations/soxworld/main.cpp:775:15: note: Second condition
          if(i==0) this->playground=playground;
              ^
simulations/soxworld/hexapod.cpp:60:12: warning: Member variable 'Hexapod::t' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/soxworld/hexapod.cpp:60:12: warning: Member variable 'Hexapod::speed' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/soxworld/hexapod.cpp:60:12: warning: Member variable 'Hexapod::stabaliserTransform' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/soxworld/hexapod.cpp:60:12: warning: Member variable 'Hexapod::bigboxtransform' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/soxworld/hexapod.cpp:60:12: warning: Member variable 'Hexapod::headtrans' is not initialized in the constructor. [uninitMemberVar]
  Hexapod::Hexapod(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
           ^
simulations/soxworld/skeleton.h:193:24: style: Variable 'c.hip2JointLimit' is reassigned a value before the old one has been used. [redundantAssignment]
      c.hip2JointLimit = M_PI/30; // +- 6 degree
                       ^
simulations/soxworld/skeleton.h:186:23: note: c.hip2JointLimit is assigned
      c.hip2JointLimit= 1.4;
                      ^
simulations/soxworld/skeleton.h:193:24: note: c.hip2JointLimit is overwritten
      c.hip2JointLimit = M_PI/30; // +- 6 degree
                       ^
simulations/soxworld/main.cpp:461:16: style: Local variable 'robot' shadows outer variable [shadowVariable]
     OdeRobot* robot = new SliderWheelie(odeHandle, osgHandle,
               ^
simulations/soxworld/main.cpp:79:13: note: Shadowed declaration
  OdeRobot* robot;
            ^
simulations/soxworld/main.cpp:461:16: note: Shadow variable
     OdeRobot* robot = new SliderWheelie(odeHandle, osgHandle,
               ^
simulations/soxworld/main.cpp:463:13: style: Local variable 'height' shadows outer variable [shadowVariable]
     double height = 2;
            ^
simulations/soxworld/main.cpp:363:11: note: Shadowed declaration
   double height =.1;
          ^
simulations/soxworld/main.cpp:463:13: note: Shadow variable
     double height = 2;
            ^
simulations/soxworld/main.cpp:737:23: style: Local variable 'playground' shadows outer variable [shadowVariable]
          Playground* playground = new Playground(myHandle, osgHandle,
                      ^
simulations/soxworld/main.cpp:806:19: note: Shadowed declaration
  AbstractGround* playground;
                  ^
simulations/soxworld/main.cpp:737:23: note: Shadow variable
          Playground* playground = new Playground(myHandle, osgHandle,
                      ^
simulations/soxworld/main.cpp:767:23: style: Local variable 'playground' shadows outer variable [shadowVariable]
          Playground* playground = new Playground(myHandle, osgHandle,
                      ^
simulations/soxworld/main.cpp:806:19: note: Shadowed declaration
  AbstractGround* playground;
                  ^
simulations/soxworld/main.cpp:767:23: note: Shadow variable
          Playground* playground = new Playground(myHandle, osgHandle,
                      ^
simulations/soxworld/hexapod.cpp:144:18: style: The scope of the variable 'torques' can be reduced. [variableScope]
    const dReal *torques;
                 ^
simulations/soxworld/hexapod.cpp:145:18: style: The scope of the variable 'angularV' can be reduced. [variableScope]
    const dReal *angularV;
                 ^
simulations/soxworld/hexapod.cpp:235:22: style: Local variable 'position' shadows outer variable [shadowVariable]
        const dReal *position = dBodyGetPosition(legContactArray[i].bodyID);
                     ^
simulations/soxworld/hexapod.h:248:13: note: Shadowed declaration
    double *position;
            ^
simulations/soxworld/hexapod.cpp:235:22: note: Shadow variable
        const dReal *position = dBodyGetPosition(legContactArray[i].bodyID);
                     ^
simulations/soxworld/hexapod.cpp:474:14: style: Local variable 'servo' shadows outer variable [shadowVariable]
        auto servo = std::make_shared<HingeServo>(k, -1, 1, 1, 0.01,0); // parameters are set later
             ^
simulations/soxworld/hexapod.cpp:443:12: note: Shadowed declaration
      auto servo = std::make_shared<TwoAxisServoVel>(odeHandle, j,-1,1, 1, -1,1,1,0 );
           ^
simulations/soxworld/hexapod.cpp:474:14: note: Shadow variable
        auto servo = std::make_shared<HingeServo>(k, -1, 1, 1, 0.01,0); // parameters are set later
             ^
simulations/soxworld/hexapod.cpp:533:16: style: Local variable 'servo' shadows outer variable [shadowVariable]
          auto servo = std::make_shared<OneAxisServoVel>(odeHandle,k, -1, 1, 1, 0.01); // parameters are set later
               ^
simulations/soxworld/hexapod.cpp:443:12: note: Shadowed declaration
      auto servo = std::make_shared<TwoAxisServoVel>(odeHandle, j,-1,1, 1, -1,1,1,0 );
           ^
simulations/soxworld/hexapod.cpp:533:16: note: Shadow variable
          auto servo = std::make_shared<OneAxisServoVel>(odeHandle,k, -1, 1, 1, 0.01); // parameters are set later
               ^
simulations/soxworld/hexapod.cpp:218:16: style: Variable 'position_1' can be declared as pointer to const [constVariablePointer]
        dReal *position_1 = pos_record.front();
               ^
simulations/soxworld/hexapod.cpp:219:16: style: Variable 'position_2' can be declared as pointer to const [constVariablePointer]
        dReal *position_2 = pos_record.back();
               ^
simulations/sphericalrobot/freeiteration/main.cpp:32:11: style: Variable 'p' can be declared as pointer to const [constVariablePointer]
    char* p;
          ^
simulations/sphericalrobot/freeiteration/main.cpp:65:9: style: Variable 'filename' can be declared as pointer to const [constVariablePointer]
  char* filename = "data";
        ^
simulations/sphericalrobot/freeiteration/main.cpp:68:12: style: Unused variable: dumpfile [unusedVariable]
  ofstream dumpfile;
           ^
215/300 files checked 76% done
216/300 files checked 77% done
Checking simulations/sphericalrobot/invertnchannelcontroller_nobias.cpp ...
Checking simulations/sphericalrobot/main.cpp ...
simulations/sphericalrobot/invertnchannelcontroller_nobias.h:66:0: information: Include file: <selforg/invertcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertcontroller.h>
^
217/300 files checked 78% done
simulations/sphericalrobot/invertnchannelcontroller_nobias.h:67:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/sphericalrobot/invertnchannelcontroller_nobias.h:69:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/sphericalrobot/invertnchannelcontroller_nobias.h:70:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
simulations/sphericalrobot/invertnchannelcontroller_nobias.h:72:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/sphericalrobot/main.cpp:137:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/sphericalrobot/main.cpp:139:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/sphericalrobot/main.cpp:140:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/sphericalrobot/main.cpp:141:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/sphericalrobot/main.cpp:142:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
Checking simulations/swing/main.cpp ...
simulations/sphericalrobot/main.cpp:143:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/sphericalrobot/main.cpp:145:0: information: Include file: <selforg/semox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/semox.h>
^
simulations/sphericalrobot/main.cpp:146:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/sphericalrobot/main.cpp:147:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/sphericalrobot/main.cpp:148:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/sphericalrobot/main.cpp:150:0: information: Include file: <selforg/ffnncontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/ffnncontroller.h>
^
simulations/sphericalrobot/main.cpp:151:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/sphericalrobot/main.cpp:152:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/sphericalrobot/main.cpp:153:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/sphericalrobot/main.cpp:154:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/sphericalrobot/main.cpp:157:0: information: Include file: <ode_robots/forcedsphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/forcedsphere.h>
^
simulations/sphericalrobot/main.cpp:158:0: information: Include file: <ode_robots/sphererobot3masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sphererobot3masses.h>
^
simulations/sphericalrobot/main.cpp:159:0: information: Include file: <ode_robots/barrel2masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/barrel2masses.h>
^
simulations/sphericalrobot/main.cpp:160:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/sphericalrobot/main.cpp:161:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/swing/main.cpp:26:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/swing/main.cpp:27:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/swing/main.cpp:28:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/swing/main.cpp:29:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/swing/main.cpp:32:0: information: Include file: <selforg/sos.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sos.h>
^
simulations/swing/main.cpp:33:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/swing/main.cpp:35:0: information: Include file: <selforg/sox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sox.h>
^
simulations/swing/main.cpp:36:0: information: Include file: <selforg/soml.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/soml.h>
^
simulations/swing/main.cpp:38:0: information: Include file: <selforg/motorbabbler.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/motorbabbler.h>
^
simulations/swing/main.cpp:43:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/swing/main.cpp:44:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/swing/main.cpp:46:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/swing/main.cpp:49:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/swing/main.cpp:50:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/swing/main.cpp:51:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/swing/main.cpp:52:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/swing/main.cpp:53:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/swing/main.cpp:55:0: information: Include file: <ode_robots/sliderwheelie.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sliderwheelie.h>
^
simulations/swing/main.cpp:56:0: information: Include file: <ode_robots/plattfussschlange.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/plattfussschlange.h>
^
simulations/swing/main.cpp:57:0: information: Include file: <ode_robots/schlangeservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo.h>
^
simulations/swing/main.cpp:58:0: information: Include file: <ode_robots/schlangeservo2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo2.h>
^
simulations/swing/swing.h:28:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
simulations/swing/swing.h:29:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
simulations/swing/swing.h:30:0: information: Include file: <ode_robots/sensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sensor.h>
^
simulations/sphericalrobot/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
218/300 files checked 78% done
simulations/swing/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/swing/swing.cpp ...
simulations/swing/swing.cpp:23:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/swing/swing.cpp:24:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/swing/swing.cpp:27:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/swing/swing.cpp:30:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/swing/swing.cpp:31:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/swing/swing.cpp:32:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
simulations/swing/swing.cpp:33:0: information: Include file: <ode_robots/angularmotor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/angularmotor.h>
^
simulations/swing/swing.cpp:34:0: information: Include file: <ode_robots/raysensorbank.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensorbank.h>
^
simulations/swing/swing.cpp:35:0: information: Include file: <ode_robots/irsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/irsensor.h>
^
simulations/swing/swing.cpp:37:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/swing/swing.cpp:38:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/sphericalrobot/main.cpp:231:8: style: Condition 'normalplayground' is always false [knownConditionTrueFalse]
    if(normalplayground){
       ^
simulations/sphericalrobot/main.cpp:221:27: note: Assignment 'normalplayground=false', assigned value is 0
    bool normalplayground=false;
                          ^
simulations/sphericalrobot/main.cpp:231:8: note: Condition 'normalplayground' is always false
    if(normalplayground){
       ^
simulations/sphericalrobot/main.cpp:243:8: style: Condition 'squarecorridor' is always false [knownConditionTrueFalse]
    if(squarecorridor){
       ^
simulations/sphericalrobot/main.cpp:220:25: note: Assignment 'squarecorridor=false', assigned value is 0
    bool squarecorridor=false;
                        ^
simulations/sphericalrobot/main.cpp:243:8: note: Condition 'squarecorridor' is always false
    if(squarecorridor){
       ^
simulations/sphericalrobot/main.cpp:259:8: style: Condition 'labyrint' is always false [knownConditionTrueFalse]
    if(labyrint){
       ^
simulations/sphericalrobot/main.cpp:219:19: note: Assignment 'labyrint=false', assigned value is 0
    bool labyrint=false;
                  ^
simulations/sphericalrobot/main.cpp:259:8: note: Condition 'labyrint' is always false
    if(labyrint){
       ^
simulations/sphericalrobot/main.cpp:288:19: style: Condition 'i<num_barrels' is always false [knownConditionTrueFalse]
    for(int i=0; i< num_barrels; i++){
                  ^
simulations/sphericalrobot/main.cpp:288:15: note: Assignment 'i=0', assigned value is 0
    for(int i=0; i< num_barrels; i++){
              ^
simulations/sphericalrobot/main.cpp:213:21: note: Assignment 'num_barrels=0', assigned value is 0
    int num_barrels=0;
                    ^
simulations/sphericalrobot/main.cpp:288:19: note: Condition 'i<num_barrels' is always false
    for(int i=0; i< num_barrels; i++){
                  ^
219/300 files checked 79% done
Checking simulations/teaching/main.cpp ...
simulations/swing/swing.h:319:18: style: Virtual function 'destroy' is called from destructor '~Swing()' at line 145. Dynamic binding is not used. [virtualCallInConstructor]
    virtual void destroy() override;
                 ^
simulations/swing/swing.h:145:23: note: Calling destroy
    virtual ~Swing(){ destroy(); };
                      ^
simulations/swing/swing.h:319:18: note: destroy is a virtual function
    virtual void destroy() override;
                 ^
simulations/swing/main.cpp:439:15: style: The if condition is the same as the previous if condition [duplicateCondition]
          if(i==0) this->playground=playground;
              ^
simulations/swing/main.cpp:436:15: note: First condition
          if(i==0){ // set ground also to the soft substance
              ^
simulations/swing/main.cpp:439:15: note: Second condition
          if(i==0) this->playground=playground;
              ^
simulations/swing/main.cpp:156:10: style: Condition 'fixedInAir' is always false [knownConditionTrueFalse]
     if( fixedInAir){
         ^
simulations/swing/main.cpp:87:23: note: Assignment 'fixedInAir=false', assigned value is 0
    bool fixedInAir = false;
                      ^
simulations/swing/main.cpp:156:10: note: Condition 'fixedInAir' is always false
     if( fixedInAir){
         ^
simulations/teaching/main.cpp:90:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/teaching/main.cpp:92:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/teaching/main.cpp:93:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/teaching/main.cpp:94:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/teaching/main.cpp:96:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/teaching/main.cpp:97:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/teaching/main.cpp:98:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/teaching/main.cpp:100:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/swing/swing.h:213:24: style: Variable 'c.hip2JointLimit' is reassigned a value before the old one has been used. [redundantAssignment]
      c.hip2JointLimit = M_PI/30; // +- 6 degree
                       ^
simulations/swing/swing.h:206:23: note: c.hip2JointLimit is assigned
      c.hip2JointLimit= 1.4;
                      ^
simulations/swing/swing.h:213:24: note: c.hip2JointLimit is overwritten
      c.hip2JointLimit = M_PI/30; // +- 6 degree
                       ^
simulations/swing/swing.h:233:19: style: Variable 'c.trunkColor' is reassigned a value before the old one has been used. [redundantAssignment]
      c.trunkColor=Color(177.0/255.0, 51.0/255.0, 29.0/255.0, 1.0f);
                  ^
simulations/swing/swing.h:232:19: note: c.trunkColor is assigned
      c.trunkColor=Color(.1,.3,.8, 1.0f);
                  ^
simulations/swing/swing.h:233:19: note: c.trunkColor is overwritten
      c.trunkColor=Color(177.0/255.0, 51.0/255.0, 29.0/255.0, 1.0f);
                  ^
simulations/swing/main.cpp:401:23: style: Local variable 'playground' shadows outer variable [shadowVariable]
          Playground* playground = new Playground(myHandle, osgHandle,
                      ^
simulations/swing/main.cpp:470:19: note: Shadowed declaration
  AbstractGround* playground;
                  ^
simulations/swing/main.cpp:401:23: note: Shadow variable
          Playground* playground = new Playground(myHandle, osgHandle,
                      ^
simulations/swing/main.cpp:431:23: style: Local variable 'playground' shadows outer variable [shadowVariable]
          Playground* playground = new Playground(myHandle, osgHandle,
                      ^
simulations/swing/main.cpp:470:19: note: Shadowed declaration
  AbstractGround* playground;
                  ^
simulations/swing/main.cpp:431:23: note: Shadow variable
          Playground* playground = new Playground(myHandle, osgHandle,
                      ^
simulations/teaching/main.cpp:131:19: style: Condition 'i<0' is always false [knownConditionTrueFalse]
    for(int i=0; i<0; i++){ //20
                  ^
simulations/teaching/main.cpp:131:15: note: Assignment 'i=0', assigned value is 0
    for(int i=0; i<0; i++){ //20
              ^
simulations/teaching/main.cpp:131:19: note: Condition 'i<0' is always false
    for(int i=0; i<0; i++){ //20
                  ^
simulations/teaching/main.cpp:139:19: style: Variable 'c.sphereWheels' is reassigned a value before the old one has been used. [redundantAssignment]
    c.sphereWheels=false;
                  ^
simulations/teaching/main.cpp:138:19: note: c.sphereWheels is assigned
    c.sphereWheels=false;
                  ^
simulations/teaching/main.cpp:139:19: note: c.sphereWheels is overwritten
    c.sphereWheels=false;
                  ^
220/300 files checked 79% done
221/300 files checked 79% done
Checking simulations/template_XMLImportSim/XMLBoundingShape.cpp ...
simulations/template_XMLImportSim/XMLBoundingShape.h:45:0: information: Include file: <ode_robots/boundingshape.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/boundingshape.h>
^
simulations/template_XMLImportSim/XMLParserEngine.h:43:0: information: Include file: <ode_robots/globaldata.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/globaldata.h>
^
simulations/template_XMLImportSim/XMLParserEngine.h:44:0: information: Include file: <ode_robots/odehandle.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odehandle.h>
^
simulations/template_XMLImportSim/XMLParserEngine.h:45:0: information: Include file: <ode_robots/osghandle.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/osghandle.h>
^
Checking simulations/template_XMLImportSim/XMLErrorHelper.cpp ...
simulations/template_XMLImportSim/XercescForwardDecl.h:34:0: information: Include file: <xercesc/util/XercesDefs.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xercesc/util/XercesDefs.hpp>
^
simulations/template_XMLImportSim/XMLParserEngine.h:48:0: information: Include file: <xercesc/dom/DOM.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xercesc/dom/DOM.hpp>
^
simulations/template_XMLImportSim/XMLParserEngine.h:49:0: information: Include file: <xercesc/parsers/XercesDOMParser.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xercesc/parsers/XercesDOMParser.hpp>
^
simulations/template_XMLImportSim/XMLPrimitiveFactory.h:47:0: information: Include file: <ode_robots/abstractobstacle.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/abstractobstacle.h>
^
simulations/template_XMLImportSim/XMLHelper.h:48:0: information: Include file: <osg/Vec3> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Vec3>
^
simulations/template_XMLImportSim/XMLHelper.h:49:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
simulations/template_XMLImportSim/XMLHelper.h:50:0: information: Include file: <ode_robots/color.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/color.h>
^
simulations/template_XMLImportSim/XMLHelper.h:52:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
simulations/template_XMLImportSim/XMLBoundingShape.cpp:53:0: information: Include file: <xercesc/dom/DOMNode.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xercesc/dom/DOMNode.hpp>
^
simulations/template_XMLImportSim/XMLBoundingShape.cpp:55:0: information: Include file: <ode_robots/mathutils.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/mathutils.h>
^
simulations/template_XMLImportSim/XMLErrorHelper.h:41:0: information: Include file: <xercesc/sax/ErrorHandler.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xercesc/sax/ErrorHandler.hpp>
^
simulations/template_XMLImportSim/XMLErrorHelper.h:44:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
simulations/template_XMLImportSim/XMLErrorHelper.cpp:36:0: information: Include file: <xercesc/util/XMLString.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xercesc/util/XMLString.hpp>
^
simulations/template_XMLImportSim/XMLErrorHelper.cpp:38:0: information: Include file: <xercesc/sax/SAXParseException.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xercesc/sax/SAXParseException.hpp>
^
simulations/template_XMLImportSim/XMLErrorHelper.cpp:39:0: information: Include file: <xercesc/dom/DOMException.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xercesc/dom/DOMException.hpp>
^
simulations/template_XMLImportSim/XMLErrorHelper.cpp:41:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
simulations/template_XMLImportSim/XMLErrorHelper.cpp:42:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
simulations/template_XMLImportSim/XMLErrorHelper.cpp:43:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
simulations/swing/swing.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/template_XMLImportSim/XMLHelper.h:64:5: style: Class 'XString' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    XString(const char* const toTranscode);
    ^
simulations/template_XMLImportSim/XMLHelper.h:66:5: style: Class 'XString' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    XString(const std::string toTranscode);
    ^
simulations/template_XMLImportSim/XMLHelper.h:68:5: style: Class 'XString' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    XString(const XMLCh* toTranscode);
    ^
simulations/template_XMLImportSim/XMLHelper.h:66:31: performance: Function parameter 'toTranscode' should be passed by const reference. [passedByValue]
    XString(const std::string toTranscode);
                              ^
simulations/template_XMLImportSim/XMLHelper.h:86:88: performance: Function parameter 'childNodeName' should be passed by const reference. [passedByValue]
    static const bool matchesName(const XERCESC::DOMNode* childNode, const std::string childNodeName);
                                                                                       ^
simulations/template_XMLImportSim/XMLHelper.h:95:93: performance: Function parameter 'defaultValue' should be passed by const reference. [passedByValue]
    static std::string getNodeValueAsString(const XERCESC::DOMNode* node, const std::string defaultValue = "");
                                                                                            ^
simulations/template_XMLImportSim/XMLHelper.h:106:98: performance: Function parameter 'childNodeName' should be passed by const reference. [passedByValue]
    static std::string getChildNodeValueAsString(const XERCESC::DOMNode* node, const std::string childNodeName, const std::string childValue, const std::string defaultValue = "");
                                                                                                 ^
simulations/template_XMLImportSim/XMLHelper.h:106:131: performance: Function parameter 'childValue' should be passed by const reference. [passedByValue]
    static std::string getChildNodeValueAsString(const XERCESC::DOMNode* node, const std::string childNodeName, const std::string childValue, const std::string defaultValue = "");
                                                                                                                                  ^
simulations/template_XMLImportSim/XMLHelper.h:106:161: performance: Function parameter 'defaultValue' should be passed by const reference. [passedByValue]
    static std::string getChildNodeValueAsString(const XERCESC::DOMNode* node, const std::string childNodeName, const std::string childValue, const std::string defaultValue = "");
                                                                                                                                                                ^
simulations/template_XMLImportSim/XMLHelper.h:107:91: performance: Function parameter 'value' should be passed by const reference. [passedByValue]
    static std::string getNodeAttAsString(const XERCESC::DOMNode* node, const std::string value, const std::string defaultValue = "");
                                                                                          ^
simulations/template_XMLImportSim/XMLHelper.h:107:116: performance: Function parameter 'defaultValue' should be passed by const reference. [passedByValue]
    static std::string getNodeAttAsString(const XERCESC::DOMNode* node, const std::string value, const std::string defaultValue = "");
                                                                                                                   ^
simulations/template_XMLImportSim/XMLHelper.h:117:79: performance: Function parameter 'value' should be passed by const reference. [passedByValue]
    static double getNodeAtt(const XERCESC::DOMNode* node,  const std::string value, const double defaultValue = 0.0);
                                                                              ^
simulations/template_XMLImportSim/XMLHelper.h:126:85: performance: Function parameter 'childNodeName' should be passed by const reference. [passedByValue]
    static double getChildNodeValue(const XERCESC::DOMNode* node, const std::string childNodeName, const std::string childValue, const double defaultValue = 0.0);
                                                                                    ^
simulations/template_XMLImportSim/XMLHelper.h:126:118: performance: Function parameter 'childValue' should be passed by const reference. [passedByValue]
    static double getChildNodeValue(const XERCESC::DOMNode* node, const std::string childNodeName, const std::string childValue, const double defaultValue = 0.0);
                                                                                                                     ^
simulations/template_XMLImportSim/XMLHelper.h:134:97: performance: Function parameter 'childNodeName' should be passed by const reference. [passedByValue]
    static const XERCESC::DOMNode* getChildNode(const XERCESC::DOMNode* node, const std::string childNodeName);
                                                                                                ^
simulations/template_XMLImportSim/XMLErrorHelper.cpp:81:46: performance: Function parameter 'message' should be passed by const reference. [passedByValue]
void XMLErrorHelper::printError(const string message) {
                                             ^
222/300 files checked 79% done
Checking simulations/template_XMLImportSim/XMLHelper.cpp ...
simulations/template_XMLImportSim/XMLObject.h:15:9: style: Class 'XMLObject' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        XMLObject(XMLParserEngine& xmlEngine) : xmlEngine(xmlEngine) {}
        ^
simulations/template_XMLImportSim/XMLBoundingShape.cpp:62:85: style: Parameter 'engine' can be declared as reference to const [constParameterReference]
XMLBoundingShape::XMLBoundingShape(const DOMNode* boundingBoxNode, XMLParserEngine& engine, lpzrobots::Mesh* parent)
                                                                                    ^
223/300 files checked 80% done
Checking simulations/template_XMLImportSim/XMLObject.cpp ...
simulations/template_XMLImportSim/XMLHelper.cpp:46:0: information: Include file: <xercesc/util/XMLString.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xercesc/util/XMLString.hpp>
^
simulations/template_XMLImportSim/XMLHelper.cpp:47:0: information: Include file: <xercesc/dom/DOMNode.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xercesc/dom/DOMNode.hpp>
^
simulations/template_XMLImportSim/XMLHelper.cpp:48:0: information: Include file: <xercesc/dom/DOMException.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xercesc/dom/DOMException.hpp>
^
simulations/template_XMLImportSim/XMLHelper.cpp:49:0: information: Include file: <xercesc/dom/DOMNamedNodeMap.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xercesc/dom/DOMNamedNodeMap.hpp>
^
simulations/template_XMLImportSim/XMLHelper.cpp:54:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
simulations/template_XMLImportSim/XMLHelper.cpp:55:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
simulations/template_XMLImportSim/XMLHelper.cpp:57:0: information: Include file: <ode_robots/mathutils.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/mathutils.h>
^
224/300 files checked 80% done
Checking simulations/template_XMLImportSim/XMLParserEngine.cpp ...
simulations/template_XMLImportSim/XMLHelper.cpp:148:7: style: Exception should be caught by reference. [catchExceptionByValue]
    } catch (DOMException e) {
      ^
simulations/template_XMLImportSim/XMLHelper.cpp:195:7: style: Exception should be caught by reference. [catchExceptionByValue]
    } catch (DOMException e) {
      ^
simulations/template_XMLImportSim/XMLErrorHelper.h:67:46: performance: Function parameter 'message' should be passed by const reference. [passedByValue]
    static void printError(const std::string message);
                                             ^
simulations/template_XMLImportSim/XMLHelper.cpp:69:36: performance: Function parameter 'toTranscode' should be passed by const reference. [passedByValue]
XString::XString(const std::string toTranscode) {
                                   ^
simulations/template_XMLImportSim/XMLHelper.cpp:137:74: performance: Function parameter 'childNodeName' should be passed by const reference. [passedByValue]
const bool XMLHelper::matchesName(const DOMNode* childNode, const string childNodeName) {
                                                                         ^
simulations/template_XMLImportSim/XMLHelper.cpp:155:64: performance: Function parameter 'value' should be passed by const reference. [passedByValue]
double XMLHelper::getNodeAtt(const DOMNode* node, const string value, const double defaultValue /* = 0.0 */)
                                                               ^
simulations/template_XMLImportSim/XMLHelper.cpp:166:72: performance: Function parameter 'value' should be passed by const reference. [passedByValue]
string XMLHelper::getNodeAttAsString(const DOMNode* node, const string value, const string defaultValue /* = "" */)
                                                                       ^
simulations/template_XMLImportSim/XMLHelper.cpp:166:92: performance: Function parameter 'defaultValue' should be passed by const reference. [passedByValue]
string XMLHelper::getNodeAttAsString(const DOMNode* node, const string value, const string defaultValue /* = "" */)
                                                                                           ^
simulations/template_XMLImportSim/XMLHelper.cpp:178:71: performance: Function parameter 'childNodeName' should be passed by const reference. [passedByValue]
double XMLHelper::getChildNodeValue(const DOMNode* node, const string childNodeName, const string childValue, const double defaultValue /* = 0.0 */)
                                                                      ^
simulations/template_XMLImportSim/XMLHelper.cpp:178:99: performance: Function parameter 'childValue' should be passed by const reference. [passedByValue]
double XMLHelper::getChildNodeValue(const DOMNode* node, const string childNodeName, const string childValue, const double defaultValue /* = 0.0 */)
                                                                                                  ^
simulations/template_XMLImportSim/XMLHelper.cpp:190:74: performance: Function parameter 'defaultValue' should be passed by const reference. [passedByValue]
string XMLHelper::getNodeValueAsString(const DOMNode* node, const string defaultValue /* = "" */)
                                                                         ^
simulations/template_XMLImportSim/XMLHelper.cpp:202:79: performance: Function parameter 'childNodeName' should be passed by const reference. [passedByValue]
string XMLHelper::getChildNodeValueAsString(const DOMNode* node, const string childNodeName, const string childValue, const string defaultValue /* = "" */)
                                                                              ^
simulations/template_XMLImportSim/XMLHelper.cpp:202:107: performance: Function parameter 'childValue' should be passed by const reference. [passedByValue]
string XMLHelper::getChildNodeValueAsString(const DOMNode* node, const string childNodeName, const string childValue, const string defaultValue /* = "" */)
                                                                                                          ^
simulations/template_XMLImportSim/XMLHelper.cpp:202:132: performance: Function parameter 'defaultValue' should be passed by const reference. [passedByValue]
string XMLHelper::getChildNodeValueAsString(const DOMNode* node, const string childNodeName, const string childValue, const string defaultValue /* = "" */)
                                                                                                                                   ^
simulations/template_XMLImportSim/XMLHelper.cpp:216:74: performance: Function parameter 'childNodeName' should be passed by const reference. [passedByValue]
const DOMNode* XMLHelper::getChildNode(const DOMNode* node, const string childNodeName) {
                                                                         ^
225/300 files checked 80% done
simulations/template_XMLImportSim/XMLParserEngine.cpp:54:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
simulations/template_XMLImportSim/XMLParserEngine.cpp:56:0: information: Include file: <xercesc/util/PlatformUtils.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xercesc/util/PlatformUtils.hpp>
^
Checking simulations/template_XMLImportSim/XMLPassiveObject.cpp ...
simulations/template_XMLImportSim/XMLParserEngine.cpp:57:0: information: Include file: <xercesc/util/XMLString.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xercesc/util/XMLString.hpp>
^
simulations/template_XMLImportSim/XMLParserEngine.cpp:58:0: information: Include file: <xercesc/dom/DOM.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xercesc/dom/DOM.hpp>
^
simulations/template_XMLImportSim/XMLParserEngine.cpp:59:0: information: Include file: <xercesc/util/OutOfMemoryException.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xercesc/util/OutOfMemoryException.hpp>
^
simulations/template_XMLImportSim/XMLPassiveObject.h:11:0: information: Include file: <XercescForwardDecl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <XercescForwardDecl.h>
^
simulations/template_XMLImportSim/XMLPassiveObject.h:12:0: information: Include file: <ode_robots/abstractobstacle.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/abstractobstacle.h>
^
simulations/template_XMLImportSim/XMLSimulation.h:11:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/template_XMLImportSim/XMLRobot.h:11:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
simulations/template_XMLImportSim/XMLParserEngine.cpp:68:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/template_XMLImportSim/XMLParserEngine.cpp:69:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/template_XMLImportSim/XMLParserEngine.cpp:71:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/template_XMLImportSim/XMLParserEngine.cpp:72:0: information: Include file: <osg/Light> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Light>
^
simulations/template_XMLImportSim/XMLParserEngine.cpp:73:0: information: Include file: <osg/LightSource> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/LightSource>
^
simulations/template_XMLImportSim/XMLParserEngine.cpp:75:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/template_XMLImportSim/XMLParserEngine.cpp:76:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/template_XMLImportSim/XMLPassiveObject.cpp:9:0: information: Include file: <xercesc/dom/DOMNode.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xercesc/dom/DOMNode.hpp>
^
simulations/template_XMLImportSim/XMLPassiveObject.cpp:10:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/template_XMLImportSim/XMLPassiveObject.cpp:11:0: information: Include file: <ode_robots/osgprimitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/osgprimitive.h>
^
226/300 files checked 80% done
simulations/template_XMLImportSim/XMLParserEngine.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/template_XMLImportSim/XMLParserEngine.cpp:83:18: warning: Member variable 'XMLParserEngine::validateXML' is not initialized in the constructor. [uninitMemberVar]
XMLParserEngine::XMLParserEngine(GlobalData& globalData, const OdeHandle& odeHandle, const OsgHandle& osgHandle,
                 ^
Checking simulations/template_XMLImportSim/XMLPrimitiveFactory.cpp ...
simulations/template_XMLImportSim/XMLParserEngine.cpp:97:3: warning: Class 'XMLParserEngine' does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s). [noCopyConstructor]
  parser = new XercesDOMParser;
  ^
simulations/template_XMLImportSim/XMLParserEngine.cpp:97:3: warning: Class 'XMLParserEngine' does not have a operator= which is recommended since it has dynamic memory/resource allocation(s). [noOperatorEq]
  parser = new XercesDOMParser;
  ^
simulations/template_XMLImportSim/XMLParserEngine.cpp:91:5: style: Exception should be caught by reference. [catchExceptionByValue]
  } catch (XMLPlatformUtilsException toCatch) {
    ^
simulations/template_XMLImportSim/XMLParserEngine.cpp:114:42: performance: Function parameter 'XMLFile' should be passed by const reference. [passedByValue]
bool XMLParserEngine::loadXMLFile(string XMLFile) {
                                         ^
simulations/template_XMLImportSim/XMLParserEngine.cpp:297:62: style: Parameter 'node' can be declared as pointer to const [constParameterPointer]
void XMLParserEngine::parseGlobalVariables(XERCESC::DOMNode* node) {
                                                             ^
227/300 files checked 80% done
simulations/template_XMLImportSim/XMLPrimitiveFactory.cpp:62:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/template_XMLImportSim/XMLPrimitiveFactory.cpp:63:0: information: Include file: <ode_robots/heightfieldprimitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/heightfieldprimitive.h>
^
Checking simulations/template_XMLImportSim/XMLRobot.cpp ...
simulations/template_XMLImportSim/XMLPrimitiveFactory.cpp:64:0: information: Include file: <ode_robots/globaldata.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/globaldata.h>
^
simulations/template_XMLImportSim/XMLPrimitiveFactory.cpp:65:0: information: Include file: <ode_robots/odehandle.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odehandle.h>
^
simulations/template_XMLImportSim/XMLPrimitiveFactory.cpp:66:0: information: Include file: <ode_robots/osghandle.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/osghandle.h>
^
simulations/template_XMLImportSim/XMLPrimitiveFactory.cpp:67:0: information: Include file: <ode_robots/passivemesh.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivemesh.h>
^
simulations/template_XMLImportSim/XMLPrimitiveFactory.cpp:68:0: information: Include file: <ode_robots/osgprimitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/osgprimitive.h>
^
simulations/template_XMLImportSim/XMLRobot.cpp:10:0: information: Include file: <xercesc/dom/DOMNode.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <xercesc/dom/DOMNode.hpp>
^
simulations/template_XMLImportSim/XMLRobot.cpp:51:3: error: Found an exit path from function with non-void return type that has missing return statement [missingReturn]
  }
  ^
228/300 files checked 80% done
simulations/template_XMLImportSim/XMLPrimitiveFactory.cpp:169:3: error: Found an exit path from function with non-void return type that has missing return statement [missingReturn]
  cout << "Dummy Primitive found!" << endl;
  ^
simulations/template_XMLImportSim/XMLPrimitiveFactory.cpp:279:3: error: Found an exit path from function with non-void return type that has missing return statement [missingReturn]
  cout << "Plane found!" << endl;
  ^
Checking simulations/template_XMLImportSim/XMLSimulation.cpp ...
simulations/template_XMLImportSim/XMLPrimitiveFactory.cpp:289:3: error: Found an exit path from function with non-void return type that has missing return statement [missingReturn]
  cout << "Ray found!" << endl;
  ^
simulations/template_XMLImportSim/XMLPrimitiveFactory.cpp:320:3: error: Found an exit path from function with non-void return type that has missing return statement [missingReturn]
  cout << "Transform found!" << endl;
  ^
simulations/template_XMLImportSim/XMLPrimitiveFactory.cpp:332:3: error: Found an exit path from function with non-void return type that has missing return statement [missingReturn]
  cout << "Heightfield found!" << endl;
  ^
simulations/template_XMLImportSim/XMLPrimitiveFactory.cpp:343:56: style: Parameter 'node' can be declared as pointer to const [constParameterPointer]
void XMLPrimitiveFactory::setTextureIfPresent(DOMNode* node, Primitive* primitive) {
                                                       ^
simulations/template_XMLImportSim/XMLPrimitiveFactory.cpp:384:53: style: Parameter 'node' can be declared as pointer to const [constParameterPointer]
char XMLPrimitiveFactory::getPrimitiveMode(DOMNode* node) {
                                                    ^
Checking simulations/template_XMLImportSim/main.cpp ...
229/300 files checked 80% done
230/300 files checked 81% done
simulations/template_XMLImportSim/main.cpp:146:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/template_XMLImportSim/main.cpp:149:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/template_XMLImportSim/main.cpp:152:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
Checking simulations/template_XMLImportSim/main_old.cpp ...
simulations/template_XMLImportSim/main.cpp:158:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/template_XMLImportSim/main.cpp:161:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/template_XMLImportSim/main.cpp:164:0: information: Include file: <ode_robots/truckmesh.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/truckmesh.h>
^
simulations/template_XMLImportSim/main.cpp:165:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/template_XMLImportSim/main.cpp:169:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/template_XMLImportSim/main.cpp:171:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/template_XMLImportSim/main.cpp:173:0: information: Include file: <ode_robots/passivemesh.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivemesh.h>
^
simulations/template_XMLImportSim/main.cpp:177:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/template_XMLImportSim/main_old.cpp:132:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/template_XMLImportSim/main_old.cpp:135:0: information: Include file: <ode/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode/ode.h>
^
simulations/template_XMLImportSim/main_old.cpp:138:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/template_XMLImportSim/main_old.cpp:141:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/template_XMLImportSim/main_old.cpp:144:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/template_XMLImportSim/main_old.cpp:147:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/template_XMLImportSim/main_old.cpp:150:0: information: Include file: <ode_robots/truckmesh.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/truckmesh.h>
^
simulations/template_XMLImportSim/main_old.cpp:154:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/template_XMLImportSim/main_old.cpp:156:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/template_XMLImportSim/main_old.cpp:158:0: information: Include file: <ode_robots/passivemesh.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivemesh.h>
^
simulations/template_XMLImportSim/main_old.cpp:162:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
231/300 files checked 81% done
Checking simulations/template_amosii/main.cpp ...
simulations/template_XMLImportSim/main_old.cpp:222:21: style: Local variable 'myMesh' shadows outer variable [shadowVariable]
       PassiveMesh* myMesh = new PassiveMesh(odeHandle,osgHandle,
                    ^
simulations/template_XMLImportSim/main_old.cpp:205:18: note: Shadowed declaration
    PassiveMesh* myMesh = new PassiveMesh(odeHandle,osgHandle,
                 ^
simulations/template_XMLImportSim/main_old.cpp:222:21: note: Shadow variable
       PassiveMesh* myMesh = new PassiveMesh(odeHandle,osgHandle,
                    ^
simulations/template_XMLImportSim/main_old.cpp:275:22: style: Variable 'xmlEngine' can be declared as pointer to const [constVariablePointer]
    XMLParserEngine* xmlEngine = new XMLParserEngine(global,odeHandle,osgHandle,this);
                     ^
simulations/template_XMLImportSim/main_old.cpp:275:32: style: Variable 'xmlEngine' is assigned a value that is never used. [unreadVariable]
    XMLParserEngine* xmlEngine = new XMLParserEngine(global,odeHandle,osgHandle,this);
                               ^
232/300 files checked 81% done
simulations/template_amosii/main.cpp:27:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/template_amosii/main.cpp:29:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/template_amosii/main.cpp:31:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/template_amosii/main.cpp:33:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
Checking simulations/template_amosii/tripodgait18dof.cpp ...
simulations/template_amosii/main.cpp:35:0: information: Include file: <ode_robots/amosII.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/amosII.h>
^
simulations/template_amosii/tripodgait18dof.h:26:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulations/template_amosii/tripodgait18dof.h:27:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/template_amosii/tripodgait18dof.h:28:0: information: Include file: <selforg/configurable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/configurable.h>
^
simulations/template_amosii/tripodgait18dof.h:30:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/template_amosii/tripodgait18dof.h:31:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/template_amosii/tripodgait18dof.h:32:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
simulations/template_amosii/tripodgait18dof.h:33:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
simulations/template_amosii/tripodgait18dof.h:35:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/template_amosii/main.cpp:39:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/template_amosii/tripodgait18dof.cpp:23:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/template_amosii/tripodgait18dof.cpp:24:0: information: Include file: <ode_robots/amosiisensormotordefinition.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/amosiisensormotordefinition.h>
^
simulations/template_amosii/main.cpp:45:3: warning: Member variable 'ThisSim::robotfixator' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(){
  ^
simulations/template_amosii/main.cpp:45:3: warning: Member variable 'ThisSim::controller' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(){
  ^
simulations/template_amosii/main.cpp:45:3: warning: Member variable 'ThisSim::amos' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(){
  ^
simulations/template_amosii/tripodgait18dof.h:55:5: style: Class 'TripodGait18DOF' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    TripodGait18DOF(const TripodGait18DOFConf& conf = getDefaultConf());
    ^
simulations/template_amosii/tripodgait18dof.cpp:29:18: warning: Member variable 'TripodGait18DOF::number_channels' is not initialized in the constructor. [uninitMemberVar]
TripodGait18DOF::TripodGait18DOF(const TripodGait18DOFConf& _conf)
                 ^
233/300 files checked 82% done
234/300 files checked 82% done
Checking simulations/template_ashigaru/main.cpp ...
Checking simulations/template_camera/main.cpp ...
simulations/template_ashigaru/main.cpp:25:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/template_ashigaru/main.cpp:28:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/template_ashigaru/main.cpp:29:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>  // passive balls
^
simulations/template_ashigaru/main.cpp:30:0: information: Include file: <ode_robots/passivecapsule.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivecapsule.h> // passive capsules
^
simulations/template_ashigaru/main.cpp:34:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/template_ashigaru/main.cpp:36:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h> // include noisegenerator (used for adding noise to sensorvalues)
^
simulations/template_ashigaru/main.cpp:37:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>  // simple wiring
^
simulations/template_ashigaru/main.cpp:40:0: information: Include file: <ode_robots/ashigaru.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/ashigaru.h>
^
simulations/template_camera/main.cpp:64:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/template_camera/main.cpp:67:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/template_camera/main.cpp:68:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/template_camera/main.cpp:69:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/template_camera/main.cpp:70:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/template_camera/main.cpp:72:0: information: Include file: <selforg/braitenberg.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/braitenberg.h>
^
simulations/template_camera/main.cpp:75:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/template_camera/main.cpp:78:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/template_camera/main.cpp:82:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/template_camera/main.cpp:84:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/template_camera/main.cpp:85:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/template_camera/main.cpp:86:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/template_camera/main.cpp:88:0: information: Include file: <ode_robots/camera.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/camera.h>
^
simulations/template_camera/main.cpp:89:0: information: Include file: <ode_robots/imageprocessors.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/imageprocessors.h>
^
simulations/template_camera/main.cpp:90:0: information: Include file: <ode_robots/camerasensors.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/camerasensors.h>
^
simulations/template_camera/main.cpp:91:0: information: Include file: <ode_robots/opticalflow.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/opticalflow.h>
^
simulations/template_camera/main.cpp:93:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/template_camera/main.cpp:94:0: information: Include file: <ode_robots/twowheeled.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twowheeled.h>
^
simulations/template_camera/main.cpp:95:0: information: Include file: <ode_robots/addsensors2robotadapter.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/addsensors2robotadapter.h>
^
235/300 files checked 82% done
Checking simulations/template_cycledSimulation/main.cpp ...
simulations/template_cycledSimulation/main.cpp:43:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/template_cycledSimulation/main.cpp:46:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/template_cycledSimulation/main.cpp:49:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/template_cycledSimulation/main.cpp:52:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/template_cycledSimulation/main.cpp:55:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/template_cycledSimulation/main.cpp:58:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/template_cycledSimulation/main.cpp:59:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/template_cycledSimulation/main.cpp:62:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/template_cycledSimulation/main.cpp:63:0: information: Include file: <ode_robots/nimm4.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm4.h>
^
simulations/template_cycledSimulation/main.cpp:67:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/template_cycledSimulation/main.cpp:69:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/template_cycledSimulation/main.cpp:73:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/template_cycledSimulation/main.cpp:121:21: style: Condition 'i<0' is always false [knownConditionTrueFalse]
    for (int i=0; i < 0/*2*/; i++){
                    ^
simulations/template_cycledSimulation/main.cpp:121:16: note: Assignment 'i=0', assigned value is 0
    for (int i=0; i < 0/*2*/; i++){
               ^
simulations/template_cycledSimulation/main.cpp:121:21: note: Condition 'i<0' is always false
    for (int i=0; i < 0/*2*/; i++){
                    ^
simulations/template_cycledSimulation/main.cpp:218:18: style: Local variable 'agent' shadows outer variable [shadowVariable]
       OdeAgent* agent = new OdeAgent(global);
                 ^
simulations/template_cycledSimulation/main.cpp:84:13: note: Shadowed declaration
  OdeAgent* agent;
            ^
simulations/template_cycledSimulation/main.cpp:218:18: note: Shadow variable
       OdeAgent* agent = new OdeAgent(global);
                 ^
236/300 files checked 82% done
Checking simulations/template_hand/main.cpp ...
simulations/template_camera/main.cpp:135:8: style: Condition 'twowheeled' is always false [knownConditionTrueFalse]
    if(twowheeled) {
       ^
simulations/template_camera/main.cpp:111:21: note: Assignment 'twowheeled=false', assigned value is 0
    bool twowheeled=false;
                    ^
simulations/template_camera/main.cpp:135:8: note: Condition 'twowheeled' is always false
    if(twowheeled) {
       ^
simulations/template_camera/main.cpp:157:8: style: Condition 'nimm2vision' is always true [knownConditionTrueFalse]
    if(nimm2vision){
       ^
simulations/template_camera/main.cpp:112:22: note: Assignment 'nimm2vision=true', assigned value is 1
    bool nimm2vision=true;
                     ^
simulations/template_camera/main.cpp:157:8: note: Condition 'nimm2vision' is always true
    if(nimm2vision){
       ^
237/300 files checked 82% done
simulations/template_hand/main.cpp:36:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/template_hand/main.cpp:39:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/template_hand/main.cpp:40:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>  // passive balls
^
simulations/template_hand/main.cpp:41:0: information: Include file: <ode_robots/passivecapsule.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivecapsule.h> // passive capsules
^
simulations/template_hand/main.cpp:44:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/template_hand/main.cpp:45:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/template_hand/main.cpp:47:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h> // include noisegenerator (used for adding noise to sensorvalues)
^
simulations/template_hand/main.cpp:48:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>  // simple wiring
^
simulations/template_hand/main.cpp:51:0: information: Include file: <ode_robots/hand.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/hand.h>
^
Checking simulations/template_hexabot/main.cpp ...
238/300 files checked 83% done
simulations/template_hexabot/main.cpp:27:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/template_hexabot/main.cpp:29:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/template_hexabot/main.cpp:31:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
Checking simulations/template_hexabot/tripodgait18dof.cpp ...
simulations/template_hexabot/main.cpp:33:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/template_hexabot/main.cpp:35:0: information: Include file: <ode_robots/hexabot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/hexabot.h>
^
simulations/template_hexabot/tripodgait18dof.h:26:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulations/template_hexabot/tripodgait18dof.h:27:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/template_hexabot/tripodgait18dof.h:28:0: information: Include file: <selforg/configurable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/configurable.h>
^
simulations/template_hexabot/tripodgait18dof.h:30:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/template_hexabot/tripodgait18dof.h:31:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/template_hexabot/tripodgait18dof.h:32:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
simulations/template_hexabot/tripodgait18dof.h:33:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
simulations/template_hexabot/tripodgait18dof.h:35:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/template_hexabot/main.cpp:39:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/template_hexabot/tripodgait18dof.cpp:23:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/template_hexabot/tripodgait18dof.cpp:24:0: information: Include file: <ode_robots/hexabotsensormotordefinition.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/hexabotsensormotordefinition.h>
^
simulations/template_hexabot/main.cpp:45:3: warning: Member variable 'ThisSim::robotfixator' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(){
  ^
simulations/template_hexabot/main.cpp:45:3: warning: Member variable 'ThisSim::controller' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(){
  ^
simulations/template_hexabot/main.cpp:45:3: warning: Member variable 'ThisSim::hexabot' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(){
  ^
simulations/template_hexabot/tripodgait18dof.h:55:5: style: Class 'TripodGait18DOF' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    TripodGait18DOF(const TripodGait18DOFConf& conf = getDefaultConf());
    ^
simulations/template_hexabot/tripodgait18dof.cpp:30:18: warning: Member variable 'TripodGait18DOF::number_channels' is not initialized in the constructor. [uninitMemberVar]
TripodGait18DOF::TripodGait18DOF(const TripodGait18DOFConf& _conf)
                 ^
239/300 files checked 83% done
240/300 files checked 83% done
Checking simulations/template_kuka_lwr/main.cpp ...
simulations/template_kuka_lwr/main.cpp:25:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/template_kuka_lwr/main.cpp:28:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/template_kuka_lwr/main.cpp:31:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/template_kuka_lwr/main.cpp:34:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
Checking simulations/template_nejihebi/main.cpp ...
simulations/template_kuka_lwr/main.cpp:37:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/template_kuka_lwr/main.cpp:40:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/template_kuka_lwr/main.cpp:41:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/template_kuka_lwr/main.cpp:44:0: information: Include file: <ode_robots/kuka.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/kuka.h>
^
simulations/template_kuka_lwr/main.cpp:48:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/template_kuka_lwr/main.cpp:50:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/template_kuka_lwr/main.cpp:53:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/template_nejihebi/main.cpp:23:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/template_nejihebi/main.cpp:25:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/template_nejihebi/main.cpp:27:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/template_nejihebi/main.cpp:29:0: information: Include file: <ode_robots/nejihebi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nejihebi.h>
^
simulations/template_nejihebi/main.cpp:31:0: information: Include file: <sys/resource.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/resource.h>
^
simulations/template_kuka_lwr/main.cpp:114:8: style: C-style pointer casting [cstyleCast]
 arm = (Kuka*) vehicle;
       ^
simulations/template_nejihebi/main.cpp:41:5: warning: Member variable 'ExampleController::number_channels' is not initialized in the constructor. [uninitMemberVar]
    ExampleController():AbstractController( "ExampleController",
    ^
241/300 files checked 83% done
simulations/template_nejihebi/main.cpp:122:5: warning: Member variable 'ThisSim::robotfixator' is not initialized in the constructor. [uninitMemberVar]
    ThisSim(){
    ^
simulations/template_nejihebi/main.cpp:122:5: warning: Member variable 'ThisSim::controller' is not initialized in the constructor. [uninitMemberVar]
    ThisSim(){
    ^
simulations/template_nejihebi/main.cpp:122:5: warning: Member variable 'ThisSim::snake' is not initialized in the constructor. [uninitMemberVar]
    ThisSim(){
    ^
Checking simulations/template_onerobot/main.cpp ...
simulations/template_nejihebi/main.cpp:167:23: style: class member 'ThisSim::robotfixator' is never used. [unusedStructMember]
    lpzrobots::Joint* robotfixator;
                      ^
242/300 files checked 83% done
simulations/template_onerobot/main.cpp:122:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/template_onerobot/main.cpp:125:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/template_onerobot/main.cpp:128:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/template_onerobot/main.cpp:131:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
Checking simulations/template_schlange/main.cpp ...
simulations/template_onerobot/main.cpp:134:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/template_onerobot/main.cpp:137:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/template_onerobot/main.cpp:138:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/template_onerobot/main.cpp:141:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/template_onerobot/main.cpp:142:0: information: Include file: <ode_robots/nimm4.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm4.h>
^
simulations/template_onerobot/main.cpp:146:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/template_onerobot/main.cpp:148:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/template_onerobot/main.cpp:152:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/template_schlange/main.cpp:53:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/template_schlange/main.cpp:55:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/template_schlange/main.cpp:56:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/template_schlange/main.cpp:57:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/template_schlange/main.cpp:58:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/template_schlange/main.cpp:59:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/template_schlange/main.cpp:60:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/template_schlange/main.cpp:62:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/template_schlange/main.cpp:63:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/template_schlange/main.cpp:64:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/template_schlange/main.cpp:65:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/template_schlange/main.cpp:67:0: information: Include file: <ode_robots/schlangeservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo.h>
^
simulations/template_schlange/main.cpp:68:0: information: Include file: <ode_robots/schlangeservo2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo2.h>
^
simulations/template_schlange/main.cpp:69:0: information: Include file: <ode_robots/schlangeforce.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeforce.h>
^
simulations/template_schlange/main.cpp:70:0: information: Include file: <ode_robots/schlangevelocity.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangevelocity.h>
^
simulations/template_onerobot/main.cpp:196:21: style: Condition 'i<0' is always false [knownConditionTrueFalse]
    for (int i=0; i < 0/*2*/; i++){
                    ^
simulations/template_onerobot/main.cpp:196:16: note: Assignment 'i=0', assigned value is 0
    for (int i=0; i < 0/*2*/; i++){
               ^
simulations/template_onerobot/main.cpp:196:21: note: Condition 'i<0' is always false
    for (int i=0; i < 0/*2*/; i++){
                    ^
243/300 files checked 84% done
Checking simulations/template_sphererobot/main.cpp ...
simulations/template_schlange/main.cpp:95:6: style: C-style pointer casting [cstyleCast]
    ((OdeRobot*)schlange1)->place(Pos(2,2,5));
     ^
244/300 files checked 84% done
Checking simulations/template_taskedSimulations/main.cpp ...
simulations/template_sphererobot/main.cpp:79:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/template_sphererobot/main.cpp:82:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/template_sphererobot/main.cpp:83:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h> // arena
^
simulations/template_sphererobot/main.cpp:84:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>  // passive balls
^
simulations/template_sphererobot/main.cpp:87:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/template_sphererobot/main.cpp:88:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/template_sphererobot/main.cpp:90:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h> // include noisegenerator (used for adding noise to sensorvalues)
^
simulations/template_sphererobot/main.cpp:91:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>  // simple wiring
^
simulations/template_sphererobot/main.cpp:94:0: information: Include file: <ode_robots/sphererobot3masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sphererobot3masses.h>
^
simulations/template_sphererobot/main.cpp:95:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/template_sphererobot/main.cpp:97:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/template_taskedSimulations/main.cpp:73:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/template_taskedSimulations/main.cpp:76:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/template_taskedSimulations/main.cpp:77:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/template_taskedSimulations/main.cpp:78:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/template_taskedSimulations/main.cpp:79:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/template_taskedSimulations/main.cpp:80:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/template_taskedSimulations/main.cpp:81:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/template_taskedSimulations/main.cpp:82:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/template_taskedSimulations/main.cpp:86:0: information: Include file: <ode_robots/taskedsimulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/taskedsimulation.h>
^
simulations/template_taskedSimulations/main.cpp:88:0: information: Include file: <ode_robots/simulationtask.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulationtask.h>
^
simulations/template_taskedSimulations/main.cpp:90:0: information: Include file: <ode_robots/simulationtaskhandle.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulationtaskhandle.h>
^
simulations/template_taskedSimulations/main.cpp:92:0: information: Include file: <ode_robots/simulationtasksupervisor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulationtasksupervisor.h>
^
simulations/template_sphererobot/main.cpp:151:6: style: C-style pointer casting [cstyleCast]
    ((OdeRobot*)sphere1)->place ( Pos( 0 , 0 , 0.1 ));
     ^
245/300 files checked 84% done
Checking simulations/tests/camera/main.cpp ...
246/300 files checked 84% done
simulations/tests/camera/main.cpp:57:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/tests/camera/main.cpp:60:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/tests/camera/main.cpp:61:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/tests/camera/main.cpp:62:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/tests/camera/main.cpp:65:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/tests/camera/main.cpp:68:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/tests/camera/main.cpp:72:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
Checking simulations/tests/collisions/main.cpp ...
simulations/tests/camera/main.cpp:74:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/tests/camera/main.cpp:75:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/tests/camera/main.cpp:76:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/tests/camera/main.cpp:78:0: information: Include file: <ode_robots/camera.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/camera.h>
^
simulations/tests/camera/main.cpp:79:0: information: Include file: <ode_robots/imageprocessors.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/imageprocessors.h>
^
simulations/tests/camera/main.cpp:82:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/tests/collisions/main.cpp:39:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/tests/collisions/main.cpp:43:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/tests/collisions/main.cpp:44:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/tests/collisions/main.cpp:45:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/tests/collisions/main.cpp:48:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/tests/collisions/main.cpp:51:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/tests/collisions/main.cpp:54:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/tests/collisions/main.cpp:55:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/tests/collisions/main.cpp:56:0: information: Include file: <ode_robots/passivecapsule.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivecapsule.h>
^
247/300 files checked 84% done
248/300 files checked 85% done
Checking simulations/tests/collisionsWithHumanoid/main.cpp ...
Checking simulations/tests/colorschema/main.cpp ...
simulations/tests/collisionsWithHumanoid/main.cpp:42:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/tests/collisionsWithHumanoid/main.cpp:46:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/tests/collisionsWithHumanoid/main.cpp:47:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/tests/collisionsWithHumanoid/main.cpp:48:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/tests/collisionsWithHumanoid/main.cpp:51:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/tests/collisionsWithHumanoid/main.cpp:54:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/tests/collisionsWithHumanoid/main.cpp:57:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/tests/collisionsWithHumanoid/main.cpp:58:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/tests/collisionsWithHumanoid/main.cpp:59:0: information: Include file: <ode_robots/passivecapsule.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivecapsule.h>
^
simulations/tests/collisionsWithHumanoid/main.cpp:62:0: information: Include file: <selforg/semox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/semox.h>
^
simulations/tests/collisionsWithHumanoid/main.cpp:63:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/tests/collisionsWithHumanoid/main.cpp:64:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/tests/collisionsWithHumanoid/main.cpp:66:0: information: Include file: <ode_robots/skeleton.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/skeleton.h>
^
simulations/tests/colorschema/main.cpp:24:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/tests/colorschema/main.cpp:25:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
simulations/tests/colorschema/main.cpp:28:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/tests/colorschema/main.cpp:31:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/tests/colorschema/main.cpp:32:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/tests/colorschema/main.cpp:33:0: information: Include file: <ode_robots/passivecapsule.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivecapsule.h>
^
249/300 files checked 85% done
simulations/tests/collisionsWithHumanoid/main.cpp:79:3: warning: Member variable 'ThisSim::height' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(){
  ^
Checking simulations/tests/contact_sensor/main.cpp ...
250/300 files checked 85% done
simulations/tests/contact_sensor/main.cpp:23:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/tests/contact_sensor/main.cpp:26:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/tests/contact_sensor/main.cpp:29:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/tests/contact_sensor/main.cpp:32:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/tests/contact_sensor/main.cpp:35:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
Checking simulations/tests/graphics/main.cpp ...
simulations/tests/contact_sensor/main.cpp:36:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/tests/contact_sensor/main.cpp:39:0: information: Include file: <ode_robots/fourwheeled.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/fourwheeled.h>
^
simulations/tests/contact_sensor/main.cpp:41:0: information: Include file: <ode_robots/contactsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/contactsensor.h>
^
simulations/tests/contact_sensor/main.cpp:44:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/tests/contact_sensor/main.cpp:46:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/tests/contact_sensor/main.cpp:49:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/tests/graphics/main.cpp:62:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/tests/graphics/main.cpp:65:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/tests/graphics/main.cpp:68:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/tests/graphics/main.cpp:71:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/tests/graphics/main.cpp:74:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/tests/graphics/main.cpp:78:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/tests/graphics/main.cpp:79:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/tests/graphics/main.cpp:81:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/tests/graphics/main.cpp:82:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/tests/graphics/main.cpp:85:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/tests/graphics/main.cpp:86:0: information: Include file: <ode_robots/terrainground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/terrainground.h>
^
simulations/tests/graphics/main.cpp:87:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/tests/contact_sensor/main.cpp:73:8: style: Condition 'balls' is always true [knownConditionTrueFalse]
    if(balls){
       ^
simulations/tests/contact_sensor/main.cpp:71:16: note: Assignment 'balls=true', assigned value is 1
    bool balls=true;
               ^
simulations/tests/contact_sensor/main.cpp:73:8: note: Condition 'balls' is always true
    if(balls){
       ^
251/300 files checked 85% done
252/300 files checked 85% done
Checking simulations/tests/ir_sensor/main.cpp ...
Checking simulations/tests/materials/main.cpp ...
simulations/soxworld/skeleton.cpp:49:13: warning: Member variable 'Skeleton::pelvisservo' is not initialized in the constructor. [uninitMemberVar]
  Skeleton::Skeleton(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
            ^
simulations/tests/ir_sensor/main.cpp:23:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/tests/ir_sensor/main.cpp:25:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/tests/ir_sensor/main.cpp:26:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/tests/ir_sensor/main.cpp:28:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/tests/ir_sensor/main.cpp:29:0: information: Include file: <ode_robots/randomobstacles.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/randomobstacles.h>
^
simulations/tests/ir_sensor/main.cpp:31:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/tests/ir_sensor/main.cpp:32:0: information: Include file: <ode_robots/nimm4.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm4.h>
^
simulations/tests/ir_sensor/main.cpp:33:0: information: Include file: <ode_robots/fourwheeled.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/fourwheeled.h>
^
simulations/tests/ir_sensor/main.cpp:35:0: information: Include file: <selforg/sox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sox.h>
^
simulations/tests/ir_sensor/main.cpp:36:0: information: Include file: <selforg/soxexpand.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/soxexpand.h>
^
simulations/tests/ir_sensor/main.cpp:37:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/tests/ir_sensor/main.cpp:38:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/tests/ir_sensor/main.cpp:39:0: information: Include file: <selforg/selectivenoisewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectivenoisewiring.h>
^
simulations/tests/ir_sensor/main.cpp:40:0: information: Include file: <selforg/onecontrollerperchannel.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/onecontrollerperchannel.h>
^
simulations/tests/ir_sensor/main.cpp:41:0: information: Include file: <ode_robots/substance.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/substance.h>
^
simulations/tests/ir_sensor/main.cpp:44:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/tests/ir_sensor/main.cpp:45:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
simulations/tests/ir_sensor/main.cpp:46:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
simulations/tests/materials/main.cpp:129:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/tests/materials/main.cpp:133:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/tests/materials/main.cpp:134:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/tests/materials/main.cpp:137:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/soxworld/skeleton.cpp:1086:13: warning: Either the condition 'o' is redundant or there is possible null pointer dereference: o. [nullPointerRedundantCheck]
    else if(o->getBody())
            ^
simulations/soxworld/skeleton.cpp:1084:9: note: Assuming that condition 'o' is not redundant
    if (o && o->getGeom())
        ^
simulations/soxworld/skeleton.cpp:1081:33: note: Assignment to 'o=objects[Head_comp]'
    const Primitive* o = objects[Head_comp];
                                ^
simulations/soxworld/skeleton.cpp:1081:24: note: o is assigned 'objects[Head_comp]' here.
    const Primitive* o = objects[Head_comp];
                       ^
simulations/soxworld/skeleton.cpp:1086:13: note: Null pointer dereference
    else if(o->getBody())
            ^
simulations/tests/materials/main.cpp:140:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/soxworld/skeleton.cpp:1097:13: warning: Either the condition 'o' is redundant or there is possible null pointer dereference: o. [nullPointerRedundantCheck]
    else if(o->getBody())
            ^
simulations/soxworld/skeleton.cpp:1095:9: note: Assuming that condition 'o' is not redundant
    if (o && o->getGeom())
        ^
simulations/soxworld/skeleton.cpp:1092:33: note: Assignment to 'o=objects[Trunk_comp]'
    const Primitive* o = objects[Trunk_comp];
                                ^
simulations/soxworld/skeleton.cpp:1092:24: note: o is assigned 'objects[Trunk_comp]' here.
    const Primitive* o = objects[Trunk_comp];
                       ^
simulations/soxworld/skeleton.cpp:1097:13: note: Null pointer dereference
    else if(o->getBody())
            ^
simulations/tests/materials/main.cpp:141:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/tests/materials/main.cpp:142:0: information: Include file: <ode_robots/passivecapsule.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivecapsule.h>
^
simulations/tests/materials/main.cpp:145:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/tests/materials/main.cpp:146:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/tests/materials/main.cpp:149:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/tests/materials/main.cpp:150:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/tests/materials/main.cpp:151:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/tests/materials/main.cpp:152:0: information: Include file: <ode_robots/schlangeservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo.h>
^
simulations/soxworld/skeleton.cpp:1073:75: style: Same expression in both branches of ternary operator. [duplicateExpressionTernary]
        (*i)->setMinMax(fst? -conf.backJointLimit * conf.jointLimitFactor : -conf.backJointLimit * conf.jointLimitFactor,
                                                                          ^
simulations/soxworld/skeleton.cpp:403:17: style: The scope of the variable 'bj' can be reduced. [variableScope]
    BallJoint*  bj;
                ^
simulations/tests/materials/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/tests/ir_sensor/main.cpp:146:3: warning: Member variable 'ThisSim::stats' is not initialized in the constructor. [uninitMemberVar]
  ThisSim()
  ^
simulations/tests/ir_sensor/main.cpp:146:3: warning: Member variable 'ThisSim::nimm2' is not initialized in the constructor. [uninitMemberVar]
  ThisSim()
  ^
simulations/tests/ir_sensor/main.cpp:259:10: style: Condition 'plotOnlyOne' is always false [knownConditionTrueFalse]
      if(plotOnlyOne)
         ^
simulations/tests/ir_sensor/main.cpp:167:22: note: Assignment 'plotOnlyOne=false', assigned value is 0
    bool plotOnlyOne=false;
                     ^
simulations/tests/ir_sensor/main.cpp:259:10: note: Condition 'plotOnlyOne' is always false
      if(plotOnlyOne)
         ^
simulations/tests/ir_sensor/main.cpp:263:30: style: C-style pointer casting [cstyleCast]
      agent->addInspectable(((OneControllerPerChannel*)controller)->getControllers()[0]);
                             ^
simulations/tests/ir_sensor/main.cpp:264:30: style: C-style pointer casting [cstyleCast]
      agent->addInspectable(((OneControllerPerChannel*)controller)->getControllers()[1]);
                             ^
simulations/tests/ir_sensor/main.cpp:306:30: style: C-style pointer casting [cstyleCast]
      agent->addInspectable(((OneControllerPerChannel*)controller)->getControllers()[0]);
                             ^
simulations/tests/ir_sensor/main.cpp:307:30: style: C-style pointer casting [cstyleCast]
      agent->addInspectable(((OneControllerPerChannel*)controller)->getControllers()[1]);
                             ^
simulations/tests/ir_sensor/main.cpp:343:32: style: Parameter 'globalData' can be declared as reference to const [constParameterReference]
  void addCallback(GlobalData& globalData, bool draw, bool pause, bool control) {
                               ^
simulations/tests/materials/main.cpp:183:8: style: Condition 'transforms' is always false [knownConditionTrueFalse]
    if(transforms){
       ^
simulations/tests/materials/main.cpp:174:23: note: Assignment 'transforms=false', assigned value is 0
    bool transforms = false;
                      ^
simulations/tests/materials/main.cpp:183:8: note: Condition 'transforms' is always false
    if(transforms){
       ^
simulations/tests/materials/main.cpp:209:8: style: Condition 'substances' is always false [knownConditionTrueFalse]
    if(substances){
       ^
simulations/tests/materials/main.cpp:173:23: note: Assignment 'substances=false', assigned value is 0
    bool substances = false;
                      ^
simulations/tests/materials/main.cpp:209:8: note: Condition 'substances' is always false
    if(substances){
       ^
simulations/tests/materials/main.cpp:336:8: style: Condition 'motors' is always false [knownConditionTrueFalse]
    if(motors){
       ^
simulations/tests/materials/main.cpp:175:23: note: Assignment 'motors=false', assigned value is 0
    bool motors     = false;
                      ^
simulations/tests/materials/main.cpp:336:8: note: Condition 'motors' is always false
    if(motors){
       ^
simulations/tests/materials/main.cpp:358:8: style: Condition 'schlange' is always false [knownConditionTrueFalse]
    if(schlange){
       ^
simulations/tests/materials/main.cpp:176:23: note: Assignment 'schlange=false', assigned value is 0
    bool schlange   = false;
                      ^
simulations/tests/materials/main.cpp:358:8: note: Condition 'schlange' is always false
    if(schlange){
       ^
simulations/tests/materials/main.cpp:419:14: style: Condition 'down||1' is always true [knownConditionTrueFalse]
    if (down || 1) { // only when key is pressed, not when released
             ^
simulations/tests/ir_sensor/main.cpp:139:19: style: class member 'ThisSim::stats' is never used. [unusedStructMember]
  StatisticTools* stats;
                  ^
simulations/tests/ir_sensor/main.cpp:140:10: style: class member 'ThisSim::nimm2' is never used. [unusedStructMember]
  Nimm2* nimm2;
         ^
253/300 files checked 86% done
Checking simulations/tests/penetration/main.cpp ...
254/300 files checked 86% done
simulations/tests/penetration/main.cpp:25:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/tests/penetration/main.cpp:29:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/tests/penetration/main.cpp:30:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/tests/penetration/main.cpp:31:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/tests/penetration/main.cpp:34:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/tests/penetration/main.cpp:37:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
Checking simulations/tests/ray_sensor/main.cpp ...
simulations/tests/penetration/main.cpp:40:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/tests/penetration/main.cpp:41:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/tests/penetration/main.cpp:42:0: information: Include file: <ode_robots/passivecapsule.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivecapsule.h>
^
simulations/tests/ray_sensor/main.cpp:23:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/tests/ray_sensor/main.cpp:25:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/tests/ray_sensor/main.cpp:26:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/tests/ray_sensor/main.cpp:28:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/tests/ray_sensor/main.cpp:29:0: information: Include file: <ode_robots/raysensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/raysensor.h>
^
simulations/tests/ray_sensor/main.cpp:30:0: information: Include file: <ode_robots/irsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/irsensor.h>
^
simulations/soxworld/skeleton.cpp:370:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
simulations/soxworld/skeleton.cpp:373:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
255/300 files checked 87% done
simulations/tests/penetration/main.cpp:55:7: style: class member 'ThisSim::height' is never used. [unusedStructMember]
  int height;
      ^
simulations/tests/penetration/main.cpp:44:0: information: Include file: <ode_robots/passivecylinder.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivecylinder.h>
^
Checking simulations/tests/penetration/main.cpp: PASSIVECYLINDER...
Checking simulations/tests/sound_sensor/main.cpp ...
simulations/tests/ray_sensor/main.cpp:46:3: warning: Member variable 'ThisSim::b1' is not initialized in the constructor. [uninitMemberVar]
  ThisSim()
  ^
simulations/tests/ray_sensor/main.cpp:46:3: warning: Member variable 'ThisSim::b2' is not initialized in the constructor. [uninitMemberVar]
  ThisSim()
  ^
simulations/tests/ray_sensor/main.cpp:46:3: warning: Member variable 'ThisSim::rs' is not initialized in the constructor. [uninitMemberVar]
  ThisSim()
  ^
simulations/tests/ray_sensor/main.cpp:46:3: warning: Member variable 'ThisSim::ir' is not initialized in the constructor. [uninitMemberVar]
  ThisSim()
  ^
256/300 files checked 87% done
simulations/tests/sound_sensor/main.cpp:25:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/tests/sound_sensor/main.cpp:28:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/tests/sound_sensor/main.cpp:31:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/tests/sound_sensor/main.cpp:34:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/tests/sound_sensor/main.cpp:37:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
Checking simulations/tests/speed_pos_sensor/main.cpp ...
simulations/tests/sound_sensor/main.cpp:38:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/tests/sound_sensor/main.cpp:39:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/tests/sound_sensor/main.cpp:42:0: information: Include file: <ode_robots/fourwheeled.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/fourwheeled.h>
^
simulations/tests/sound_sensor/main.cpp:44:0: information: Include file: <ode_robots/speaker.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speaker.h>
^
simulations/tests/sound_sensor/main.cpp:45:0: information: Include file: <ode_robots/soundsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/soundsensor.h>
^
simulations/tests/sound_sensor/main.cpp:48:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/tests/sound_sensor/main.cpp:50:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/tests/sound_sensor/main.cpp:53:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/tests/speed_pos_sensor/main.cpp:26:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/tests/speed_pos_sensor/main.cpp:29:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/tests/speed_pos_sensor/main.cpp:32:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/tests/speed_pos_sensor/main.cpp:35:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/tests/speed_pos_sensor/main.cpp:37:0: information: Include file: <ode_robots/speedsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/speedsensor.h>
^
simulations/tests/speed_pos_sensor/main.cpp:38:0: information: Include file: <ode_robots/relativepositionsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/relativepositionsensor.h>
^
simulations/tests/speed_pos_sensor/main.cpp:41:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/tests/speed_pos_sensor/main.cpp:43:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
257/300 files checked 87% done
258/300 files checked 88% done
Checking simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp ...
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:14:0: information: Include file: <osgDB/ReadFile> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgDB/ReadFile>
^
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:15:0: information: Include file: <osgDB/WriteFile> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgDB/WriteFile>
^
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:17:0: information: Include file: <osgUtil/Optimizer> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgUtil/Optimizer>
^
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:18:0: information: Include file: <osg/CoordinateSystemNode> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/CoordinateSystemNode>
^
Checking simulations/tests/texture_rendering_off_sync/lpzviewer.cpp ...
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:20:0: information: Include file: <osg/Switch> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Switch>
^
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:21:0: information: Include file: <osgText/Text> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgText/Text>
^
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:23:0: information: Include file: <osgViewer/Viewer> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/Viewer>
^
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:24:0: information: Include file: <osgViewer/ViewerEventHandlers> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/ViewerEventHandlers>
^
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:25:0: information: Include file: <osgViewer/Renderer> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/Renderer>
^
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:28:0: information: Include file: <osgGA/TrackballManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/TrackballManipulator>
^
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:29:0: information: Include file: <osgGA/FlightManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/FlightManipulator>
^
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:30:0: information: Include file: <osgGA/DriveManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/DriveManipulator>
^
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:31:0: information: Include file: <osgGA/KeySwitchMatrixManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/KeySwitchMatrixManipulator>
^
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:32:0: information: Include file: <osgGA/StateSetManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/StateSetManipulator>
^
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:34:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:35:0: information: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sstream>
^
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:36:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
simulations/tests/texture_rendering_off_sync/lpzviewer.h:2:0: information: Include file: <osgViewer/Viewer> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/Viewer>
^
simulations/tests/texture_rendering_off_sync/lpzviewer.h:3:0: information: Include file: <osg/Group> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Group>
^
simulations/tests/texture_rendering_off_sync/lpzviewer.cpp:3:0: information: Include file: <osgViewer/ViewerBase> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/ViewerBase>
^
simulations/tests/texture_rendering_off_sync/lpzviewer.cpp:4:0: information: Include file: <osgViewer/View> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/View>
^
simulations/tests/texture_rendering_off_sync/lpzviewer.cpp:5:0: information: Include file: <osgViewer/Renderer> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/Renderer>
^
simulations/tests/texture_rendering_off_sync/lpzviewer.cpp:7:0: information: Include file: <osgUtil/Statistics> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgUtil/Statistics>
^
simulations/tests/texture_rendering_off_sync/lpzviewer.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/tests/texture_rendering_off_sync/lpzviewer.h:16:3: style: Class 'LPZViewer' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  LPZViewer(osg::ArgumentParser& arguments);
  ^
simulations/tests/texture_rendering_off_sync/lpzviewer.h:18:3: style: Class 'LPZViewer' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  LPZViewer(const osgViewer::Viewer& viewer, const osg::CopyOp& copyop=osg::CopyOp::SHALLOW_COPY);
  ^
simulations/tests/speed_pos_sensor/main.cpp:61:8: style: Condition 'speed' is always true [knownConditionTrueFalse]
    if(speed){
       ^
simulations/tests/speed_pos_sensor/main.cpp:59:16: note: Assignment 'speed=true', assigned value is 1
    bool speed=true;
               ^
simulations/tests/speed_pos_sensor/main.cpp:61:8: note: Condition 'speed' is always true
    if(speed){
       ^
259/300 files checked 88% done
simulations/tests/speed_pos_sensor/main.cpp:93:40: performance: Function parameter 'a' should be passed by const reference. [passedByValue]
  bool compare_lists(std::list<double> a, std::list<double> b, double eps){
                                       ^
simulations/tests/speed_pos_sensor/main.cpp:93:61: performance: Function parameter 'b' should be passed by const reference. [passedByValue]
  bool compare_lists(std::list<double> a, std::list<double> b, double eps){
                                                            ^
simulations/tests/speed_pos_sensor/main.cpp:56:82: style: Parameter 'global' can be declared as reference to const [constParameterReference]
  void start(const OdeHandle& odeHandle, const OsgHandle& osgHandle, GlobalData& global)
                                                                                 ^
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/tests/texture_rendering_off_sync/test.cpp ...
simulations/tests/speed_pos_sensor/main.cpp:50:10: style: class member 'ThisSim::value' is never used. [unusedStructMember]
  double value;
         ^
simulations/tests/speed_pos_sensor/main.cpp:51:10: style: class member 'ThisSim::value2' is never used. [unusedStructMember]
  double value2;
         ^
simulations/tests/speed_pos_sensor/main.cpp:119:25: style: Variable 'posx' is assigned a value that is never used. [unreadVariable]
      std::list<double> posx = {-2, 0, -1.81};
                        ^
260/300 files checked 88% done
simulations/tests/texture_rendering_off_sync/test.cpp:12:0: information: Include file: <osgDB/ReadFile> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgDB/ReadFile>
^
simulations/tests/texture_rendering_off_sync/test.cpp:13:0: information: Include file: <osgDB/WriteFile> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgDB/WriteFile>
^
simulations/tests/texture_rendering_off_sync/test.cpp:15:0: information: Include file: <osgUtil/Optimizer> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgUtil/Optimizer>
^
Checking simulations/tests/texture_rendering_off_sync/test_georg.cpp ...
simulations/tests/texture_rendering_off_sync/test.cpp:16:0: information: Include file: <osg/CoordinateSystemNode> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/CoordinateSystemNode>
^
simulations/tests/texture_rendering_off_sync/test.cpp:18:0: information: Include file: <osg/Switch> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Switch>
^
simulations/tests/texture_rendering_off_sync/test.cpp:19:0: information: Include file: <osgText/Text> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgText/Text>
^
simulations/tests/texture_rendering_off_sync/test.cpp:21:0: information: Include file: <osgViewer/Viewer> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/Viewer>
^
simulations/tests/texture_rendering_off_sync/test.cpp:22:0: information: Include file: <osgViewer/ViewerEventHandlers> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/ViewerEventHandlers>
^
simulations/tests/texture_rendering_off_sync/test.cpp:24:0: information: Include file: <osgGA/TrackballManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/TrackballManipulator>
^
simulations/tests/texture_rendering_off_sync/test.cpp:25:0: information: Include file: <osgGA/FlightManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/FlightManipulator>
^
simulations/tests/texture_rendering_off_sync/test.cpp:26:0: information: Include file: <osgGA/DriveManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/DriveManipulator>
^
simulations/tests/texture_rendering_off_sync/test.cpp:27:0: information: Include file: <osgGA/KeySwitchMatrixManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/KeySwitchMatrixManipulator>
^
simulations/tests/texture_rendering_off_sync/test.cpp:28:0: information: Include file: <osgGA/StateSetManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/StateSetManipulator>
^
simulations/tests/texture_rendering_off_sync/test.cpp:29:0: information: Include file: <osgGA/AnimationPathManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/AnimationPathManipulator>
^
simulations/tests/texture_rendering_off_sync/test.cpp:30:0: information: Include file: <osgGA/TerrainManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/TerrainManipulator>
^
simulations/tests/texture_rendering_off_sync/test.cpp:32:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
simulations/tests/texture_rendering_off_sync/test.cpp:33:0: information: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sstream>
^
simulations/tests/texture_rendering_off_sync/test.cpp:34:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
simulations/tests/texture_rendering_off_sync/test_georg.cpp:16:0: information: Include file: <osgDB/ReadFile> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgDB/ReadFile>
^
simulations/tests/texture_rendering_off_sync/test_georg.cpp:17:0: information: Include file: <osgDB/WriteFile> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgDB/WriteFile>
^
simulations/tests/texture_rendering_off_sync/test_georg.cpp:19:0: information: Include file: <osgUtil/Optimizer> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgUtil/Optimizer>
^
simulations/tests/texture_rendering_off_sync/test_georg.cpp:20:0: information: Include file: <osg/CoordinateSystemNode> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/CoordinateSystemNode>
^
simulations/tests/texture_rendering_off_sync/test_georg.cpp:22:0: information: Include file: <osg/Switch> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Switch>
^
simulations/tests/texture_rendering_off_sync/test_georg.cpp:23:0: information: Include file: <osgText/Text> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgText/Text>
^
simulations/tests/texture_rendering_off_sync/test_georg.cpp:25:0: information: Include file: <osgViewer/Viewer> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/Viewer>
^
simulations/tests/texture_rendering_off_sync/test_georg.cpp:26:0: information: Include file: <osgViewer/ViewerEventHandlers> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgViewer/ViewerEventHandlers>
^
simulations/tests/texture_rendering_off_sync/test_georg.cpp:30:0: information: Include file: <osgGA/TrackballManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/TrackballManipulator>
^
simulations/tests/texture_rendering_off_sync/test_georg.cpp:31:0: information: Include file: <osgGA/FlightManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/FlightManipulator>
^
simulations/tests/texture_rendering_off_sync/test_georg.cpp:32:0: information: Include file: <osgGA/DriveManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/DriveManipulator>
^
simulations/tests/texture_rendering_off_sync/test_georg.cpp:33:0: information: Include file: <osgGA/KeySwitchMatrixManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/KeySwitchMatrixManipulator>
^
simulations/tests/texture_rendering_off_sync/test_georg.cpp:34:0: information: Include file: <osgGA/StateSetManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/StateSetManipulator>
^
simulations/tests/texture_rendering_off_sync/test_georg.cpp:35:0: information: Include file: <osgGA/AnimationPathManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/AnimationPathManipulator>
^
simulations/tests/texture_rendering_off_sync/test_georg.cpp:36:0: information: Include file: <osgGA/TerrainManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/TerrainManipulator>
^
simulations/tests/texture_rendering_off_sync/test_georg.cpp:38:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
simulations/tests/texture_rendering_off_sync/test_georg.cpp:39:0: information: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sstream>
^
simulations/tests/texture_rendering_off_sync/test_georg.cpp:40:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:46:3: style: Class 'AsyncRTTViewer' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  AsyncRTTViewer(osg::ArgumentParser& arguments)
  ^
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:51:3: style: Class 'AsyncRTTViewer' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  AsyncRTTViewer(const osgViewer::Viewer& viewer,
  ^
simulations/tests/texture_rendering_off_sync/async_texture_rendering.cpp:177:3: style: Struct 'MyCameraPostDrawCallback' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  MyCameraPostDrawCallback(osg::Image* image):
  ^
261/300 files checked 88% done
simulations/tests/texture_rendering_off_sync/test.cpp:94:25: warning: Either the condition 'apm' is redundant or there is possible null pointer dereference: apm. [nullPointerRedundantCheck]
            if (apm || !apm->valid())
                        ^
simulations/tests/texture_rendering_off_sync/test.cpp:94:17: note: Assuming that condition 'apm' is not redundant
            if (apm || !apm->valid())
                ^
simulations/tests/texture_rendering_off_sync/test.cpp:94:25: note: Null pointer dereference
            if (apm || !apm->valid())
                        ^
Checking simulations/tests/torque_sensor/main.cpp ...
262/300 files checked 88% done
simulations/tests/torque_sensor/main.cpp:26:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/tests/torque_sensor/main.cpp:29:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/tests/torque_sensor/main.cpp:32:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/tests/torque_sensor/main.cpp:35:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
Checking simulations/uwo/main.cpp ...
simulations/tests/torque_sensor/main.cpp:38:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/tests/torque_sensor/main.cpp:39:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/tests/torque_sensor/main.cpp:42:0: information: Include file: <ode_robots/fourwheeled.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/fourwheeled.h>
^
simulations/tests/torque_sensor/main.cpp:44:0: information: Include file: <ode_robots/torquesensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/torquesensor.h>
^
simulations/tests/torque_sensor/main.cpp:45:0: information: Include file: <ode_robots/angularmotor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/angularmotor.h>
^
simulations/tests/torque_sensor/main.cpp:46:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/tests/torque_sensor/main.cpp:49:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/tests/torque_sensor/main.cpp:51:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/tests/torque_sensor/main.cpp:54:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/uwo/main.cpp:47:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/uwo/main.cpp:50:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/uwo/main.cpp:53:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/uwo/main.cpp:56:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/uwo/main.cpp:59:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/uwo/main.cpp:62:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/uwo/main.cpp:65:0: information: Include file: <ode_robots/uwo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/uwo.h>
^
simulations/uwo/main.cpp:68:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/uwo/main.cpp:70:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/uwo/main.cpp:74:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/uwo/main.cpp:75:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/uwo/main.cpp:76:0: information: Include file: <selforg/sox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sox.h>
^
simulations/tests/texture_rendering_off_sync/test_georg.cpp:46:5: style: Struct 'MyCameraPostDrawCallback' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    MyCameraPostDrawCallback(osg::Image* image):
    ^
simulations/tests/torque_sensor/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
263/300 files checked 89% done
Checking simulations/vierbeiner/main.cpp ...
simulations/tests/texture_rendering_off_sync/test_georg.cpp:140:23: style: Variable 'width' is assigned a value that is never used. [unreadVariable]
    unsigned int width=512;
                      ^
simulations/tests/texture_rendering_off_sync/test_georg.cpp:141:24: style: Variable 'height' is assigned a value that is never used. [unreadVariable]
    unsigned int height=512;
                       ^
264/300 files checked 89% done
simulations/vierbeiner/main.cpp:87:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/vierbeiner/main.cpp:90:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/vierbeiner/main.cpp:93:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/vierbeiner/main.cpp:96:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
Checking simulations/vierbeiner/walkcontroller.cpp ...
simulations/vierbeiner/main.cpp:99:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/vierbeiner/main.cpp:102:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/vierbeiner/main.cpp:103:0: information: Include file: <selforg/feedbackwiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/feedbackwiring.h>
^
simulations/vierbeiner/main.cpp:104:0: information: Include file: <selforg/wiringsequence.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/wiringsequence.h>
^
simulations/vierbeiner/main.cpp:108:0: information: Include file: <ode_robots/vierbeiner.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/vierbeiner.h>
^
simulations/vierbeiner/main.cpp:111:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/vierbeiner/main.cpp:113:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/vierbeiner/main.cpp:114:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/vierbeiner/main.cpp:117:0: information: Include file: <selforg/invertmotorbigmodel.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorbigmodel.h>
^
simulations/vierbeiner/main.cpp:118:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/vierbeiner/main.cpp:119:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/vierbeiner/main.cpp:120:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/vierbeiner/walkcontroller.h:37:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/vierbeiner/walkcontroller.h:38:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulations/vierbeiner/main.cpp:124:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/vierbeiner/main.cpp:125:0: information: Include file: <ode_robots/terrainground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/terrainground.h>
^
simulations/vierbeiner/main.cpp:126:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/vierbeiner/main.cpp:127:0: information: Include file: <ode_robots/sliderwheelie.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sliderwheelie.h>
^
simulations/vierbeiner/main.cpp:128:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/tests/torque_sensor/main.cpp:84:8: style: Condition 'fixed' is always false [knownConditionTrueFalse]
    if(fixed){
       ^
simulations/tests/torque_sensor/main.cpp:75:16: note: Assignment 'fixed=false', assigned value is 0
    bool fixed=false;
               ^
simulations/tests/torque_sensor/main.cpp:84:8: note: Condition 'fixed' is always false
    if(fixed){
       ^
simulations/tests/torque_sensor/main.cpp:104:8: style: Condition 'hinge' is always false [knownConditionTrueFalse]
    if(hinge){
       ^
simulations/tests/torque_sensor/main.cpp:76:16: note: Assignment 'hinge=false', assigned value is 0
    bool hinge=false;
               ^
simulations/tests/torque_sensor/main.cpp:104:8: note: Condition 'hinge' is always false
    if(hinge){
       ^
simulations/tests/torque_sensor/main.cpp:125:8: style: Condition 'universalfixed' is always false [knownConditionTrueFalse]
    if(universalfixed){
       ^
simulations/tests/torque_sensor/main.cpp:77:25: note: Assignment 'universalfixed=false', assigned value is 0
    bool universalfixed=false;
                        ^
simulations/tests/torque_sensor/main.cpp:125:8: note: Condition 'universalfixed' is always false
    if(universalfixed){
       ^
simulations/tests/torque_sensor/main.cpp:145:8: style: Condition 'universal' is always false [knownConditionTrueFalse]
    if(universal){
       ^
simulations/tests/torque_sensor/main.cpp:78:20: note: Assignment 'universal=false', assigned value is 0
    bool universal=false;
                   ^
simulations/tests/torque_sensor/main.cpp:145:8: note: Condition 'universal' is always false
    if(universal){
       ^
simulations/vierbeiner/walkcontroller.cpp:33:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/vierbeiner/walkcontroller.cpp:34:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
265/300 files checked 89% done
simulations/vierbeiner/walkcontroller.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/vierbeiner_old/main.cpp ...
simulations/vierbeiner/walkcontroller.cpp:73:10: style: Variable 'phases' can be declared as const array [constVariable]
  double phases[4]= { w + 2*(M_PI/2),
         ^
266/300 files checked 89% done
simulations/vierbeiner_old/main.cpp:66:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/vierbeiner_old/main.cpp:69:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/vierbeiner_old/main.cpp:72:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/vierbeiner_old/main.cpp:75:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
Checking simulations/vierbeiner_old/vierbeiner.old.cpp ...
simulations/vierbeiner_old/main.cpp:78:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/vierbeiner_old/main.cpp:81:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/vierbeiner_old/main.cpp:87:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/vierbeiner_old/main.cpp:89:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/vierbeiner_old/main.cpp:90:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/vierbeiner_old/main.cpp:94:0: information: Include file: <selforg/derbigcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derbigcontroller.h>
^
simulations/vierbeiner_old/main.cpp:95:0: information: Include file: <selforg/invertmotorbigmodel.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorbigmodel.h>
^
simulations/vierbeiner_old/main.cpp:96:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/vierbeiner_old/main.cpp:97:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/vierbeiner_old/main.cpp:98:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/vierbeiner_old/main.cpp:101:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/vierbeiner_old/main.cpp:102:0: information: Include file: <ode_robots/terrainground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/terrainground.h>
^
simulations/vierbeiner_old/main.cpp:103:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/vierbeiner/main.cpp:170:82: style: Same expression on both sides of '-'. [duplicateExpression]
             osg::Vec3((4+4*i)*scale, .2, (.15+0.15*i)*height), 1, i==(anzgrounds-1));
                                                                                 ^
simulations/vierbeiner/main.cpp:164:20: note: 'anzgrounds' is assigned value '1' here.
    int anzgrounds=1;
                   ^
simulations/vierbeiner/main.cpp:170:82: note: Same expression on both sides of '-'.
             osg::Vec3((4+4*i)*scale, .2, (.15+0.15*i)*height), 1, i==(anzgrounds-1));
                                                                                 ^
simulations/vierbeiner/main.cpp:272:14: style: The scope of the variable 'sensors' can be reduced. [variableScope]
      double sensors[24];
             ^
simulations/vierbeiner/main.cpp:273:14: style: The scope of the variable 'motors' can be reduced. [variableScope]
      double motors[24];
             ^
simulations/vierbeiner_old/vierbeiner.old.cpp:43:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/vierbeiner_old/vierbeiner.old.cpp:44:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/vierbeiner_old/vierbeiner.old.cpp:47:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/vierbeiner_old/vierbeiner.old.cpp:50:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/vierbeiner_old/vierbeiner.old.cpp:51:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
267/300 files checked 89% done
Checking simulations/vision/2Wheeled_Motion/main.cpp ...
268/300 files checked 90% done
simulations/vision/2Wheeled_Motion/main.cpp:24:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/vision/2Wheeled_Motion/main.cpp:27:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/vision/2Wheeled_Motion/main.cpp:28:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/vision/2Wheeled_Motion/main.cpp:29:0: information: Include file: <selforg/semox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/semox.h>
^
simulations/vision/2Wheeled_Motion/main.cpp:30:0: information: Include file: <selforg/crossmotorcoupling.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/crossmotorcoupling.h>
^
simulations/vision/2Wheeled_Motion/main.cpp:31:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/vision/2Wheeled_Motion/main.cpp:32:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/vision/2Wheeled_Motion/main.cpp:33:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/vision/2Wheeled_Motion/main.cpp:36:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/vision/2Wheeled_Motion/main.cpp:39:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/vision/2Wheeled_Motion/main.cpp:43:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/vision/2Wheeled_Motion/main.cpp:44:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h> // arena
^
Checking simulations/vision/2Wheeled_OpticalFlow/main.cpp ...
simulations/vision/2Wheeled_Motion/main.cpp:47:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/vision/2Wheeled_Motion/main.cpp:48:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/vision/2Wheeled_Motion/main.cpp:50:0: information: Include file: <ode_robots/camera.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/camera.h>
^
simulations/vision/2Wheeled_Motion/main.cpp:51:0: information: Include file: <ode_robots/imageprocessors.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/imageprocessors.h>
^
simulations/vision/2Wheeled_Motion/main.cpp:52:0: information: Include file: <ode_robots/camerasensors.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/camerasensors.h>
^
simulations/vision/2Wheeled_Motion/main.cpp:54:0: information: Include file: <ode_robots/twowheeled.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twowheeled.h>
^
simulations/vision/2Wheeled_Motion/main.cpp:55:0: information: Include file: <ode_robots/fourwheeled.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/fourwheeled.h>
^
simulations/vision/2Wheeled_Motion/main.cpp:58:0: information: Include file: <osg/Light> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Light>
^
simulations/vision/2Wheeled_Motion/main.cpp:59:0: information: Include file: <osg/LightSource> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/LightSource>
^
simulations/vision/2Wheeled_OpticalFlow/main.cpp:42:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/vision/2Wheeled_OpticalFlow/main.cpp:45:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/vision/2Wheeled_OpticalFlow/main.cpp:46:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/vision/2Wheeled_OpticalFlow/main.cpp:47:0: information: Include file: <selforg/semox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/semox.h>
^
simulations/vision/2Wheeled_OpticalFlow/main.cpp:48:0: information: Include file: <selforg/crossmotorcoupling.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/crossmotorcoupling.h>
^
simulations/vision/2Wheeled_OpticalFlow/main.cpp:49:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/vision/2Wheeled_OpticalFlow/main.cpp:50:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/vision/2Wheeled_OpticalFlow/main.cpp:51:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/vision/2Wheeled_OpticalFlow/main.cpp:54:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/vision/2Wheeled_OpticalFlow/main.cpp:57:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/vision/2Wheeled_OpticalFlow/main.cpp:61:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/vision/2Wheeled_OpticalFlow/main.cpp:63:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/vision/2Wheeled_OpticalFlow/main.cpp:64:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/vision/2Wheeled_OpticalFlow/main.cpp:66:0: information: Include file: <ode_robots/camera.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/camera.h>
^
simulations/vision/2Wheeled_OpticalFlow/main.cpp:67:0: information: Include file: <ode_robots/imageprocessors.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/imageprocessors.h>
^
simulations/vision/2Wheeled_OpticalFlow/main.cpp:68:0: information: Include file: <ode_robots/camerasensors.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/camerasensors.h>
^
simulations/vision/2Wheeled_OpticalFlow/main.cpp:69:0: information: Include file: <ode_robots/opticalflow.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/opticalflow.h>
^
simulations/vision/2Wheeled_OpticalFlow/main.cpp:71:0: information: Include file: <ode_robots/twowheeled.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twowheeled.h>
^
simulations/vision/2Wheeled_OpticalFlow/main.cpp:74:0: information: Include file: <osg/Light> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Light>
^
simulations/vision/2Wheeled_OpticalFlow/main.cpp:75:0: information: Include file: <osg/LightSource> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/LightSource>
^
simulations/vision/2Wheeled_Motion/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/vierbeiner_old/vierbeiner.old.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
269/300 files checked 90% done
simulations/vision/2Wheeled_Motion/main.cpp:82:8: style: Condition 'useCorridor' is always true [knownConditionTrueFalse]
    if(useCorridor)
       ^
simulations/vision/2Wheeled_Motion/main.cpp:79:29: note: Assignment 'useCorridor=true', assigned value is 1
    bool useCorridor      = true;
                            ^
simulations/vision/2Wheeled_Motion/main.cpp:82:8: note: Condition 'useCorridor' is always true
    if(useCorridor)
       ^
simulations/vision/2Wheeled_Motion/main.cpp:92:8: style: Condition 'useSquareGround' is always false [knownConditionTrueFalse]
    if(useSquareGround){
       ^
simulations/vision/2Wheeled_Motion/main.cpp:78:29: note: Assignment 'useSquareGround=false', assigned value is 0
    bool useSquareGround  = false;
                            ^
simulations/vision/2Wheeled_Motion/main.cpp:92:8: note: Condition 'useSquareGround' is always false
    if(useSquareGround){
       ^
Checking simulations/vision/BallPlaying/main.cpp ...
simulations/vision/2Wheeled_Motion/main.cpp:99:14: style: Condition 'useCorridor' is always true [knownConditionTrueFalse]
    }else if(useCorridor){       // use circular Corridor
             ^
simulations/vision/2Wheeled_Motion/main.cpp:79:29: note: Assignment 'useCorridor=true', assigned value is 1
    bool useCorridor      = true;
                            ^
simulations/vision/2Wheeled_Motion/main.cpp:99:14: note: Condition 'useCorridor' is always true
    }else if(useCorridor){       // use circular Corridor
             ^
270/300 files checked 90% done
simulations/vision/BallPlaying/main.cpp:25:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/vision/BallPlaying/main.cpp:28:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/vision/BallPlaying/main.cpp:29:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/vision/BallPlaying/main.cpp:30:0: information: Include file: <selforg/crossmotorcoupling.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/crossmotorcoupling.h>
^
simulations/vision/BallPlaying/main.cpp:31:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/vision/BallPlaying/main.cpp:32:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/vision/BallPlaying/main.cpp:33:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/vision/BallPlaying/main.cpp:34:0: information: Include file: <selforg/selectivenoisewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectivenoisewiring.h>
^
simulations/vision/BallPlaying/main.cpp:35:0: information: Include file: <selforg/semox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/semox.h>
^
simulations/vision/BallPlaying/semoxhebmod.h:46:0: information: Include file: <selforg/homeokinbase.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/homeokinbase.h>
^
simulations/vision/BallPlaying/semoxhebmod.h:47:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
Checking simulations/vision/BallPlaying/semoxhebmod.cpp ...
simulations/vision/BallPlaying/semoxhebmod.h:48:0: information: Include file: <selforg/teachable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/teachable.h>
^
simulations/vision/BallPlaying/semoxhebmod.h:49:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/vision/BallPlaying/semoxhebmod.h:50:0: information: Include file: <selforg/randomgenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/randomgenerator.h>
^
simulations/vision/BallPlaying/main.cpp:40:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/vision/BallPlaying/main.cpp:43:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/vision/BallPlaying/main.cpp:47:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/vision/BallPlaying/main.cpp:48:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h> // arena
^
simulations/vision/BallPlaying/main.cpp:49:0: information: Include file: <ode_robots/complexplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/complexplayground.h>
^
simulations/vision/BallPlaying/main.cpp:52:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/vision/BallPlaying/main.cpp:53:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/vision/BallPlaying/main.cpp:55:0: information: Include file: <ode_robots/camera.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/camera.h>
^
simulations/vision/BallPlaying/main.cpp:56:0: information: Include file: <ode_robots/imageprocessors.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/imageprocessors.h>
^
simulations/vision/BallPlaying/main.cpp:57:0: information: Include file: <ode_robots/camerasensors.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/camerasensors.h>
^
simulations/vision/BallPlaying/main.cpp:59:0: information: Include file: <ode_robots/twowheeled.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twowheeled.h>
^
simulations/vision/BallPlaying/main.cpp:60:0: information: Include file: <ode_robots/fourwheeled.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/fourwheeled.h>
^
simulations/vision/BallPlaying/main.cpp:63:0: information: Include file: <osg/Light> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Light>
^
simulations/vision/BallPlaying/main.cpp:64:0: information: Include file: <osg/LightSource> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/LightSource>
^
simulations/vision/BallPlaying/semoxhebmod.cpp:47:0: information: Include file: <selforg/regularisation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/regularisation.h>
^
simulations/vierbeiner_old/vierbeiner.old.cpp:157:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
simulations/vierbeiner_old/vierbeiner.old.cpp:160:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
simulations/vierbeiner_old/vierbeiner.old.cpp:338:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                                ^
simulations/vierbeiner_old/vierbeiner.old.cpp:342:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                          ^
271/300 files checked 91% done
simulations/vision/BallPlaying/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/vision/BallPlaying/semoxhebmod.cpp:217:7: style: Boolean value assigned to floating point variable. [assignBoolToFloat]
  pain= xsi_norm > 5*xsi_norm_avg; // pain if large raise in error (arbitrary choice)
      ^
Checking simulations/vision/BallPlaying2/main.cpp ...
simulations/vision/BallPlaying/semoxhebmod.h:83:3: style: Class 'SeMoXHebMod' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SeMoXHebMod(const SeMoXHebModConf& conf = getDefaultConf());
  ^
simulations/vision/BallPlaying/semoxhebmod.cpp:285:21: style: Local variable 'xsi' shadows outer variable [shadowVariable]
      const Matrix& xsi = y_teaching - y;
                    ^
simulations/vision/BallPlaying/semoxhebmod.h:164:18: note: Shadowed declaration
  matrix::Matrix xsi; ///< current output error
                 ^
simulations/vision/BallPlaying/semoxhebmod.cpp:285:21: note: Shadow variable
      const Matrix& xsi = y_teaching - y;
                    ^
simulations/vision/BallPlaying2/main.cpp:24:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/vision/BallPlaying2/main.cpp:27:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/vision/BallPlaying2/main.cpp:28:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/vision/BallPlaying2/main.cpp:29:0: information: Include file: <selforg/crossmotorcoupling.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/crossmotorcoupling.h>
^
simulations/vision/BallPlaying2/main.cpp:30:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/vision/BallPlaying2/main.cpp:31:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/vision/BallPlaying2/main.cpp:32:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/vision/BallPlaying2/main.cpp:33:0: information: Include file: <selforg/selectivenoisewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectivenoisewiring.h>
^
simulations/vision/BallPlaying2/main.cpp:34:0: information: Include file: <selforg/semox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/semox.h>
^
simulations/vision/BallPlaying2/soxignorenull.h:22:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
simulations/vision/BallPlaying2/soxignorenull.h:23:0: information: Include file: <selforg/controller_misc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/controller_misc.h>
^
simulations/vision/BallPlaying2/soxignorenull.h:25:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/vision/BallPlaying2/soxignorenull.h:26:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
simulations/vision/BallPlaying2/soxignorenull.h:28:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/vision/BallPlaying2/soxignorenull.h:29:0: information: Include file: <selforg/teachable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/teachable.h>
^
simulations/vision/BallPlaying2/main.cpp:39:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/vision/BallPlaying2/main.cpp:42:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/vision/BallPlaying2/main.cpp:46:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/vision/BallPlaying2/main.cpp:47:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h> // arena
^
simulations/vision/BallPlaying2/main.cpp:48:0: information: Include file: <ode_robots/complexplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/complexplayground.h>
^
simulations/vision/BallPlaying2/main.cpp:51:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/vision/BallPlaying2/main.cpp:52:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/vision/BallPlaying2/main.cpp:54:0: information: Include file: <ode_robots/camera.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/camera.h>
^
simulations/vision/BallPlaying2/main.cpp:55:0: information: Include file: <ode_robots/imageprocessors.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/imageprocessors.h>
^
simulations/vision/BallPlaying2/main.cpp:56:0: information: Include file: <ode_robots/camerasensors.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/camerasensors.h>
^
simulations/vision/BallPlaying2/main.cpp:58:0: information: Include file: <ode_robots/fourwheeled.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/fourwheeled.h>
^
simulations/vision/BallPlaying2/main.cpp:60:0: information: Include file: <ode_robots/operators.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/operators.h>
^
simulations/vision/BallPlaying2/main.cpp:62:0: information: Include file: <osg/Light> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Light>
^
simulations/vision/BallPlaying2/main.cpp:63:0: information: Include file: <osg/LightSource> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/LightSource>
^
272/300 files checked 91% done
simulations/vision/BallPlaying2/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/vision/BallPlaying2/semoxignorenull.cpp ...
simulations/vision/BallPlaying2/semoxignorenull.h:49:0: information: Include file: <selforg/homeokinbase.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/homeokinbase.h>
^
simulations/vision/BallPlaying2/semoxignorenull.h:50:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
simulations/vision/BallPlaying2/semoxignorenull.h:51:0: information: Include file: <selforg/teachable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/teachable.h>
^
simulations/vision/BallPlaying2/semoxignorenull.h:52:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/vision/BallPlaying2/semoxignorenull.h:53:0: information: Include file: <selforg/randomgenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/randomgenerator.h>
^
simulations/vision/BallPlaying2/semoxignorenull.cpp:50:0: information: Include file: <selforg/regularisation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/regularisation.h>
^
simulations/vision/BallPlaying2/semoxignorenull.cpp:219:7: style: Boolean value assigned to floating point variable. [assignBoolToFloat]
  pain= xsi_norm > 5*xsi_norm_avg; // pain if large raise in error (arbitrary choice)
      ^
simulations/vision/BallPlaying2/semoxignorenull.h:86:3: style: Class 'SeMoXIgnoreNull' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SeMoXIgnoreNull(const SeMoXIgnoreNullConf& conf = getDefaultConf());
  ^
simulations/vision/BallPlaying2/semoxignorenull.cpp:287:21: style: Local variable 'xsi' shadows outer variable [shadowVariable]
      const Matrix& xsi = y_teaching - y;
                    ^
simulations/vision/BallPlaying2/semoxignorenull.h:164:18: note: Shadowed declaration
  matrix::Matrix xsi; ///< current output error
                 ^
simulations/vision/BallPlaying2/semoxignorenull.cpp:287:21: note: Shadow variable
      const Matrix& xsi = y_teaching - y;
                    ^
simulations/vision/BallPlaying/main.cpp:84:3: warning: Member variable 'ThisSim::controller' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(Version v, double teaching, double sizefactor)
  ^
273/300 files checked 91% done
simulations/vision/BallPlaying/main.cpp:546:36: style: C-style pointer casting [cstyleCast]
    int pos = Simulation::contains((char**)VersionStrings, VMax , argv[index]);
                                   ^
Checking simulations/vision/BallPlaying2/soxignorenull.cpp ...
simulations/vision/BallPlaying/main.cpp:103:12: style: The scope of the variable 'radiusRound' can be reduced. [variableScope]
    double radiusRound    = 8;
           ^
simulations/vision/BallPlaying/main.cpp:413:27: style: Local variable 'controller' shadows outer variable [shadowVariable]
      CrossMotorCoupling* controller = new CrossMotorCoupling(semox, semox, 0.0);
                          ^
simulations/vision/BallPlaying/main.cpp:90:23: note: Shadowed declaration
  AbstractController* controller;
                      ^
simulations/vision/BallPlaying/main.cpp:413:27: note: Shadow variable
      CrossMotorCoupling* controller = new CrossMotorCoupling(semox, semox, 0.0);
                          ^
simulations/vision/BallPlaying/main.cpp:387:14: style: Variable 'noise' can be declared as const array [constVariable]
      double noise[] = {1,1};
             ^
274/300 files checked 92% done
simulations/vision/BallPlaying2/soxignorenull.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/wheelie/main.cpp ...
simulations/wheelie/main.cpp:86:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/wheelie/main.cpp:88:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/wheelie/main.cpp:89:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/wheelie/main.cpp:90:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/wheelie/main.cpp:92:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/wheelie/main.cpp:93:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/wheelie/main.cpp:94:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/wheelie/main.cpp:95:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/wheelie/main.cpp:96:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/wheelie/main.cpp:98:0: information: Include file: <ode_robots/sliderwheelie.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sliderwheelie.h>
^
simulations/swing/swing.cpp:50:10: warning: Member variable 'Swing::pelvisservo' is not initialized in the constructor. [uninitMemberVar]
  Swing::Swing(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
         ^
simulations/swing/swing.cpp:50:10: warning: Member variable 'Swing::environmentdummy' is not initialized in the constructor. [uninitMemberVar]
  Swing::Swing(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
         ^
simulations/swing/swing.cpp:50:10: warning: Member variable 'Swing::fixating' is not initialized in the constructor. [uninitMemberVar]
  Swing::Swing(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
         ^
simulations/swing/swing.cpp:50:10: warning: Member variable 'Swing::t' is not initialized in the constructor. [uninitMemberVar]
  Swing::Swing(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
         ^
simulations/swing/swing.cpp:1177:13: warning: Either the condition 'o' is redundant or there is possible null pointer dereference: o. [nullPointerRedundantCheck]
    else if(o->getBody())
            ^
simulations/swing/swing.cpp:1175:9: note: Assuming that condition 'o' is not redundant
    if (o && o->getGeom())
        ^
simulations/swing/swing.cpp:1172:33: note: Assignment to 'o=objects[Head_comp]'
    const Primitive* o = objects[Head_comp];
                                ^
simulations/swing/swing.cpp:1172:24: note: o is assigned 'objects[Head_comp]' here.
    const Primitive* o = objects[Head_comp];
                       ^
simulations/swing/swing.cpp:1177:13: note: Null pointer dereference
    else if(o->getBody())
            ^
simulations/swing/swing.cpp:1188:13: warning: Either the condition 'o' is redundant or there is possible null pointer dereference: o. [nullPointerRedundantCheck]
    else if(o->getBody())
            ^
simulations/swing/swing.cpp:1186:9: note: Assuming that condition 'o' is not redundant
    if (o && o->getGeom())
        ^
simulations/swing/swing.cpp:1183:33: note: Assignment to 'o=objects[Trunk_comp]'
    const Primitive* o = objects[Trunk_comp];
                                ^
simulations/swing/swing.cpp:1183:24: note: o is assigned 'objects[Trunk_comp]' here.
    const Primitive* o = objects[Trunk_comp];
                       ^
simulations/swing/swing.cpp:1188:13: note: Null pointer dereference
    else if(o->getBody())
            ^
simulations/swing/swing.cpp:1163:51: style: Same expression in both branches of ternary operator. [duplicateExpressionTernary]
        (*i)->setMinMax(fst? -conf.backJointLimit : -conf.backJointLimit,
                                                  ^
simulations/swing/swing.cpp:450:17: style: The scope of the variable 'bj' can be reduced. [variableScope]
    BallJoint*  bj;
                ^
simulations/swing/swing.cpp:536:16: style: Local variable 't' shadows outer variable [shadowVariable]
    Transform* t = new Transform(objects[Neck], objects[Head_comp],
               ^
simulations/swing/swing.h:351:14: note: Shadowed declaration
    long int t;
             ^
simulations/swing/swing.cpp:536:16: note: Shadow variable
    Transform* t = new Transform(objects[Neck], objects[Head_comp],
               ^
simulations/vision/BallPlaying2/soxignorenull.h:56:3: style: Class 'SoxIgnoreNull' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SoxIgnoreNull(const SoxIgnoreNullConf& conf = getDefaultConf());
  ^
simulations/vision/BallPlaying2/soxignorenull.h:59:3: style: Class 'SoxIgnoreNull' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SoxIgnoreNull(double init_feedback_strength, bool useExtendedModel = true,
  ^
simulations/wheelie/main.cpp:149:8: style: Condition 'useSliderWheelie' is always true [knownConditionTrueFalse]
    if(useSliderWheelie){
       ^
simulations/wheelie/main.cpp:120:29: note: Assignment 'useSliderWheelie=true', assigned value is 1
    bool useSliderWheelie = true;
                            ^
simulations/wheelie/main.cpp:149:8: note: Condition 'useSliderWheelie' is always true
    if(useSliderWheelie){
       ^
simulations/wheelie/main.cpp:160:8: style: C-style pointer casting [cstyleCast]
      ((OdeRobot*) robot)->place(Pos(-5,-3,3.0));
       ^
simulations/wheelie/main.cpp:146:15: style: The scope of the variable 'agent' can be reduced. [variableScope]
    OdeAgent *agent;
              ^
simulations/wheelie/main.cpp:147:21: style: The scope of the variable 'wiring' can be reduced. [variableScope]
    AbstractWiring *wiring;
                    ^
275/300 files checked 92% done
simulations/vision/BallPlaying2/soxignorenull.cpp:266:17: style: Local variable 'x' shadows outer variable [shadowVariable]
  const Matrix& x       = x_buffer[(t - max(s4delay,1) + buffersize) % buffersize];
                ^
simulations/vision/BallPlaying2/soxignorenull.h:134:18: note: Shadowed declaration
  matrix::Matrix x;        // current sensor value vector
                 ^
simulations/vision/BallPlaying2/soxignorenull.cpp:266:17: note: Shadow variable
  const Matrix& x       = x_buffer[(t - max(s4delay,1) + buffersize) % buffersize];
                ^
simulations/vision/BallPlaying2/soxignorenull.cpp:320:21: style: Local variable 'y' shadows outer variable [shadowVariable]
      const Matrix& y      = getLastMotorValues();
                    ^
simulations/vision/BallPlaying2/soxignorenull.cpp:275:17: note: Shadowed declaration
  const Matrix& y       = z.map(g);
                ^
simulations/vision/BallPlaying2/soxignorenull.cpp:320:21: note: Shadow variable
      const Matrix& y      = getLastMotorValues();
                    ^
Checking simulations/wheelieDEP/main.cpp ...
simulations/vision/BallPlaying2/soxignorenull.cpp:100:24: style: Variable 'randGen' is assigned a value that is never used. [unreadVariable]
  if(!randGen) randGen = new RandGen(); // this gives a small memory leak
                       ^
276/300 files checked 92% done
simulations/wheelieDEP/main.cpp:86:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/wheelieDEP/main.cpp:88:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/wheelieDEP/main.cpp:89:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/wheelieDEP/main.cpp:90:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/wheelieDEP/main.cpp:91:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/wheelieDEP/main.cpp:93:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/wheelieDEP/main.cpp:94:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/wheelieDEP/main.cpp:95:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
Checking simulations/zoo/main.cpp ...
simulations/wheelieDEP/main.cpp:96:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/wheelieDEP/main.cpp:97:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/wheelieDEP/main.cpp:98:0: information: Include file: <selforg/dep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/dep.h>
^
simulations/wheelieDEP/main.cpp:100:0: information: Include file: <ode_robots/sliderwheelie.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sliderwheelie.h>
^
simulations/zoo/main.cpp:24:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/zoo/main.cpp:26:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/zoo/main.cpp:29:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/zoo/main.cpp:30:0: information: Include file: <selforg/selectiveone2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/selectiveone2onewiring.h>
^
simulations/zoo/main.cpp:31:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/zoo/main.cpp:32:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/zoo/main.cpp:33:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/zoo/main.cpp:34:0: information: Include file: <selforg/onecontrollerperchannel.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/onecontrollerperchannel.h>
^
simulations/zoo/main.cpp:35:0: information: Include file: <selforg/forceboostwiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/forceboostwiring.h>
^
simulations/zoo/main.cpp:37:0: information: Include file: <selforg/sos.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sos.h>
^
simulations/zoo/main.cpp:38:0: information: Include file: <selforg/sox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sox.h>
^
simulations/zoo/main.cpp:39:0: information: Include file: <selforg/soml.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/soml.h>
^
simulations/zoo/main.cpp:41:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/zoo/main.cpp:43:0: information: Include file: <ode_robots/schlangeservo2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo2.h>
^
simulations/zoo/main.cpp:44:0: information: Include file: <ode_robots/caterpillar.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/caterpillar.h>
^
simulations/zoo/main.cpp:45:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/zoo/main.cpp:46:0: information: Include file: <ode_robots/sphererobot3masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sphererobot3masses.h>
^
simulations/zoo/main.cpp:47:0: information: Include file: <ode_robots/sliderwheelie.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sliderwheelie.h>
^
simulations/zoo/main.cpp:48:0: information: Include file: <ode_robots/hexapod.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/hexapod.h>
^
simulations/zoo/main.cpp:49:0: information: Include file: <ode_robots/skeleton.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/skeleton.h>
^
simulations/zoo/environment.h:27:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/zoo/environment.h:28:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/zoo/environment.h:30:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/zoo/environment.h:31:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/zoo/environment.h:32:0: information: Include file: <ode_robots/passivecapsule.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivecapsule.h>
^
simulations/zoo/environment.h:33:0: information: Include file: <ode_robots/seesaw.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/seesaw.h>
^
simulations/zoo/main.cpp:52:0: information: Include file: <ode_robots/operators.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/operators.h>
^
simulations/wheelieDEP/main.cpp:116:3: warning: Member variable 'ThisSim::controller' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(){
  ^
simulations/wheelieDEP/main.cpp:116:3: warning: Member variable 'ThisSim::robot' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(){
  ^
simulations/wheelieDEP/main.cpp:116:3: warning: Member variable 'ThisSim::useReinforcement' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(){
  ^
simulations/wheelieDEP/main.cpp:116:3: warning: Member variable 'ThisSim::totalReinforcement' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(){
  ^
simulations/wheelieDEP/main.cpp:167:8: style: Condition 'useSliderWheelie' is always true [knownConditionTrueFalse]
    if(useSliderWheelie){
       ^
simulations/wheelieDEP/main.cpp:128:29: note: Assignment 'useSliderWheelie=true', assigned value is 1
    bool useSliderWheelie = true;
                            ^
simulations/wheelieDEP/main.cpp:167:8: note: Condition 'useSliderWheelie' is always true
    if(useSliderWheelie){
       ^
simulations/wheelieDEP/main.cpp:178:8: style: C-style pointer casting [cstyleCast]
      ((OdeRobot*) robot)->place(Pos(-5,-3,2.0));
       ^
simulations/wheelieDEP/main.cpp:164:15: style: The scope of the variable 'agent' can be reduced. [variableScope]
    OdeAgent *agent;
              ^
simulations/wheelieDEP/main.cpp:165:21: style: The scope of the variable 'wiring' can be reduced. [variableScope]
    AbstractWiring *wiring;
                    ^
277/300 files checked 93% done
simulations/zoo/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking simulations/zoo2006/main.cpp ...
simulations/zoo2006/main.cpp:55:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/zoo2006/main.cpp:57:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/zoo2006/main.cpp:58:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/zoo2006/main.cpp:59:0: information: Include file: <ode_robots/terrainground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/terrainground.h>
^
simulations/zoo2006/main.cpp:61:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/zoo2006/main.cpp:62:0: information: Include file: <ode_robots/passivebox.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivebox.h>
^
simulations/zoo2006/main.cpp:63:0: information: Include file: <ode_robots/passivecapsule.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivecapsule.h>
^
simulations/zoo2006/main.cpp:65:0: information: Include file: <selforg/invertnchannelcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertnchannelcontroller.h>
^
simulations/zoo2006/main.cpp:66:0: information: Include file: <selforg/dercontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/dercontroller.h>
^
simulations/zoo2006/main.cpp:67:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/zoo2006/main.cpp:68:0: information: Include file: <selforg/invertmotorspace.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorspace.h>
^
simulations/zoo2006/main.cpp:69:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/zoo2006/main.cpp:70:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/zoo2006/main.cpp:71:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/zoo2006/main.cpp:72:0: information: Include file: <selforg/derivativewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derivativewiring.h>
^
simulations/zoo2006/main.cpp:74:0: information: Include file: <osg/Light> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Light>
^
simulations/zoo2006/main.cpp:75:0: information: Include file: <osg/LightSource> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/LightSource>
^
simulations/zoo2006/main.cpp:78:0: information: Include file: <ode_robots/hurlingsnake.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/hurlingsnake.h>
^
simulations/zoo2006/main.cpp:79:0: information: Include file: <ode_robots/schlangeservo2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/schlangeservo2.h>
^
simulations/zoo2006/main.cpp:80:0: information: Include file: <ode_robots/caterpillar.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/caterpillar.h>
^
simulations/zoo2006/main.cpp:81:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/zoo2006/main.cpp:82:0: information: Include file: <ode_robots/nimm4.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm4.h>
^
simulations/zoo2006/main.cpp:83:0: information: Include file: <ode_robots/sphererobot3masses.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sphererobot3masses.h>
^
simulations/zoo2006/main.cpp:84:0: information: Include file: <ode_robots/plattfussschlange.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/plattfussschlange.h>
^
simulations/zoo2006/main.cpp:85:0: information: Include file: <ode_robots/axisorientationsensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/axisorientationsensor.h>
^
simulations/zoo2006/main.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/swing/swing.cpp:378:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
simulations/swing/swing.cpp:381:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
278/300 files checked 94% done
Checking simulations/zweibeiner/main.cpp ...
simulations/zoo/environment.h:43:3: warning: Member variable 'Env::pitsize' is not initialized in the constructor. [uninitMemberVar]
  Env(){
  ^
simulations/zoo/environment.h:43:3: warning: Member variable 'Env::pitheight' is not initialized in the constructor. [uninitMemberVar]
  Env(){
  ^
simulations/zoo/main.cpp:96:3: warning: Member variable 'ThisSim::lastRobotCreation' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(){
  ^
simulations/zoo/main.cpp:96:3: warning: Member variable 'ThisSim::useMultilayer' is not initialized in the constructor. [uninitMemberVar]
  ThisSim(){
  ^
simulations/zoo/main.cpp:59:3: style: Struct 'ControlGen' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ControlGen(double eps)
  ^
simulations/zoo/main.cpp:76:5: style: Struct 'agent_match_prefix' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    agent_match_prefix(string nameprefix)
    ^
simulations/zoo/environment.h:164:15: style: The if condition is the same as the previous if condition [duplicateCondition]
          if(i==0) this->playground=playground;
              ^
simulations/zoo/environment.h:161:15: note: First condition
          if(i==0){ // set ground also to the soft substance
              ^
simulations/zoo/environment.h:164:15: note: Second condition
          if(i==0) this->playground=playground;
              ^
simulations/zoo/main.cpp:135:20: style: Condition 'r<numHexapods' is always false [knownConditionTrueFalse]
    for(int r=0; r < numHexapods ; r++) {
                   ^
simulations/zoo/main.cpp:135:15: note: Assignment 'r=0', assigned value is 0
    for(int r=0; r < numHexapods ; r++) {
              ^
simulations/zoo/main.cpp:107:28: note: Assignment 'numHexapods=0', assigned value is 0
    int numHexapods      = 0;
                           ^
simulations/zoo/main.cpp:135:20: note: Condition 'r<numHexapods' is always false
    for(int r=0; r < numHexapods ; r++) {
                   ^
simulations/zoo/main.cpp:138:20: style: Condition 'r<numSphericals' is always false [knownConditionTrueFalse]
    for(int r=0; r < numSphericals; r++) {
                   ^
simulations/zoo/main.cpp:138:15: note: Assignment 'r=0', assigned value is 0
    for(int r=0; r < numSphericals; r++) {
              ^
simulations/zoo/main.cpp:108:28: note: Assignment 'numSphericals=0', assigned value is 0
    int numSphericals    = 0;
                           ^
simulations/zoo/main.cpp:138:20: note: Condition 'r<numSphericals' is always false
    for(int r=0; r < numSphericals; r++) {
                   ^
simulations/zoo/main.cpp:141:20: style: Condition 'r<numSnakes' is always false [knownConditionTrueFalse]
    for(int r=0; r < numSnakes; r++) {
                   ^
simulations/zoo/main.cpp:141:15: note: Assignment 'r=0', assigned value is 0
    for(int r=0; r < numSnakes; r++) {
              ^
simulations/zoo/main.cpp:109:28: note: Assignment 'numSnakes=0', assigned value is 0
    int numSnakes        = 0;
                           ^
simulations/zoo/main.cpp:141:20: note: Condition 'r<numSnakes' is always false
    for(int r=0; r < numSnakes; r++) {
                   ^
simulations/zoo/main.cpp:380:28: style: C-style pointer casting [cstyleCast]
    agent->addInspectable(((OneControllerPerChannel*)controller)->getControllers()[0]);
                           ^
simulations/zweibeiner/main.cpp:77:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
simulations/zweibeiner/main.cpp:80:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/zweibeiner/main.cpp:83:0: information: Include file: <selforg/noisegenerator.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/noisegenerator.h>
^
simulations/zweibeiner/main.cpp:86:0: information: Include file: <ode_robots/simulation.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/simulation.h>
^
simulations/zweibeiner/main.cpp:89:0: information: Include file: <ode_robots/odeagent.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/odeagent.h>
^
simulations/zweibeiner/main.cpp:92:0: information: Include file: <selforg/one2onewiring.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/one2onewiring.h>
^
simulations/zweibeiner/skeleton.h:45:0: information: Include file: <ode_robots/oderobot.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oderobot.h>
^
simulations/zweibeiner/main.cpp:98:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/zweibeiner/main.cpp:100:0: information: Include file: <ode_robots/passivesphere.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivesphere.h>
^
simulations/zweibeiner/main.cpp:101:0: information: Include file: <ode_robots/passivemesh.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/passivemesh.h>
^
simulations/zweibeiner/main.cpp:102:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/zweibeiner/main.cpp:106:0: information: Include file: <selforg/derbigcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/derbigcontroller.h>
^
simulations/zweibeiner/main.cpp:107:0: information: Include file: <selforg/dercontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/dercontroller.h>
^
simulations/zweibeiner/main.cpp:108:0: information: Include file: <selforg/invertmotorbigmodel.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotorbigmodel.h>
^
simulations/zweibeiner/main.cpp:109:0: information: Include file: <selforg/multilayerffnn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/multilayerffnn.h>
^
simulations/zweibeiner/main.cpp:110:0: information: Include file: <selforg/invertmotornstep.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/invertmotornstep.h>
^
simulations/zweibeiner/main.cpp:111:0: information: Include file: <selforg/sinecontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/sinecontroller.h>
^
simulations/zoo/main.cpp:362:44: style: Variable 'mySliderWheelieConf.segmLength' is reassigned a value before the old one has been used. [redundantAssignment]
    mySliderWheelieConf.segmLength         = .6;
                                           ^
simulations/zoo/main.cpp:360:44: note: mySliderWheelieConf.segmLength is assigned
    mySliderWheelieConf.segmLength         = .4;
                                           ^
simulations/zoo/main.cpp:362:44: note: mySliderWheelieConf.segmLength is overwritten
    mySliderWheelieConf.segmLength         = .6;
                                           ^
simulations/zweibeiner/main.cpp:114:0: information: Include file: <ode_robots/playground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/playground.h>
^
simulations/zoo/main.cpp:363:44: style: Variable 'mySliderWheelieConf.segmDia' is reassigned a value before the old one has been used. [redundantAssignment]
    mySliderWheelieConf.segmDia            = .2; // thickness and width(*8) of segments
                                           ^
simulations/zoo/main.cpp:361:44: note: mySliderWheelieConf.segmDia is assigned
    mySliderWheelieConf.segmDia            = .1; // thickness and width(*8) of segments
                                           ^
simulations/zoo/main.cpp:363:44: note: mySliderWheelieConf.segmDia is overwritten
    mySliderWheelieConf.segmDia            = .2; // thickness and width(*8) of segments
                                           ^
simulations/zweibeiner/main.cpp:115:0: information: Include file: <ode_robots/terrainground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/terrainground.h>
^
simulations/zweibeiner/main.cpp:116:0: information: Include file: <ode_robots/octaplayground.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/octaplayground.h>
^
simulations/zweibeiner/main.cpp:117:0: information: Include file: <ode_robots/sliderwheelie.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/sliderwheelie.h>
^
simulations/zweibeiner/main.cpp:118:0: information: Include file: <ode_robots/nimm2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/nimm2.h>
^
simulations/zoo/environment.h:126:23: style: Local variable 'playground' shadows outer variable [shadowVariable]
          Playground* playground = new Playground(myHandle, osgHandle,
                      ^
simulations/zoo/environment.h:56:19: note: Shadowed declaration
  AbstractGround* playground;
                  ^
simulations/zoo/environment.h:126:23: note: Shadow variable
          Playground* playground = new Playground(myHandle, osgHandle,
                      ^
simulations/zoo/environment.h:156:23: style: Local variable 'playground' shadows outer variable [shadowVariable]
          Playground* playground = new Playground(myHandle, osgHandle,
                      ^
simulations/zoo/environment.h:56:19: note: Shadowed declaration
  AbstractGround* playground;
                  ^
simulations/zoo/environment.h:156:23: note: Shadow variable
          Playground* playground = new Playground(myHandle, osgHandle,
                      ^
simulations/zoo/main.cpp:76:31: performance: Function parameter 'nameprefix' should be passed by const reference. [passedByValue]
    agent_match_prefix(string nameprefix)
                              ^
279/300 files checked 94% done
Checking simulations/zweibeiner/skeleton.cpp ...
simulations/zweibeiner/main.cpp:161:112: style: Same expression on both sides of '-'. [duplicateExpression]
      playground = new Playground(odeHandle, osgHandle, osg::Vec3(100.0+4*i, .2, 1.0+0.15*i), 1, i==(anzgrounds-1));
                                                                                                               ^
simulations/zweibeiner/main.cpp:159:20: note: 'anzgrounds' is assigned value '1' here.
    int anzgrounds=1;
                   ^
simulations/zweibeiner/main.cpp:161:112: note: Same expression on both sides of '-'.
      playground = new Playground(odeHandle, osgHandle, osg::Vec3(100.0+4*i, .2, 1.0+0.15*i), 1, i==(anzgrounds-1));
                                                                                                               ^
simulations/zweibeiner/skeleton.h:133:24: style: Variable 'c.hip2JointLimit' is reassigned a value before the old one has been used. [redundantAssignment]
      c.hip2JointLimit = M_PI/30; // +- 6 degree
                       ^
simulations/zweibeiner/skeleton.h:113:23: note: c.hip2JointLimit is assigned
      c.hip2JointLimit=0.05;
                      ^
simulations/zweibeiner/skeleton.h:133:24: note: c.hip2JointLimit is overwritten
      c.hip2JointLimit = M_PI/30; // +- 6 degree
                       ^
280/300 files checked 95% done
simulations/zweibeiner/skeleton.cpp:50:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/zweibeiner/skeleton.cpp:51:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/zweibeiner/skeleton.cpp:54:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
Checking simulations/zweibeiner/zweibeiner.cpp ...
simulations/zweibeiner/skeleton.cpp:57:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/zweibeiner/skeleton.cpp:58:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/zweibeiner/skeleton.cpp:59:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
simulations/zoo2006/main.cpp:254:12: warning: Opposite inner 'if' condition leads to a dead code block. [oppositeInnerCondition]
      if (r==1) c=Color(0,   0.8, 0);
           ^
simulations/zoo2006/main.cpp:250:20: note: outer condition: r<numHurling
    for(int r=0; r < numHurling; r++) {
                   ^
simulations/zoo2006/main.cpp:254:12: note: opposite inner condition: r==1
      if (r==1) c=Color(0,   0.8, 0);
           ^
simulations/zoo2006/main.cpp:200:19: style: Condition 'r<numSnakeLong' is always false [knownConditionTrueFalse]
    for(int r=0; r<numSnakeLong;  r++){
                  ^
simulations/zoo2006/main.cpp:200:15: note: Assignment 'r=0', assigned value is 0
    for(int r=0; r<numSnakeLong;  r++){
              ^
simulations/zoo2006/main.cpp:107:22: note: Assignment 'numSnakeLong=0', assigned value is 0
    int numSnakeLong=0;
                     ^
simulations/zoo2006/main.cpp:200:19: note: Condition 'r<numSnakeLong' is always false
    for(int r=0; r<numSnakeLong;  r++){
                  ^
simulations/zweibeiner/zweibeiner.cpp:50:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
simulations/zweibeiner/zweibeiner.cpp:51:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
simulations/zweibeiner/zweibeiner.cpp:54:0: information: Include file: <ode_robots/primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/primitive.h>
^
simulations/zweibeiner/zweibeiner.cpp:57:0: information: Include file: <ode_robots/joint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/joint.h>
^
simulations/zweibeiner/zweibeiner.cpp:58:0: information: Include file: <ode_robots/oneaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/oneaxisservo.h>
^
simulations/zweibeiner/zweibeiner.cpp:59:0: information: Include file: <ode_robots/twoaxisservo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/twoaxisservo.h>
^
simulations/zoo2006/main.cpp:206:8: style: C-style pointer casting [cstyleCast]
      ((OdeRobot*) snake)->place(Pos(4,4+3*r,height));
       ^
simulations/zoo2006/main.cpp:256:8: style: C-style pointer casting [cstyleCast]
      ((OdeRobot*) snake)->place(Pos(r*5-4,-6, height+0.2));
       ^
simulations/zoo2006/main.cpp:286:8: style: C-style pointer casting [cstyleCast]
      ((OdeRobot*)sphere1)->place ( Pos( -2.5*r , 0 , height+0.05));
       ^
simulations/zoo2006/main.cpp:171:15: style: The scope of the variable 'robot' can be reduced. [variableScope]
    OdeRobot* robot;
              ^
simulations/zoo2006/main.cpp:331:27: style: Local variable 'controller' shadows outer variable [shadowVariable]
      AbstractController *controller = new DerController(cc);
                          ^
simulations/zoo2006/main.cpp:172:25: note: Shadowed declaration
    AbstractController *controller;
                        ^
simulations/zoo2006/main.cpp:331:27: note: Shadow variable
      AbstractController *controller = new DerController(cc);
                          ^
simulations/zoo2006/main.cpp:335:25: style: Local variable 'wiring' shadows outer variable [shadowVariable]
      DerivativeWiring* wiring = new DerivativeWiring ( c , new ColorUniformNoise(0.1) );
                        ^
simulations/zoo2006/main.cpp:170:21: note: Shadowed declaration
    AbstractWiring* wiring;
                    ^
simulations/zoo2006/main.cpp:335:25: note: Shadow variable
      DerivativeWiring* wiring = new DerivativeWiring ( c , new ColorUniformNoise(0.1) );
                        ^
simulations/zoo2006/main.cpp:337:17: style: Local variable 'agent' shadows outer variable [shadowVariable]
      OdeAgent* agent = new OdeAgent();
                ^
simulations/zoo2006/main.cpp:169:15: note: Shadowed declaration
    OdeAgent* agent;
              ^
simulations/zoo2006/main.cpp:337:17: note: Shadow variable
      OdeAgent* agent = new OdeAgent();
                ^
simulations/zoo2006/main.cpp:406:27: style: Local variable 'controller' shadows outer variable [shadowVariable]
      AbstractController *controller = new DerController(cc);
                          ^
simulations/zoo2006/main.cpp:172:25: note: Shadowed declaration
    AbstractController *controller;
                        ^
simulations/zoo2006/main.cpp:406:27: note: Shadow variable
      AbstractController *controller = new DerController(cc);
                          ^
simulations/zoo2006/main.cpp:413:25: style: Local variable 'wiring' shadows outer variable [shadowVariable]
      DerivativeWiring* wiring = new DerivativeWiring ( c , new ColorUniformNoise() );
                        ^
simulations/zoo2006/main.cpp:170:21: note: Shadowed declaration
    AbstractWiring* wiring;
                    ^
simulations/zoo2006/main.cpp:413:25: note: Shadow variable
      DerivativeWiring* wiring = new DerivativeWiring ( c , new ColorUniformNoise() );
                        ^
simulations/zoo2006/main.cpp:415:17: style: Local variable 'agent' shadows outer variable [shadowVariable]
      OdeAgent* agent = new OdeAgent();
                ^
simulations/zoo2006/main.cpp:169:15: note: Shadowed declaration
    OdeAgent* agent;
              ^
simulations/zoo2006/main.cpp:415:17: note: Shadow variable
      OdeAgent* agent = new OdeAgent();
                ^
281/300 files checked 95% done
simulations/zweibeiner/skeleton.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking textures/calcheightmaps/calcheightmaps.cpp ...
textures/calcheightmaps/calcheightmaps.cpp:24:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
282/300 files checked 95% done
Checking utils/camerahandle.cpp ...
simulations/zweibeiner/skeleton.cpp:71:13: warning: Member variable 'Skeleton::pelvisservo' is not initialized in the constructor. [uninitMemberVar]
  Skeleton::Skeleton(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
            ^
utils/camerahandle.h:28:0: information: Include file: <selforg/position.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/position.h>
^
utils/camerahandle.h:29:0: information: Include file: <osg/Vec3f> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Vec3f>
^
283/300 files checked 95% done
Checking utils/colorschema.cpp ...
utils/color.h:27:0: information: Include file: <osg/Vec4> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Vec4>
^
utils/color.h:28:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
utils/colorschema.h:28:0: information: Include file: <selforg/stl_map.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_map.h>
^
utils/colorschema.h:29:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
utils/colorschema.h:30:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
utils/colorschema.h:31:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
utils/colorschema.cpp:26:0: information: Include file: <osgDB/FileUtils> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgDB/FileUtils>
^
utils/colorschema.cpp:27:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
utils/colorschema.cpp:28:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
utils/colorschema.cpp:29:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
utils/colorschema.cpp:30:0: information: Include file: <iomanip> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iomanip>
^
utils/colorschema.cpp:33:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
simulations/zweibeiner/skeleton.cpp:220:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
simulations/zweibeiner/skeleton.cpp:223:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
simulations/zweibeiner/skeleton.cpp:537:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                          ^
simulations/zweibeiner/skeleton.cpp:542:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                                ^
284/300 files checked 96% done
utils/colorschema.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking utils/console.cpp ...
utils/console.cpp:26:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
utils/console.cpp:27:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
utils/console.cpp:28:0: information: Include file: <sys/ioctl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sys/ioctl.h>
^
utils/console.cpp:29:0: information: Include file: <readline/readline.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <readline/readline.h>
^
utils/console.cpp:30:0: information: Include file: <readline/history.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <readline/history.h>
^
utils/console.cpp:37:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
utils/console.cpp:38:0: information: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sstream>
^
utils/console.cpp:39:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
utils/console.cpp:40:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
utils/console.cpp:41:0: information: Include file: <selforg/abstractcontroller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/abstractcontroller.h>
^
utils/globaldata.h:27:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
utils/globaldata.h:28:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
utils/odehandle.h:27:0: information: Include file: <selforg/stl_map.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_map.h>
^
utils/odehandle.h:29:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
utils/odehandle.h:30:0: information: Include file: <ode-dbl/common.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/common.h>
^
utils/pos.h:27:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
utils/pos.h:29:0: information: Include file: <osg/Vec3> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Vec3>
^
utils/pos.h:30:0: information: Include file: <osg/Vec4> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Vec4>
^
utils/pos.h:31:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
utils/pos.h:32:0: information: Include file: <selforg/position.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/position.h>
^
utils/pose.h:27:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
utils/globaldata.h:33:0: information: Include file: <selforg/plotoption.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/plotoption.h>
^
utils/globaldata.h:34:0: information: Include file: <selforg/globaldatabase.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/globaldatabase.h>
^
utils/globaldata.h:35:0: information: Include file: <selforg/backcallervector.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/backcallervector.h>
^
utils/console.cpp:486:7: error: There is an unknown macro here somewhere. Configuration is required. If FOREACHC is a macro then please configure it. [unknownMacro]
      FOREACHC(vector<string>, params, p) printf("%s, ", p->c_str());
      ^
285/300 files checked 97% done
Checking utils/globaldata.cpp ...
utils/color.h:36:3: style: Class 'Color' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Color(const osg::Vec4& color)
  ^
utils/colorschema.cpp:118:15: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
        while(fscanf(f,"%i %i %i %s\n",&r,&g,&b,s)==4){
              ^
utils/colorschema.cpp:124:15: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
        while(fscanf(f,"%i %i %i %s %s\n",&r,&g,&b,s,s2)==5){
              ^
utils/colorschema.cpp:152:12: warning: sscanf() without field width limits can crash with huge input data. [invalidscanf]
        if(sscanf(s,"%s %s %i\n",alias,name,&alias_set)==3){
           ^
utils/colorschema.cpp:156:18: warning: sscanf() without field width limits can crash with huge input data. [invalidscanf]
        }else if(sscanf(s,"%s %s\n",alias,name)==2){
                 ^
utils/colorschema.cpp:172:49: warning: Function 'addAlias' argument order different: declaration 'name, alias, alias_set' definition 'alias, name, alias_set' [funcArgOrderDifferent]
  bool ColorSchema::addAlias(const std::string& alias, const string& name,
                                                ^
utils/colorschema.h:91:38: note: Function 'addAlias' argument order different: declaration 'name, alias, alias_set' definition 'alias, name, alias_set'
    bool addAlias(const std::string& name, const std::string& alias, int alias_set = 0);
                                     ^
utils/colorschema.cpp:172:49: note: Function 'addAlias' argument order different: declaration 'name, alias, alias_set' definition 'alias, name, alias_set'
  bool ColorSchema::addAlias(const std::string& alias, const string& name,
                                                ^
utils/colorschema.cpp:221:24: performance: Function parameter 'x' should be passed by const reference. [passedByValue]
    void operator() (T x) { os << x << delimit; ++count; }
                       ^
utils/globaldata.cpp:25:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
286/300 files checked 97% done
utils/osghandle.h:42:5: warning: Member variable 'OsgConfig::tesselhints' is not initialized in the constructor. [uninitMemberVar]
    OsgConfig() : normalState(0), transparentState(0),
    ^
utils/osghandle.h:42:5: warning: Member variable 'OsgConfig::cs' is not initialized in the constructor. [uninitMemberVar]
    OsgConfig() : normalState(0), transparentState(0),
    ^
Checking utils/grabframe.cpp ...
utils/osghandle.h:54:5: warning: Member variable 'OsgScene::hud' is not initialized in the constructor. [uninitMemberVar]
    OsgScene() :  root(0), world(0),world_noshadow(0),scene(0),
    ^
utils/globaldata.h:59:7: warning: Member variable 'GlobalData::time' is not initialized in the constructor. [uninitMemberVar]
      GlobalData() {
      ^
utils/pos.h:40:5: style: Class 'Pos' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Pos (const osg::Vec3& v) : osg::Vec3(v) {}
    ^
utils/pos.h:41:5: style: Class 'Pos' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Pos (const osg::Vec4& v) : osg::Vec3(v.x(),v.y(),v.z()) {}
    ^
utils/pos.h:42:5: style: Class 'Pos' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Pos (const Position& p) : osg::Vec3(p.x, p.y, p.z) {}
    ^
utils/pos.h:43:5: style: Class 'Pos' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Pos (const dReal v[3]) : osg::Vec3(v[0], v[1], v[2]) {}
    ^
utils/sound.h:47:7: style: Struct 'older_than' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
      older_than(double time) : time(time) {}
      ^
287/300 files checked 97% done
utils/grabframe.cpp:24:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
utils/grabframe.cpp:25:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
utils/grabframe.cpp:27:0: information: Include file: <osgDB/WriteFile> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgDB/WriteFile>
^
utils/grabframe.h:27:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
utils/grabframe.h:28:0: information: Include file: <osg/Image> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Image>
^
utils/grabframe.h:29:0: information: Include file: <osg/Camera> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Camera>
^
utils/grabframe.h:30:0: information: Include file: <selforg/backcaller.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/backcaller.h>
^
utils/grabframe.h:37:5: warning: Member variable 'VideoStream::w' is not initialized in the constructor. [uninitMemberVar]
    VideoStream(){ opened=false; pause = false;}
    ^
utils/grabframe.h:37:5: warning: Member variable 'VideoStream::h' is not initialized in the constructor. [uninitMemberVar]
    VideoStream(){ opened=false; pause = false;}
    ^
Checking utils/gripper.cpp ...
utils/grabframe.h:37:5: warning: Member variable 'VideoStream::counter' is not initialized in the constructor. [uninitMemberVar]
    VideoStream(){ opened=false; pause = false;}
    ^
utils/grabframe.cpp:37:26: style: C-style pointer casting [cstyleCast]
      VideoStream * vs = (VideoStream *)this; // this is a dirty hack to get rid of the const
                         ^
288/300 files checked 97% done
utils/gripper.h:30:0: information: Include file: <selforg/configurable.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/configurable.h>
^
utils/gripper.h:31:0: information: Include file: <selforg/stl_map.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_map.h>
^
utils/gripper.h:32:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
Checking utils/imageppm.cpp ...
utils/tmpprimitive.h:28:0: information: Include file: <ode_robots/osgprimitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode_robots/osgprimitive.h>
^
utils/gripper.cpp:33:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
utils/imageppm.h:27:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
utils/imageppm.cpp:25:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
utils/imageppm.cpp:26:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
utils/imageppm.cpp:27:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
utils/imageppm.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
utils/imageppm.cpp:69:11: warning: Member variable 'ImagePPM::image_width' is not initialized in the constructor. [uninitMemberVar]
ImagePPM::ImagePPM ()
          ^
utils/imageppm.cpp:69:11: warning: Member variable 'ImagePPM::image_height' is not initialized in the constructor. [uninitMemberVar]
ImagePPM::ImagePPM ()
          ^
utils/imageppm.cpp:31:7: style: The scope of the variable 'c' can be reduced. [variableScope]
  int c,n=0;
      ^
utils/imageppm.cpp:46:7: style: The scope of the variable 'c' can be reduced. [variableScope]
  int c,d;
      ^
utils/gripper.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
289/300 files checked 97% done
Checking utils/mathutils.cpp ...
utils/gripper.cpp:41:5: performance: Variable 'last' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    last=(dGeomID)1;
    ^
utils/gripper.h:79:5: style: Class 'Gripper' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Gripper(const GripperConf& conf = getDefaultConf());
    ^
utils/tmpprimitive.h:85:18: style: The function 'update' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    virtual void update() {} // nothing to be done here, because they do not move
                 ^
utils/tmpobject.h:47:18: note: Virtual function in base class
    virtual void update()  override;
                 ^
utils/tmpprimitive.h:85:18: note: Function in derived class
    virtual void update() {} // nothing to be done here, because they do not move
                 ^
utils/gripper.cpp:87:18: style: C-style pointer casting [cstyleCast]
    Gripper* g = (Gripper*)(userdata);
                 ^
utils/gripper.cpp:95:53: style: C-style pointer casting [cstyleCast]
        Primitive* own   = dynamic_cast<Primitive*>((Primitive*)dGeomGetData (o1));
                                                    ^
utils/gripper.cpp:96:53: style: C-style pointer casting [cstyleCast]
        Primitive* other = dynamic_cast<Primitive*>((Primitive*)dGeomGetData (o2));
                                                    ^
utils/gripper.cpp:81:48: style: Parameter 'params' can be declared as reference to const. However it seems that 'onCollision' is a callback function, if 'params' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
  int Gripper::onCollision(dSurfaceParameters& params, GlobalData& globaldata,
                                               ^
utils/gripper.cpp:58:39: note: You might need to cast the function pointer here
    p->substance.setCollisionCallback(onCollision, this);
                                      ^
utils/gripper.cpp:81:48: note: Parameter 'params' can be declared as reference to const
  int Gripper::onCollision(dSurfaceParameters& params, GlobalData& globaldata,
                                               ^
utils/mathutils.cpp:24:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
utils/mathutils.cpp:25:0: information: Include file: <osg/Matrix> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Matrix>
^
utils/mathutils.h:27:0: information: Include file: <selforg/matrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/matrix.h>
^
utils/mathutils.h:28:0: information: Include file: <selforg/position.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/position.h>
^
utils/mathutils.h:30:0: information: Include file: <osg/Math> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Math>
^
utils/axis.h:27:0: information: Include file: <osg/Vec3> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Vec3>
^
utils/axis.h:28:0: information: Include file: <osg/Vec4> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Vec4>
^
utils/axis.h:29:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
utils/axis.h:30:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
290/300 files checked 97% done
Checking utils/odehandle.cpp ...
utils/axis.h:40:5: style: Class 'Axis' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Axis (const osg::Vec4& v) : osg::Vec4(v) { w() =0; }
    ^
utils/axis.h:41:5: style: Class 'Axis' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Axis (const osg::Vec3& v) : osg::Vec4(v,0) {}
    ^
utils/axis.h:42:5: style: Class 'Axis' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Axis (const dReal v[3]) : osg::Vec4(v[0], v[1], v[2], 0) {}
    ^
utils/odehandle.cpp:26:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <assert.h>
^
utils/odehandle.cpp:27:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
utils/odehandle.cpp:28:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
291/300 files checked 97% done
Checking utils/operators.cpp ...
utils/odehandle.cpp:34:14: warning: Member variable 'OdeHandle::time' is not initialized in the constructor. [uninitMemberVar]
  OdeHandle::OdeHandle()
             ^
utils/odehandle.cpp:34:14: warning: Member variable 'OdeHandle::ignoredSpaces' is not initialized in the constructor. [uninitMemberVar]
  OdeHandle::OdeHandle()
             ^
utils/odehandle.cpp:40:14: warning: Member variable 'OdeHandle::time' is not initialized in the constructor. [uninitMemberVar]
  OdeHandle::OdeHandle(  dWorldID _world, dSpaceID _space, dJointGroupID _jointGroup )
             ^
utils/odehandle.cpp:40:14: warning: Member variable 'OdeHandle::ignoredSpaces' is not initialized in the constructor. [uninitMemberVar]
  OdeHandle::OdeHandle(  dWorldID _world, dSpaceID _space, dJointGroupID _jointGroup )
             ^
utils/odehandle.cpp:42:5: performance: Variable 'world' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    world               = _world;
    ^
utils/odehandle.cpp:43:5: performance: Variable 'space' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    space               = _space;
    ^
utils/odehandle.cpp:44:5: performance: Variable 'jointGroup' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    jointGroup          = _jointGroup;
    ^
292/300 files checked 98% done
Checking utils/osghandle.cpp ...
utils/osghandle.cpp:26:0: information: Include file: <osg/Group> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/Group>
^
utils/osghandle.cpp:27:0: information: Include file: <osg/ShapeDrawable> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/ShapeDrawable>
^
utils/osghandle.cpp:28:0: information: Include file: <osg/BlendFunc> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osg/BlendFunc>
^
utils/osghandle.cpp:29:0: information: Include file: <osgGA/StateSetManipulator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <osgGA/StateSetManipulator>
^
293/300 files checked 98% done
utils/operators.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking utils/simulationtasksupervisor.cpp ...
utils/simulationtaskhandle.h:27:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
utils/taskedsimulation.h:29:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
utils/taskedsimulation.h:30:0: information: Include file: <selforg/quickmp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/quickmp.h>
^
utils/simulationtask.h:29:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
utils/simulationtask.h:30:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
utils/simulationtasksupervisor.h:28:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
utils/simulationtasksupervisor.cpp:33:0: information: Include file: <selforg/quickmp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/quickmp.h>
^
utils/simulationtasksupervisor.cpp:35:0: information: Include file: <ode-dbl/ode.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ode-dbl/ode.h>
^
utils/simulationtasksupervisor.cpp:36:0: information: Include file: <selforg/stl_adds.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <selforg/stl_adds.h>
^
utils/simulationtasksupervisor.cpp:37:0: information: Include file: <signal.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <signal.h>
^
utils/simulationtasksupervisor.cpp:38:0: information: Include file: <primitive.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <primitive.h>
^
utils/operators.h:79:5: style: Class 'LiftUpOperator' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    LiftUpOperator(const LiftUpOperatorConf conf = getDefaultConf())
    ^
utils/operators.cpp:168:11: style: Local variable 'p' shadows outer variable [shadowVariable]
      Pos p(vec);
          ^
utils/operators.cpp:148:16: note: Shadowed declaration
    Primitive* p  = r->getMainPrimitive();
               ^
utils/operators.cpp:168:11: note: Shadow variable
      Pos p(vec);
          ^
utils/operators.h:79:45: performance: Function parameter 'conf' should be passed by const reference. [passedByValue]
    LiftUpOperator(const LiftUpOperatorConf conf = getDefaultConf())
                                            ^
294/300 files checked 98% done
utils/simulationtask.h:40:5: style: Class 'SimulationTask' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    SimulationTask(int taskId) : taskId(taskId), sim(0) { }
    ^
utils/simulationtask.h:46:11: style: The scope of the variable 'returnValue' can be reduced. [variableScope]
      int returnValue=0;
          ^
Checking utils/sound.cpp ...
utils/simulationtask.h:46:22: style: Variable 'returnValue' is assigned a value that is never used. [unreadVariable]
      int returnValue=0;
                     ^
utils/quickprof.h:32:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
utils/quickprof.h:33:0: information: Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fstream>
^
utils/quickprof.h:34:0: information: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sstream>
^
utils/quickprof.h:35:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
utils/quickprof.h:36:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
utils/quickprof.h:43:0: information: Include file: <sys/time.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
    #include <sys/time.h>
^
Checking utils/simulationtasksupervisor.cpp: QPROF...
utils/simulationtasksupervisor.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/vision/BallPlaying2/main.cpp:681:36: style: C-style pointer casting [cstyleCast]
    int pos = Simulation::contains((char**)VersionStrings, VMax , argv[index]);
                                   ^
simulations/zweibeiner/zweibeiner.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
simulations/vision/BallPlaying2/main.cpp:396:14: style: Variable 'noise' can be declared as const array [constVariable]
      double noise[] = {1,1};
             ^
295/300 files checked 98% done
Checking utils/splitvideo.c ...
utils/splitvideo.c:27:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
 #include <stdlib.h>
^
utils/splitvideo.c:28:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
 #include <stdio.h>
^
utils/splitvideo.c:29:0: information: Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
 #include <assert.h>
^
296/300 files checked 99% done
Checking utils/tmpprimitive.cpp ...
utils/splitvideo.c:85:10: style: Variable 'fname' can be declared as pointer to const [constVariablePointer]
   char *fname = argv[1];
         ^
297/300 files checked 99% done
utils/tmpprimitive.cpp:113:13: warning: Member variable 'TmpJoint::alpha' is not initialized in the constructor. [uninitMemberVar]
  TmpJoint::TmpJoint(Joint* p, const Color& color, bool withVisual, double visualSize,
            ^
utils/tmpprimitive.cpp:50:7: warning: Class 'TmpPrimitive' does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s). [noCopyConstructor]
      item = new Sphere(0.1);
      ^
utils/tmpprimitive.cpp:50:7: warning: Class 'TmpPrimitive' does not have a operator= which is recommended since it has dynamic memory/resource allocation(s). [noOperatorEq]
      item = new Sphere(0.1);
      ^
utils/tmpprimitive.cpp:93:7: warning: Class 'TmpDisplayItem' does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s). [noCopyConstructor]
      item = new OSGSphere(0.1);
      ^
utils/tmpprimitive.cpp:93:7: warning: Class 'TmpDisplayItem' does not have a operator= which is recommended since it has dynamic memory/resource allocation(s). [noOperatorEq]
      item = new OSGSphere(0.1);
      ^
utils/tmpprimitive.h:55:16: style: Class 'TmpPrimitive' is unsafe, 'TmpPrimitive::item' can leak by wrong usage. [unsafeClassCanLeak]
    Primitive* item;
               ^
298/300 files checked 99% done
utils/quickprof.h:623:13: style: The statement 'if (mFirstCycle) mFirstCycle=false' is logically equivalent to 'mFirstCycle=false'. [duplicateConditionalAssign]
        if (mFirstCycle)
            ^
utils/quickprof.h:625:25: note: Assignment 'mFirstCycle=false'
            mFirstCycle = false;
                        ^
utils/quickprof.h:623:13: note: Condition 'mFirstCycle' is redundant
        if (mFirstCycle)
            ^
utils/quickprof.h:673:23: style: Variable 'block' can be declared as pointer to const [constVariablePointer]
        ProfileBlock* block = getProfileBlock(name);
                      ^
utils/quickprof.h:720:23: style: Variable 'block' can be declared as pointer to const [constVariablePointer]
        ProfileBlock* block = getProfileBlock(name);
                      ^
Checking utils/simulationtasksupervisor.cpp: WIN32;_WIN32...
299/300 files checked 99% done
simulations/zweibeiner/zweibeiner.cpp:71:15: warning: Member variable 'ZweiBeiner::rightfeed' is not initialized in the constructor. [uninitMemberVar]
  ZweiBeiner::ZweiBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
simulations/zweibeiner/zweibeiner.cpp:71:15: warning: Member variable 'ZweiBeiner::leftfeed' is not initialized in the constructor. [uninitMemberVar]
  ZweiBeiner::ZweiBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
simulations/zweibeiner/zweibeiner.cpp:71:15: warning: Member variable 'ZweiBeiner::rightlowerleg' is not initialized in the constructor. [uninitMemberVar]
  ZweiBeiner::ZweiBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
simulations/zweibeiner/zweibeiner.cpp:71:15: warning: Member variable 'ZweiBeiner::leftlowerleg' is not initialized in the constructor. [uninitMemberVar]
  ZweiBeiner::ZweiBeiner(const OdeHandle& odeHandle, const OsgHandle& osgHandle,
              ^
simulations/zweibeiner/zweibeiner.cpp:305:26: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      double l1 =       n<2 ? conf.legLength*0.45 : conf.legLength*0.5;
                         ^
simulations/zweibeiner/zweibeiner.cpp:307:26: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      double hipangle = n<2 ? -M_PI/18 : -M_PI/18;
                         ^
simulations/zweibeiner/zweibeiner.cpp:310:26: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      double l2 =       n<2 ? conf.legLength*0.45 : conf.legLength*0.5;
                         ^
simulations/zweibeiner/zweibeiner.cpp:312:27: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      double kneeangle = n<2 ? M_PI/5 : -M_PI/5;
                          ^
simulations/zweibeiner/zweibeiner.cpp:315:20: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      double l3 = n<2 ? conf.legLength*0.25 : 0;  // front legs have no feet
                   ^
simulations/zweibeiner/zweibeiner.cpp:317:28: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      double ankleangle = n<2 ? -M_PI/3 : 0;
                           ^
simulations/zweibeiner/zweibeiner.cpp:325:22: style: Condition 'n<2' is always true [knownConditionTrueFalse]
                    n<2 ? conf.legLength  : conf.legLength - theight/3);
                     ^
simulations/zweibeiner/zweibeiner.cpp:351:63: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      j = new HingeJoint(p1, p2, Pos(0,0,-l1/2) * m1, Axis(0,n<2 ? -1 : 1,0) * m1);
                                                              ^
simulations/zweibeiner/zweibeiner.cpp:364:11: style: Condition 'n<2' is always true [knownConditionTrueFalse]
      if(n<2){
          ^
simulations/zweibeiner/zweibeiner.cpp:307:40: style: Same value in both branches of ternary operator. [duplicateValueTernary]
      double hipangle = n<2 ? -M_PI/18 : -M_PI/18;
                                       ^
simulations/zweibeiner/zweibeiner.cpp:315:14: style: The scope of the variable 'l3' can be reduced. [variableScope]
      double l3 = n<2 ? conf.legLength*0.25 : 0;  // front legs have no feet
             ^
simulations/zweibeiner/zweibeiner.cpp:317:14: style: The scope of the variable 'ankleangle' can be reduced. [variableScope]
      double ankleangle = n<2 ? -M_PI/3 : 0;
             ^
simulations/zweibeiner/zweibeiner.cpp:318:14: style: The scope of the variable 'anklelowstop' can be reduced. [variableScope]
      double anklelowstop = -M_PI/5;
             ^
simulations/zweibeiner/zweibeiner.cpp:319:14: style: The scope of the variable 'anklehighstop' can be reduced. [variableScope]
      double anklehighstop = M_PI/5;
             ^
simulations/zweibeiner/zweibeiner.h:126:14: error: Uninitialized variable: c.onlyPrimaryFunctions [uninitvar]
      return c;
             ^
simulations/zweibeiner/zweibeiner.h:126:14: error: Uninitialized struct member: c.onlyPrimaryFunctions [uninitStructMember]
      return c;
             ^
simulations/zweibeiner/zweibeiner.cpp:195:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                              ^
simulations/zweibeiner/zweibeiner.cpp:198:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                        ^
simulations/zweibeiner/zweibeiner.cpp:402:81: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Primitive*>::iterator i = objects.begin(); i!= objects.end(); i++){
                                                                                ^
simulations/zweibeiner/zweibeiner.cpp:406:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (vector<Joint*>::iterator i = joints.begin(); i!= joints.end(); i++){
                                                                          ^
300/300 files checked 100% done
nofile:0:0: information: Unmatched suppression: unusedFunction [unmatchedSuppression]

nofile:0:0: information: Active checkers: There was critical errors (use --checkers-report=<filename> to see details) [checkersReport]

