# Do not edit, this is file generated by m4 from Makefile.4sim.m4 and 
#  copied to the simulations while installation! 
# Make your changes in Makefile.conf.
#  E.g. add there files to compile or custom libs and so on.

## File:     Makefile for selforg simulations
## Author:   Georg Martius  <martius@informatik.uni-leipzig.de>
## Date:     Oct 2009

define(`COMMENT', )
COMMENT(`There are defines for platform dependend stuff.
         DEV only produces output in the development version
         DEVORUSER  choice between development (first argument) or user (second)
         LINUXORMAC outputs the first argument on linux and the second on mac.')

# m4 file
ifdef(`DEVEL', 
`define(`DEVORUSER', $1) define(`DEV', $1)'
,
`define(`DEVORUSER', $2) define(`DEV',)'
)
ifdef(`MAC', 
`define(`LINUXORMAC', $2)'
,
`define(`LINUXORMAC', $1)'
)

EXEC = start
## add files to compile in the conf file
include Makefile.conf

CFILES = $(addsuffix .cpp, $(FILES))
OFILES = $(addsuffix .o, $(FILES))

# the CFGOPTS are set by the opt and dbg target
CFGOPTS=
LIBS   += $(shell selforg-config $(CFGOPTS) --static --libs)
INC    += -I.

DEV(LIBSELFORGLIB=$(shell selforg-config $(CFGOPTS) --libfile))
DEV(LIBSELFORGSHARED:=$(shell selforg-config $(CFGOPTS) --solibfile))
DEV(SRCPREFIX=$(shell selforg-config $(CFGOPTS) --srcprefix))

## use -pg for profiling
CPPFLAGS = -Wall -pipe -Wno-deprecated $(INC) $(shell selforg-config $(CFGOPTS) --intern --cflags) 

CXX = g++

normal: DEV(libselforg) 
	$(MAKE) $(EXEC)
opt   : DEV(libselforg_opt)
	$(MAKE) CFGOPTS=--opt EXEC=$(EXEC)_opt $(EXEC)
dbg   : DEV(libselforg_dbg)
	$(MAKE) CFGOPTS=--dbg EXEC=$(EXEC)_dbg $(EXEC)
shared:  DEV(libode_selforg_shared) 
	$(MAKE) BASELIBS="$(BASELIBSSHARED)" LIBSELFORG="$(LIBSELFORGSHARED)" $(EXEC)

$(EXEC): Makefile.depend $(OFILES) DEV($(LIBSELFORGLIB))
	$(CXX) $(OFILES) $(LIBS) -o $(EXEC)

DEV(
libselforg: 
	cd $(SRCPREFIX) && $(MAKE) lib

libselforg_dbg: 
	cd $(SRCPREFIX) && $(MAKE) dbg

libselforg_opt: 
	cd $(SRCPREFIX) && $(MAKE) opt

libselforg_shared:
	cd $(SRCPREFIX) && $(MAKE) shared
)

depend: 
	makedepend -- $(CPPFLAGS) -- $(CFILES) -f- > Makefile.depend 2>/dev/null

Makefile.depend:
	makedepend -- $(CPPFLAGS) -- $(CFILES) -f- > Makefile.depend 2>/dev/null

check-syntax:
	$(CXX) $(CPPFLAGS) -Wextra -S -fsyntax-only $(CHK_SOURCES)

todo:
	find -name "*.[ch]*" -exec grep -Hni "TODO" {} \;

tags: 
	etags $(find -name "*.[ch]")

clean:
	rm -f $(EXEC) $(EXEC)_opt $(EXEC)_dbg *.o Makefile.depend

include Makefile.depend
